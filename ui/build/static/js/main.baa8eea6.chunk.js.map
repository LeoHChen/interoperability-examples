{"version":3,"sources":["utils/txUtils.js","utils/networkingUtils.js","theme/theme.js","containers/NavContainer.js","containers/ActionTabsContainer.js","components/NetworkChooser.js","components/SwapTransactionStatus.js","containers/DepositContainer.js","components/StreamTransactionStatus.js","components/ClaimStreamTransaction.js","containers/Stream/ViewStreamContainer.js","components/StreamTransaction.js","components/Disclosure.js","containers/Stream/StreamContainer.js","App.js","serviceWorker.js","index.js","assets/renvm-logo.svg"],"names":["addTx","store","tx","storeString","type","txs","get","push","set","localStorage","setItem","JSON","stringify","window","updateTx","newTx","map","t","id","removeTx","filter","streamExists","streams","beneficiary","startTime","stream","destAddress","length","getStreams","a","this","props","web3","console","log","getState","adapterAddress","adapterContract","eth","Contract","streamAdapterABI","adapter","methods","getSchedules","call","schedules","recoverStreams","bind","utils","fromAscii","network","transactions","s","alreadyExists","toAscii","amount","BigNumber","Math","random","toFixed","instant","awaiting","source","dest","div","toNumber","duration","error","txHash","schedule","claimTransactions","calculateStreamProgress","amountClaimedPercentage","start","Number","now","floor","Date","end","totalClaimablePercentrage","amountClaimed","amountClaimablePercentage","totalClaimableAmount","claimedAmount","claimableAmount","remaingDuration","updateStreamInfo","sched","minutesClaimed","Object","assign","claim","web3Context","claimAmount","lib","getGasPrice","gasPrice","Promise","resolve","reject","send","from","accounts","round","gasLimit","on","hash","concat","timestamp","confirmationNumber","receipt","completeDeposit","pendingShiftIns","params","renResponse","renSignature","adapterABI","shiftInWithSwap","contractCalls","contractParams","value","sendAmount","autogen","nhash","result","addVestingSchedule","p","transactionHash","initShiftIn","renBtcAddress","ethSig","sdk","contractFn","name","data","sendToken","RenJS","Tokens","BTC","Btc2Eth","sats","sendTo","nonce","randomNonce","shiftIn","shiftIns","initDeposit","btcConfirmations","indexOf","addr","waitForDeposit","dep","utxo","confirmations","btcTxHash","txid","deposit","submitToRenVM","signature","response","initInstantSwap","address","fetch","method","headers","body","sourceAmount","sourceAsset","destinationAsset","destinationAddress","request","json","gatewayAddress","initInstantMonitoring","setInterval","req","status","initMonitoring","signKey","ephemeral","relay_client_config","txfee","verbose","initNetworking","fromConnection","gsn","initLocalTransactions","swaps","getItem","parse","switchNetwork","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","grey","overrides","PrivateNotchedOutline","root","MuiOutlinedInput","notchedOutline","borderColor","borderWidth","MuiTextField","MuiToggleButtonGroup","grouped","borderLeft","MuiToggleButton","border","backgroundColor","color","fontWeight","NavContainer","classes","walletAddress","state","Grid","item","xs","className","navContainer","container","alignItems","Typography","variant","React","Component","withStyles","paddingTop","theme","spacing","paddingBottom","minHeight","logo","height","width","marginRight","accountButton","withStore","ActionTabsContainer","location","pathname","match","history","src","RenVMLogo","Hidden","xsDown","Tabs","orientation","onChange","e","changeTabs","tabs","Tab","label","smUp","tabsMobile","withRouter","paddingRight","display","flexDirection","breakpoints","down","justifyContent","networkChooser","marginTop","fontSize","currentNetwork","Select","native","inputProps","Fragment","DepositContainer","clearInterval","swapMonitor","instantSwapSelected","showInstant","disabled","contentContainer","direction","desc","target","amountContainer","TextField","classNames","input","size","placeholder","InputProps","endAdornment","InputAdornment","position","switchContainer","FormControlLabel","control","Switch","checked","swapButtonContainer","Button","swapButton","onClick","startInstant","Divider","divider","unfinished","index","key","depositItem","depositStatus","SwapTransactionStatus","viewLink","href","info","caption","flexGrow","paper","borderRadius","shape","padding","marginBottom","title","btcLink","actionTabs","textAlign","complete","claimItem","links","marginLeft","progress","progressTop","progressMiddle","animationDuration","left","progressBottom","progressContainer","toLocaleString","ViewStreamContainer","loaded","totalClaimable","availableAmount","availablePercentage","initAddressRef","createRef","interval","scheduleInterval","mounted","selectedTx","setState","current","claimRequesting","backLink","back","hidden","initContainer","spinner","CircularProgress","spinnerTop","thickness","disableShrink","spinnerBottom","awaitingStatus","cancelLink","justify","depositAddress","inputRef","progressText","totalStreamed","decimals","claimButton","onView","onCancel","loadingContianer","margin","top","minWidth","claims","completed","Chip","icon","StreamContainer","activeView","searchAddress","searchLink","viewTx","radio","initialState","AppWrapper","selectedActionTab","Container","maxWidth","sm","md","content","warning","AppWrapperComponent","App","ThemeProvider","createStore","whiteSpace","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"uUAcaA,EAAQ,SAACC,EAAOC,GACzB,IAAMC,EAA0B,SAAZD,EAAGE,KAAkB,oBAAsB,sBAC3DC,EAAMJ,EAAMK,IAAIH,GACpBE,EAAIE,KAAKL,GACTD,EAAMO,IAAIL,EAAaE,GACvBI,aAAaC,QAAQP,EAAaQ,KAAKC,UAAUP,IAEjDQ,OAAOV,GAAeE,GAGbS,EAAW,SAACb,EAAOc,GAC5B,IAAMZ,EAA6B,SAAfY,EAAMX,KAAkB,oBAAsB,sBAC5DC,EAAMJ,EAAMK,IAAIH,GAAaa,IAAI,SAAAC,GACnC,OAAIA,EAAEC,KAAOH,EAAMG,GAERH,EAEJE,IAEXhB,EAAMO,IAAIL,EAAaE,GACvBI,aAAaC,QAAQP,EAAaQ,KAAKC,UAAUP,IAGjDQ,OAAOV,GAAeE,GAGbc,EAAW,SAAClB,EAAOC,GAC5B,IAAMC,EAA0B,SAAZD,EAAGE,KAAkB,oBAAsB,sBAC3DC,EAAMJ,EAAMK,IAAIH,GAAaiB,OAAO,SAAAH,GAAC,OAAKA,EAAEC,KAAOhB,EAAGgB,KAE1DjB,EAAMO,IAAIL,EAAaE,GACvBI,aAAaC,QAAQP,EAAaQ,KAAKC,UAAUP,IAGjDQ,OAAOV,GAAeE,GAGbgB,EAAe,SAASC,EAASC,EAAaC,GACvD,OAAOF,EAAQF,OAAO,SAAAK,GAAM,OAAKA,EAAOC,cAAgBH,GAAeE,EAAOD,YAAcA,IAAYG,OAAS,GAGxGC,EAAU,sCAAG,oCAAAC,EAAA,4DAEd5B,EAAW6B,KAAKC,MAAhB9B,MACF+B,EAAO/B,EAAMK,IAAI,QACvB2B,QAAQC,IAAIjC,EAAMkC,YAEZC,EAAiBnC,EAAMK,IAAI,yBAC3B+B,EAAkB,IAAIL,EAAKM,IAAIC,SAASC,EAAkBJ,GAEhEvB,OAAO4B,QAAUJ,EATK,SAUEA,EAAgBK,QAAQC,eAAeC,OAVzC,cAUhBC,EAVgB,yBAYfA,GAZe,+CAAH,qDAeVC,EAAc,sCAAG,WAAepB,GAAf,yBAAAG,EAAA,4DAClB5B,EAAU6B,KAAKC,MAAf9B,MACF+B,EAAO/B,EAAMK,IAAI,QAFG,SAGFsB,EAAWmB,KAAKjB,KAAhBF,GAHE,OAGpBiB,EAHoB,OAIpBtB,EAAcS,EAAKgB,MAAMC,UAAUvB,GACnCwB,EAAUjD,EAAMK,IAAI,mBACpB6C,EAAelD,EAAMK,IAAI,uBAAuBc,OAAO,SAAAH,GAAC,OAAIA,EAAEiC,UAAYA,IAEhFL,EAAU7B,IAAI,SAAAoC,GACV,IAAMC,EAAgBhC,EAAa8B,EAAcnB,EAAKgB,MAAMM,QAAQF,EAAE7B,aAAc6B,EAAE5B,WAEtF,GAAI4B,EAAE7B,cAAgBA,IAAgB8B,EAAe,CACjD,IAAME,EAAS,IAAIC,IAAUJ,EAAEG,QACzBrD,EAAK,CACPgB,GAAI,MAAQuC,KAAKC,SAASC,QAAQ,GAClCT,UACA9C,KAAM,SACNwD,SAAS,EACTC,SAAU,GACVC,OAAQ,MACRC,KAAM,MACNrC,cACA6B,OAAQA,EAAOS,IAAP,SAAW,GAAM,IAAGC,WAC5BzC,UAAW4B,EAAE5B,UACb0C,SAAUd,EAAEc,SACZC,OAAO,EACPC,OAAQ,GACRC,SAAUjB,EACVkB,kBAAmB,IAGvBtE,EAAMC,EAAOC,MA/BK,8CAAH,sDAsCdqE,EAA0B,SAASrE,GAC5C,IAAMmE,EAAWnE,EAAGmE,SAEpB,GAAIA,EAAU,CACV,IAKIG,EALEC,EAAQC,OAAOL,EAAS7C,WACxBmD,EAAMlB,KAAKmB,MAAMC,KAAKF,MAAQ,KAC9BG,EAAMJ,OAAOL,EAAS7C,WAAckD,OAA2B,GAApBL,EAASH,UAEtDa,EAA4B,EAG5BA,EADAJ,EAAMG,EACsB,IAEAJ,SAAUC,EAAMF,IANjCK,EAAML,GAM8C,KAAKd,QAAQ,IAEhFa,EAA0BE,QAASL,EAASW,cAAgBX,EAASd,OAAU,KAAKI,QAAQ,IAC5F,IAAMsB,EAA4BP,QAAQK,EAA4BP,GAAyBb,QAAQ,IAEjGJ,EAASrD,EAAGmE,UAAYnE,EAAGmE,SAASd,OAAZ,SAAsB,GAAM,IAAII,QAAQ,GAAK,EAK3E,MAAO,CACHJ,SACAwB,4BACAG,qBAPyB3B,GAAUwB,EAA4B,KAQ/DP,0BACAW,cARkBT,OAAOnB,GAAUiB,EAA0B,MAS7DS,4BACAG,gBAToBV,OAAOnB,GAAU0B,EAA4B,MAUjEI,gBAAiBP,EAAML,GAG3B,MAAO,CACHlB,OAAQ,EACRwB,0BAA2B,EAC3BG,qBAAsB,EACtBV,wBAAyB,EACzBW,cAAe,EACfF,0BAA2B,EAC3BG,gBAAiB,EACjBC,gBAAiB,IAOhBC,EAAgB,sCAAG,WAAepF,GAAf,+BAAA2B,EAAA,4DACpB5B,EAAW6B,KAAKC,MAAhB9B,MACF+B,EAAO/B,EAAMK,IAAI,QACfkB,EAA2BtB,EAA3BsB,UAAWE,EAAgBxB,EAAhBwB,YAEbH,EAAcS,EAAKgB,MAAMC,UAAUvB,GALb,SAMJE,EAAWmB,KAAKjB,KAAhBF,GANI,UAMtBiB,EANsB,OAQtBwB,EAAWxB,EAAUzB,OAAO,SAAAgC,GAAC,OAC/BsB,OAAOtB,EAAE5B,aAAekD,OAAOlD,IAC/B4B,EAAE7B,cAAgBA,IACnB,GAEHU,QAAQC,IAAI,WAAYmC,EAAUxB,IAE9BwB,IAAYA,EAAS9C,YAfG,wBAiBlBgE,EAAQ,CACVrE,GAAImD,EAASnD,GACbK,YAAa8C,EAAS9C,YACtBC,UAAW6C,EAAS7C,UACpB0C,SAAUG,EAASH,SACnBX,OAAQc,EAASd,OACjByB,cAAeX,EAASW,cACxBQ,eAAgBnB,EAASmB,iBAGzBzE,EAAQ0E,OAAOC,OAAOxF,EAAI,CAC1B2D,SAAU,GACVM,OAAO,KAELE,SAAWkB,EACjBzE,EAASb,EAAOC,GAhCQ,kBAiCjBa,GAjCiB,+CAAH,sDAqChB4E,EAAK,sCAAG,WAAezF,GAAf,0CAAA2B,EAAA,4DACT5B,EAAW6B,KAAKC,MAAhB9B,MACF+B,EAAO/B,EAAMK,IAAI,QACjBsF,EAAc3F,EAAMK,IAAI,eAExB8B,EAAiBnC,EAAMK,IAAI,yBACCJ,EAA1BwB,YAAa2C,EAAanE,EAAbmE,SAErBpE,EAAMO,IAAI,0BAA0B,GARnB,EAab+D,EAAwBrE,GAFxB6E,EAXa,EAWbA,0BACAP,EAZa,EAYbA,wBAGEqB,IAAiBd,EAA4BP,GAA2B,IAAOtE,EAAGqD,QAAQI,QAAQ,GAElGtB,EAAkB,IAAIL,EAAKM,IAAIC,SAASC,EAAkBJ,GAjB/C,UAkBMwD,EAAYE,IAAIxD,IAAIyD,cAlB1B,eAkBXC,EAlBW,OAoBjB/D,QAAQC,IAAI,WAAY8D,GApBP,kBAwBV,IAAIC,QAAJ,sCAAY,WAAOC,EAASC,GAAhB,SAAAtE,EAAA,8EAEUQ,EAAgBK,QAAQiD,MACzCtB,EAASnD,IACXkF,KAAK,CACHC,KAAMT,EAAYU,SAAS,GAC3BN,SAAUvC,KAAK8C,MAAiB,IAAXP,GACrBQ,SAAU,OACXC,GAAG,kBAAmB,SAACC,GACtB5F,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAC9BoE,kBAAmBpE,EAAGoE,kBAAkBqC,OAAO,CAAC,CAC5CC,UAAW/B,KAAKF,MAChBpB,OAAQsC,EACRzB,OAAQsC,EACRxD,QAAShD,EAAGgD,gBAGrBuD,GAAG,eAAgB,SAACI,EAAoBC,GACZ,IAAvBD,IACA5G,EAAMO,IAAI,0BAA0B,GACpCyB,QAAQC,IAAI,eAAgB2E,EAAoBC,GAChDxB,EAAiBvC,KAAK,EAAtBuC,CAA4BpF,GAC5BgG,OAtBG,8DA2BXjE,QAAQC,IAAI,mBAAZ,MACAjC,EAAMO,IAAI,0BAA0B,GACpC2F,IA7BW,uDAAZ,0DAxBU,+CAAH,sDA0DLY,EAAe,sCAAG,WAAe7G,GAAf,qCAAA2B,EAAA,4DACnB5B,EAAW6B,KAAKC,MAAhB9B,MACF+B,EAAO/B,EAAMK,IAAI,QACjBsF,EAAc3F,EAAMK,IAAI,eACxB0G,EAAkB/G,EAAMK,IAAI,mBAG1BY,EAA0DhB,EAA1DgB,GAAId,EAAsDF,EAAtDE,KAAM6G,EAAgD/G,EAAhD+G,OAAgD/G,EAAxC2D,SAAUqD,EAA8BhH,EAA9BgH,YAAaC,EAAiBjH,EAAjBiH,aAGpC,SAAT/G,EACAiC,EAAkB,IAAIL,EAAKM,IAAIC,SAAS6E,EAAYnH,EAAMK,IAAI,wBAC9C,WAATF,IACPiC,EAAkB,IAAIL,EAAKM,IAAIC,SAASC,EAAkBvC,EAAMK,IAAI,2BAb7C,SAgBJsF,EAAYE,IAAIxD,IAAIyD,cAhBhB,UAgBrBC,EAhBqB,OAkB3B/D,QAAQC,IAAI,WAAY8D,GAExBlF,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAAE2D,SAAU,gBAE9C5B,QAAQC,IAAI,kBAAmBhC,GAtBJ,UA0BV,SAATE,EA1BmB,kCA2BJiC,EAAgBK,QAAQ2E,gBACnCJ,EAAOK,cAAc,GAAGC,eAAe,GAAGC,MAC1C9C,OAAOuC,EAAOQ,YACdP,EAAYQ,QAAQC,MACpBR,GACFf,KAAK,CACHC,KAAMT,EAAYU,SAAS,GAC3BN,SAAUvC,KAAK8C,MAAiB,IAAXP,GACrBQ,SAAU,MAnCK,QA2BnBoB,EA3BmB,kCAqCH,WAATxH,EArCY,kCAsCJiC,EAAgBK,QAAQmF,mBACnCZ,EAAOK,cAAc,GAAGC,eAAe,GAAGC,MAC1CP,EAAOK,cAAc,GAAGC,eAAe,GAAGC,MAC1C9C,OAAOuC,EAAOK,cAAc,GAAGC,eAAe,GAAGC,OACjD9C,OAAOuC,EAAOQ,YACdP,EAAYQ,QAAQC,MACpBR,GACFf,KAAK,CACHC,KAAMT,EAAYU,SAAS,GAC3BN,SAAUvC,KAAK8C,MAAiB,IAAXP,GACrBQ,SAAU,OAhDK,eAsCnBoB,EAtCmB,iBAkDbtC,EAAiBvC,KAAKjB,KAAtBwD,CAA4BpF,GAlDf,QAoDvBD,EAAMO,IAAI,kBAAmBwG,EAAgB5F,OAAO,SAAA0G,GAAC,OAAIA,IAAM5G,KAC/DJ,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAAE2D,SAAU,GAAIO,OAAQwD,EAAOG,gBAAiB5D,OAAO,KArDlE,mDAuDvBlC,QAAQC,IAAR,MACApB,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAAEiE,OAAO,KAxDpB,yDAAH,sDA4Df6D,EAAc,SAAS9H,GAAK,IAEnCE,EASEF,EATFE,KACAmD,EAQErD,EARFqD,OAEA0D,GAME/G,EAPF+H,cAOE/H,EANF+G,QAEAvF,GAIExB,EALFgI,OAKEhI,EAJFwB,aAEAF,EAEEtB,EAFFsB,UACA0C,EACEhE,EADFgE,SAVkC,EAehCpC,KAAKC,MAAM9B,MAAMkC,WAFjBgG,EAbgC,EAahCA,IACAnG,EAdgC,EAchCA,KAGAI,EAAiB,GACjBgG,EAAa,GACbb,EAAiB,GAER,SAATnH,GACAgC,EAAiBN,KAAKC,MAAM9B,MAAMK,IAAI,uBACtC8H,EAAa,kBACbb,EAAiB,CACb,CACIc,KAAM,MACNjI,KAAM,UACNoH,MAAO9F,KAGC,WAATtB,IACPgC,EAAiBN,KAAKC,MAAM9B,MAAMK,IAAI,yBACtC8H,EAAa,qBACbb,EAAiB,CACb,CACIc,KAAM,eACNjI,KAAM,QACNoH,MAAOxF,EAAKgB,MAAMC,UAAUvB,IAEhC,CACI2G,KAAM,aACNjI,KAAM,UACNoH,MAAOhG,GAEX,CACI6G,KAAM,YACNjI,KAAM,SACNoH,MAAOtD,KAMnB,IAAMoE,EAAO,CACTC,UAAWC,IAAMC,OAAOC,IAAIC,QAC5BlB,WAAYe,IAAMxF,MAAMwE,MAAMjE,EAAQ,OAAOqF,OAC7CC,OAAQzG,EACRgG,aACAb,iBACAuB,MAAO7B,GAAUA,EAAO6B,MAAQ7B,EAAO6B,MAAQN,IAAMxF,MAAM+F,eAGzDC,EAAUb,EAAIa,QAAQV,GAI5B,OAFAzH,OAAOoI,SAAS1I,KAAKyI,GAEdA,GAGEE,EAAW,sCAAG,WAAehJ,GAAf,mCAAA2B,EAAA,wDACf5B,EAAW6B,KAAKC,MAAhB9B,MAEJiB,EAOAhB,EAPAgB,GACA+F,EAMA/G,EANA+G,OACApD,EAKA3D,EALA2D,SACAqD,EAIAhH,EAJAgH,YACAC,EAGAjH,EAHAiH,aACAhD,EAEAjE,EAFAiE,MAEAjE,EADAiJ,kBAGEnC,EAAkB/G,EAAMK,IAAI,oBACd8I,QAAQlI,GAAM,GAC9BjB,EAAMO,IAAI,kBAAmBwG,EAAgBL,OAAO,CAACzF,KAKzDe,QAAQC,IAAI,cAAehC,GAGtB2D,EAtBkB,oDAyBnBM,GACArD,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAAEiE,OAAO,MAI3C+C,IAAeC,GAAiBhD,EA9Bb,iBA+BnB4C,EAAgBhE,KAAKjB,KAArBiF,CAA2B7G,GA/BR,yCAkCG8H,EAAYjF,KAAKjB,KAAjBkG,CAAuB9H,GAlC1B,eAkCb8I,EAlCa,OAsCd/B,GACDjH,EAAMC,EAAOwF,OAAOC,OAAOxF,EAAI,CAC3B+G,OAAQ+B,EAAQ/B,OAChBgB,cAAee,EAAQK,UAzCZ,UA8CGL,EACjBM,eAAe,GACf7C,GAAG,UAAW,SAAA8C,GAEPA,EAAIC,MAEA1I,EAASb,EADI,aAAb4D,EACgB4B,OAAOC,OAAOxF,EAAI,CAC9B2D,SAAU,aACVsF,iBAAkBI,EAAIC,KAAKC,cAC3BC,UAAWH,EAAIC,KAAKG,OAGRlE,OAAOC,OAAOxF,EAAI,CAC9BiJ,iBAAkBI,EAAIC,KAAKC,cAC3BC,UAAWH,EAAIC,KAAKG,UA5DrB,eA8CbC,EA9Ca,OAkEnB9I,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAAE2D,SAAU,gBAlE3B,oBAqES+F,EAAQC,gBArEjB,QAqETC,EArES,OAsEfhJ,EAASb,EAAOwF,OAAOC,OAAOxF,EAAI,CAC9BgH,YAAa4C,EAAUC,SACvB5C,aAAc2C,EAAUA,aAG5B/C,EAAgBhE,KAAKjB,KAArBiF,CAA2B7G,GA3EZ,mDA6Ef+B,QAAQC,IAAR,MA7Ee,yDAAH,sDAkFX8H,EAAe,sCAAG,WAAe9J,GAAf,uBAAA2B,EAAA,4DACnB5B,EAAW6B,KAAKC,MAAhB9B,MACuDC,EAAvD+G,OAAuD/G,EAA/C2D,SAA+C3D,EAArCgH,YAAqChH,EAAxBiH,aAAwBjH,EAAViE,MAE/C8F,EAAUhK,EAAMK,IAAI,gBACpBiD,EAAStD,EAAMK,IAAI,eALE,SAOL4J,MAAM,GAAD,OAjdR,GAidQ,wBAAmC,CAC1DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM1J,KAAKC,UAAU,CACjB0J,aAAc/G,EACdgH,YAAa,MACbC,iBAAkB,MAClBC,mBAAoBR,MAhBD,cAOrBS,EAPqB,gBAmBRA,EAAQC,OAnBA,OAmBrBrC,EAnBqB,OAoB3BtI,EAAMC,EAAOwF,OAAOC,OAAOxF,EAAI,CAC3B+H,cAAeK,EAAKsC,kBArBG,+CAAH,sDAyBfC,EAAwB,WAAY,IAAD,OACtC5K,EAAQ6B,KAAKC,MAAM9B,MACnBiD,EAAUjD,EAAMK,IAAI,mBAEZwK,YAAW,qBAAC,sBAAAjJ,EAAA,qDACD5B,EAAMK,IAAI,qBAAqBc,OAAO,SAAAH,GAAC,OAAIA,EAAEiC,UAAYA,IACjE9B,OAAO,SAACH,GAAD,OAAQA,EAAE2C,SAA0B,aAAf3C,EAAE4C,WAA0B7C,IAArE,sCAAyE,WAAMd,GAAN,iBAAA2B,EAAA,qEACnDqI,MAAM,GAAD,OA1eZ,GA0eY,wCAA2ChK,EAAG+H,eAAiB,CAClFkC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ+C,cAC/DW,EAD+D,gBAQlDA,EAAIJ,OAR8C,OASjD,cADdrC,EAR+D,QAS5D0C,QACLlK,EAAS,EAAKiB,MAAM9B,MAAOwF,OAAOC,OAAOxF,EAAI,CACzC2D,SAAU,GACVO,OAAQkE,EAAKlE,UAZgD,yCAAzE,uDAFsB,yCAkBvB,MAGM6G,EAAiB,WAAY,IAAD,OAC/BhL,EAAQ6B,KAAKC,MAAM9B,MACnBiD,EAAUjD,EAAMK,IAAI,mBACpB0G,EAAkB/G,EAAMK,IAAI,mBACtBL,EAAMK,IAAI,qBAAqBqG,OAAO1G,EAAMK,IAAI,wBAAwBc,OAAO,SAAAH,GAAC,OAAIA,EAAEiC,UAAYA,IAE1GlC,IAAI,SAAAd,GACAA,EAAG2D,WAAa3D,EAAG0D,QACfoD,EAAgBoC,QAAQlJ,EAAGgB,IAAM,GACjCgI,EAAYnG,KAAK,EAAjBmG,CAAuBhJ,GAER,WAAZA,EAAGE,MACVkF,EAAiBvC,KAAK,EAAtBuC,CAA4BpF,MAKxCW,OAAOoI,SAAW,GAEH,I,okBCrgBf,IACMiC,EAAUC,sBACVC,EAAsB,CAC1BC,MAHuB,IAIvBC,SAAS,GAGEC,EAAc,sCAAG,WAAerI,GAAf,mBAAArB,EAAA,4DAClB5B,EAAU6B,KAAKC,MAAf9B,MADkB,SAGAuL,yBAAe,WAAD,OACb,YAAZtI,EAAwB,QAAU,UADT,kDAEpC,CACIuI,IAAI,EAAD,CAAIP,WAAYE,KAND,OAGpBxF,EAHoB,OAU1B3F,EAAMO,IAAI,cAAeoF,GACzB3F,EAAMO,IAAI,OAAQoF,EAAYE,KAExBqC,EAAM,IAAIK,IAAMtF,GACtBjD,EAAMO,IAAI,MAAO2H,GAEjBlI,EAAMO,IAAI,sBAAmC,YAAZ0C,ED/BJ,6CACA,8CC+B7BjD,EAAMO,IAAI,wBAAqC,YAAZ0C,ED9BJ,6CACA,8CCgC/BjD,EAAMO,IAAI,4BAA4B,GApBZ,+CAAH,sDAuBdkL,EAAqB,sCAAG,gCAAA7J,EAAA,qDACzB5B,EAAU6B,KAAKC,MAAf9B,MACF0L,EAAQlL,aAAamL,QAAQ,qBAC7BtK,EAAUb,aAAamL,QAAQ,uBAEjCD,GACA1L,EAAMO,IAAI,oBAAqBG,KAAKkL,MAAMF,IAG1CrK,GACArB,EAAMO,IAAI,sBAAuBG,KAAKkL,MAAMvK,IAVf,8CAAH,qDAcrBwK,EAAa,sCAAG,WAAe5I,GAAf,SAAArB,EAAA,4DACPC,KAAKC,MAAf9B,MACFO,IAAI,kBAAmB0C,GAFJ,SAGnBqI,EAAexI,KAAKjB,KAApByJ,CAA0BrI,GAHP,OAIzBwI,EAAsB3I,KAAKjB,KAA3B4J,GACAT,EAAelI,KAAKjB,KAApBmJ,GACAJ,EAAsB9H,KAAKjB,KAA3B+I,GANyB,8CAAH,sD,8CCxDXkB,cAAe,CAC1BC,QAAS,CACLC,QAAS,CACLC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,aAAc,QAGlBC,UAAWC,KAEfC,UAAW,CASPC,sBAAuB,CACnBC,KAAM,IAMVC,iBAAkB,CACdD,KAAK,CACD,UAAW,IASfE,eAAgB,CACZC,YAAa,kBACbC,YAAa,mBAGrBC,aAAc,GAGdC,qBAAsB,CACpBC,QAAS,CACP,sBAAuB,CACrBC,WAAY,uBAKlBC,gBAAiB,CACbT,KAAM,CACFU,OAAQ,oBACRC,gBAAiB,OACjB,iBAAkB,CAEdA,gBAAiB,kBACjBC,MAAO,OACPC,WAAY,MACZ,UAAW,CACPF,gBAAiB,oBAGzB,UAAW,CACPA,gBAAiB,wB,sCCjC/BG,G,YAEF,WAAYzL,GAAQ,qEACVA,I,gTAMA,IAAD,EAIDD,KAAKC,MAFL0L,EAFC,EAEDA,QAIEC,EAND,EAGDzN,MAGwBK,IAAI,iBACboN,GAAiBA,EAAc/L,OAIlD,OAFAM,QAAQC,IAAIJ,KAAKC,MAAOD,KAAK6L,MAAO7L,KAAKC,MAAM9B,MAAMkC,YAE9C,kBAACyL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACjB,kBAACF,GAAA,EAAD,CAAMG,UAAWN,EAAQO,aAAcC,WAAS,EAACC,WAAW,UAC3D,kBAACN,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,GAAA,EAAD,CAAMK,WAAS,EAACC,WAAW,UACvB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,MAApB,kC,GAxBKC,IAAMC,W,IAgClBC,YAlDA,iBAAO,CAClBP,aAAc,CACVQ,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,GAC7BE,UAAW,IAEfC,KAAM,CACFC,OAAQ,GACRC,MAAO,GACPC,YAAaP,EAAMC,QAAQ,IAE/BO,cAAe,CACb,QAAS,CACPD,YAAaP,EAAMC,QAAQ,OAqCpBH,CAAmBW,YAAU1B,K,8DCuBtC2B,G,YAEF,WAAYpN,GAAQ,IAAD,8BACf,4CAAMA,KACD4L,MAAQ5L,EAAM9B,MAAMkC,WAFV,E,kFAKG,IAAD,EACWL,KAAKC,MAAzBqN,EADS,EACTA,SAAUnP,EADD,EACCA,MACdmP,EAASC,UAAYD,EAASC,SAASC,MAAM,WAC7CrP,EAAMO,IAAI,oBAAqB,Y,iCAI5BgH,GACW1F,KAAKC,MAAf9B,MACFO,IAAI,oBAAqBgH,K,+BAGzB,IAAD,SAKD1F,KAAKC,MAHL0L,EAFC,EAEDA,QACAxN,EAHC,EAGDA,MACAsP,EAJC,EAIDA,QAKJ,OAAO,yBAAKxB,UAAWN,EAAQQ,WAC3B,yBAAKF,UAAWN,EAAQoB,KAAMW,IAAKC,OACnC,kBAACC,GAAA,EAAD,CAAQC,QAAM,GACV,kBAACC,GAAA,EAAD,CACIC,YAAY,WACZrI,MAAOvH,EAAMK,IAAI,qBACjBwP,SAAU,SAACC,EAAGvI,GACV,EAAKwI,WAAWjN,KAAK,EAArB,CAA2ByE,GAC3B+H,EAAQhP,KAAe,aAAViH,EAAuB,IAAM,YAE9CuG,UAAWN,EAAQwC,MAEnB,kBAACC,GAAA,EAAD,CAAK1I,MAAO,WAAY2I,MAAM,aAC9B,kBAACD,GAAA,EAAD,CAAK1I,MAAO,SAAU2I,MAAM,aAGpC,kBAACT,GAAA,EAAD,CAAQU,MAAI,GACR,kBAACR,GAAA,EAAD,CACIpI,MAAOvH,EAAMK,IAAI,qBACjBwP,SAAU,SAACC,EAAGvI,GACV,EAAKwI,WAAWjN,KAAK,EAArB,CAA2ByE,GAC3B+H,EAAQhP,KAAe,aAAViH,EAAuB,IAAM,YAE9CuG,UAAWN,EAAQ4C,YAEnB,kBAACH,GAAA,EAAD,CAAK1I,MAAO,WAAY2I,MAAM,aAC9B,kBAACD,GAAA,EAAD,CAAK1I,MAAO,SAAU2I,MAAM,kB,GAtDd9B,IAAMC,WA6DzBgC,gBAAW/B,YAjIX,iBAAO,CAClB0B,KAAM,CACFzB,WAAYC,EAAMC,QAAQ,GAC1B6B,aAAc9B,EAAMC,QAAQ,GAC5B,2BAA4B,CACxBR,WAAY,YAEhB,oBAAqB,CACjBA,WAAY,YAGhB,2BAA4B,CACxBb,gBAAiB,eAErB,mCAAoC,CAChCC,MAAO,WAEX,gDAAiD,CAC7CA,MAAO,QAEXyB,MAAO,QAEXsB,WAAY,CAGR,2BAA4B,CACxBnC,WAAY,YAEhB,oBAAqB,CACjBA,WAAY,YAGhB,2BAA4B,CACxBb,gBAAiB,eAErB,mCAAoC,CAChCC,MAAO,WAEX,gDAAiD,CAC7CA,MAAO,SAIfuB,KAAM,CACFE,MAAO,IACPD,OAAQ,OACRE,YAAaP,EAAMC,QAAQ,MAE/BT,UAAU,aACNuC,QAAS,OACTC,cAAe,SACfvC,WAAY,WACZM,WAAYC,EAAMC,QAAQ,IACzBD,EAAMiC,YAAYC,KAAK,MAAQ,CAC5BzC,WAAY,SACZ0C,eAAgB,gBAChBH,cAAe,MACfjC,WAAYC,EAAMC,QAAQ,KAGlCmC,eAAgB,CACZ7B,YAAaP,EAAMC,QAAQ,KAC3BoC,UAAWrC,EAAMC,QAAQ,MAmEPH,CAAmBW,YAAUC,M,6EC7HxCZ,mBAtBA,iBAAO,CAClBN,UAAW,CACP8C,SAAU,MAoBHxC,CAhBf,SAAwBxM,GAAO,IACnBiP,EAAsCjP,EAAtCiP,eAAgBlB,EAAsB/N,EAAtB+N,SAAUrC,EAAY1L,EAAZ0L,QAClC,OAAO,kBAACwD,GAAA,EAAD,CACHC,QAAM,EACN1J,MAAOwJ,EACPjD,UAAWN,EAAQQ,UACnB6B,SAAUA,EACVqB,WAAY,CACR9I,KAAM,GACNnH,GAAI,sBAER,4BAAQsG,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,cCIO+G,eAzBA,iBAAO,IAyBPA,CAtBiB,SAASxM,GAAQ,IAEzC7B,EACA6B,EADA7B,GAGJ,OAAO,kBAAC,IAAMkR,SAAP,KACkB,aAAhBlR,EAAG2D,SAA0B,6EACsB,6BADtB,UACgC3D,EAAG+H,gBACvD,KACO,eAAhB/H,EAAG2D,SAA4B,oEACI3D,EAAGiJ,iBADP,IAC2B,IAD3B,eAEtB,KACO,eAAhBjJ,EAAG2D,SAA4B,qDAEtB,KACO,eAAhB3D,EAAG2D,SAA4B,wDAEtB,KACR3D,EAAG2D,SAA4C,KAAjC,kDCgKtBwN,IAhJUlG,sBAmHOkD,IAAMC,U,YA+BzB,WAAYvM,GAAQ,qEACVA,I,8TAONuP,cAAcxP,KAAKyP,e,oJAIXtR,EAAU6B,KAAKC,MAAf9B,MACFsD,EAAStD,EAAMK,IAAI,eACnB2J,EAAUhK,EAAMK,IAAI,gBACLL,EAAMK,IAAI,qBACzB4C,EAAUjD,EAAMK,IAAI,mBAEpBJ,EAAK,CACPgB,GAAI,MAAQuC,KAAKmB,MAAMnB,KAAKC,SAALD,KAAA,IAAiB,GAAM,KAC9CP,UACA9C,KAAM,OACNwD,SAAS,EACTC,SAAU,WACVnC,YAAauI,EACb1G,OAAQA,EACRY,OAAO,EACPC,OAAQ,IAGZ8E,EAAYnG,KAAKjB,KAAjBoH,CAAuBhJ,G,+PAIfD,EAAU6B,KAAKC,MAAf9B,MACFsD,EAAStD,EAAMK,IAAI,eACnB2J,EAAUhK,EAAMK,IAAI,gBACLL,EAAMK,IAAI,qBACzB4C,EAAUjD,EAAMK,IAAI,mBAEpBJ,EAAK,CACPgB,GAAI,MAAQuC,KAAKmB,MAAMnB,KAAKC,SAALD,KAAA,IAAiB,GAAM,KAC9CP,UACA9C,KAAM,OACNwD,SAAS,EACTC,SAAU,WACVnC,YAAauI,EACb1G,OAAQA,EACRY,OAAO,EACPC,OAAQ,IAGZ4F,EAAgBjH,KAAKjB,KAArBkI,CAA2B9J,G,mIAGrB,IAAD,SAID4B,KAAKC,MAFL0L,EAFC,EAEDA,QACAxN,EAHC,EAGDA,MAGEiD,EAAUjD,EAAMK,IAAI,mBACpB8B,EAAiBnC,EAAMK,IAAI,uBAC3BkR,EAAsBvR,EAAMK,IAAI,4BAChC6C,EAAelD,EAAMK,IAAI,qBAAqBc,OAAO,SAAAH,GAAC,OAAIA,EAAEiC,UAAYA,IACxEK,EAAStD,EAAMK,IAAI,eACnB2J,EAAUhK,EAAMK,IAAI,gBACpBmR,EAA0B,YAAZvO,EAEpBjB,QAAQC,IAAIjC,EAAMkC,YAElB,IAAMuP,EAAWnO,GAAU,MAAWA,EAAS,MAAUiO,IAAyBvH,EAElF,OAAO,kBAAC2D,GAAA,EAAD,CAAMK,WAAS,GAGlB,kBAACL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQkE,kBAClC,kBAAC/D,GAAA,EAAD,CAAMK,WAAS,EAAC2D,UAAU,OACtB,kBAAChE,GAAA,EAAD,CAAMG,UAAWN,EAAQoE,KAAMhE,MAAI,EAACC,GAAI,IACpC,kDACA,kBAAC,GAAD,CACIkD,eAAgB9N,EAChB4M,SAAU,SAACC,GACPjE,EAAc/I,KAAK,EAAnB+I,CAAyBiE,EAAE+B,OAAOtK,WAI9C,kBAACoG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACF,GAAA,EAAD,CAAMK,WAAS,GACX,kBAACL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,UAAWN,EAAQsE,iBACjC,kBAACC,GAAA,EAAD,CAAWjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQlK,QACpD6K,QAAQ,WACR+D,KAAK,QACLC,YAAY,WACZtC,SAAU,SAAAC,GACN9P,EAAMO,IAAI,cAAeuP,EAAE+B,OAAOtK,QAEtC6K,WAAY,CACRC,aAAc,kBAACC,GAAA,EAAD,CAAgBxE,UAAWN,EAAQ6E,aAAcE,SAAS,OAA1D,WAG1B,kBAAC5E,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACkE,GAAA,EAAD,CAAWjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQxD,SAAUmE,QAAQ,WAAW+D,KAAK,QAAQC,YAAY,sBAAsBtC,SAAU,SAAAC,GAC1I9P,EAAMO,IAAI,eAAgBuP,EAAE+B,OAAOtK,aAMnD,kBAACoG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQgF,iBACjChB,GAAe,kBAACiB,GAAA,EAAD,CAAkBC,QAAS,kBAACC,GAAA,EAAD,CAAQC,QAASrB,EACxDlE,MAAM,UACNwC,SAAU,kBAAM7P,EAAMO,IAAI,4BAA6BgR,IACvDhK,MAAO,YAAe2I,MAAM,mDAEpC,kBAACvC,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQqF,qBAClC,kBAACC,GAAA,EAAD,CAAQrB,SAAUA,EAAU3D,UAAWN,EAAQuF,WAAY5E,QAAQ,WAAWd,MAAM,UAAU2F,QAASzB,EAAsB1P,KAAKoR,aAAanQ,KAAKjB,MAAQA,KAAK2C,MAAM1B,KAAKjB,OAA5K,eAEHqB,GAAgBA,EAAaxB,OAAS,kBAACiM,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAAI,kBAACqF,GAAA,EAAD,CAASpF,UAAWN,EAAQ2F,WAAqB,KAC3G,kBAACxF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQ4F,YACjClQ,GAAgBA,EAAaxB,OAASwB,EAAanC,IAAI,SAACd,EAAIoT,GACrD,OAAO,kBAAC1F,GAAA,EAAD,CAAM2F,IAAKD,EAAOrF,WAAS,EAAC2D,UAAU,MAAM7D,UAAWN,EAAQ+F,aAClE,kBAAC5F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACV5N,EAAGqD,OADR,QAGA,kBAACqK,GAAA,EAAD,CAAMG,UAAWN,EAAQgG,cAAe5F,MAAI,EAACC,GAAI,GAC7C,kBAAC4F,GAAD,CAAuBxT,GAAIA,IAC3B,6BACqB,eAAhBA,EAAG2D,SAA4B,uBAAGkK,UAAWN,EAAQkG,SAAU7B,OAAO,SAAS8B,KAAI,uCAAiD,YAAf1T,EAAGgD,QAAwB,cAAgB,MAA7E,eAAyFhD,EAAGwJ,YAAhJ,oBAAoL,KACnM,aAAhBxJ,EAAG2D,UAA2B3D,EAAGiE,QAAUjE,EAAG2D,SAAW,6BACrD3D,EAAGkE,OAAS,uBAAG2J,UAAWN,EAAQkG,SAAU7B,OAAO,SAAS8B,KAAM,YAA6B,YAAf1T,EAAGgD,QAAwB,SAAW,IAAM,mBAAmBhD,EAAGkE,QAAtI,oBAAqK,KAClL,uBAAGwP,KAAK,eAAeX,QAAS,WAC5B9R,EAASlB,EAAOC,KACfA,EAAG2D,SAAqB,SAAV,UAAgC,UAIlE,QAKpB,kBAAC+J,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQoG,MACnC,2BACI,uBAAG9F,UAAWN,EAAQqG,SAAtB,gBACA,6BACA,6BAHJ,sBAIuB,uBAAGhC,OAAO,SAAS8B,KAAK,0BAAxB,SAJvB,KAImF,uBAAG9B,OAAO,SAAS8B,KAAK,uBAAxB,WAJnF,yBAIkK,uBAAG9B,OAAO,SAAS8B,KAAK,iCAAxB,OAJlK,6HAI2V,2CAJ3V,+CAI0Z,2CAJ1Z,oEAMA,2BACI,4BACI,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,mDAAzB,iBAAJ,4BACA,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,mDAAzB,iBAAJ,iDAGR,oFAC0D,uBAAG9B,OAAO,SAAS8B,KAAM,YAA0B,YAAZ1Q,EAAwB,SAAW,IAAM,wBAAwBd,GAAiBA,IAEnL,0HACgG,uBAAG0P,OAAO,SAAS8B,KAAK,oCAAxB,oBADhG,2BAEI,4BACI,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,iDAAzB,+BACJ,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,oDAAzB,mCACJ,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,0CAAzB,kBAGZ,kC,GAxKevF,IAAMC,YAiLtBC,eApTA,iBAAO,CACpB7B,KAAM,CACJqH,SAAU,GAEZC,MAAO,GAEPhG,aAAc,CACZQ,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,GAC7BE,UAAW,IAEb+C,iBAAkB,CAEdsC,aAAcxF,EAAMyF,MAAMD,aAC1B7G,OAAQ,oBACR+G,QAAS1F,EAAMC,QAAQ,GAGvB0F,aAAc3F,EAAMC,QAAQ,GAC5B,UAAW,IAGfwD,MAAO,CACHkC,aAAc3F,EAAMC,QAAQ,GAC5BK,MAAO,OACP,UAAW,CACPgC,SAAU,IAEd,MAAO,CACHA,SAAU,IAEd,qCAAsC,CAClClE,YAAa,kCAGrBkF,gBAAiB,CACfxB,aAAc9B,EAAMC,QAAQ,IAE9BnL,OAAQ,GAER8Q,MAAO,CACHtD,SAAU,GACVxD,WAAY,IACZuD,UAAWrC,EAAMC,QAAQ,IAE7B2E,WAAY,GAGZG,YAAa,CACTzC,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,IAEhC+E,cAAe,CACXjD,QAAS,OACTI,eAAgB,iBAEpBiD,KAAM,CACF9C,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,GAC5B,MAAO,CACH0F,aAAc,IAGtBhB,QAAS,CACLtC,UAAWrC,EAAMC,QAAQ,GACzB0F,aAAc3F,EAAMC,QAAQ,GAC5BrB,gBAAiB,WAErBwE,KAAM,CACFuC,aAAc3F,EAAMC,QAAQ,GAC5BqC,SAAU,GACVP,QAAS,OACTtC,WAAY,SACZ0C,eAAgB,iBAEpB0D,QAAS,CACLvD,SAAU,IAEd4C,SAAU,CACN5C,SAAU,GACV/B,YAAaP,EAAMC,QAAQ,IAE/B6F,WAAY,CACRzD,UAAWrC,EAAMC,QAAQ,GACzB0F,aAAc3F,EAAMC,QAAQ,IAEhCoE,oBAAqB,CACjB0B,UAAW,SACXhG,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,IAEjC+D,gBAAiB,CACb+B,UAAW,SACX7F,cAAeF,EAAMC,QAAQ,GAC7B,+BAAgC,CAC5BqC,SAAU,KAGlBiC,WAAY,KAkNCzE,CAAmBW,YAAUmC,K,gCCrU7B9C,eAhCA,iBAAO,IAgCPA,CA7BiB,SAASxM,GAAQ,IAEzC7B,EACA6B,EADA7B,GAFwC,EAQxCqE,EAAwBrE,GAFxB6E,EANwC,EAMxCA,0BAIE0P,GAVsC,EAOxCjQ,wBAG2C,MAA9BO,GAEjB,OAAO,kBAAC,IAAMqM,SAAP,KACkB,aAAhBlR,EAAG2D,SAA0B,6EAEpB,KACO,eAAhB3D,EAAG2D,SAA4B,oEACI3D,EAAGiJ,iBADP,IAC2B,IAD3B,eAEtB,KACO,eAAhBjJ,EAAG2D,SAA4B,8BAC3B3D,EAAGiE,MAAH,mDACK,KACO,eAAhBjE,EAAG2D,SAA4B,8BAC3B3D,EAAGiE,MAAH,yDACK,KACRjE,EAAG2D,SAAmF,KAAxE,8BAAO4Q,EAAQ,8CCuD5BlG,eA3EA,iBAAO,CAClBmG,UAAW,CACP3D,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,GAC5B8B,QAAS,OACTzB,MAAO,QAEX0E,cAAe,CACXjD,QAAS,OACTI,eAAgB,iBAEpB+D,MAAO,CACH,MAAO,CACHC,WAAYnG,EAAMC,QAAQ,KAGlCmG,SAAU,CACNrC,SAAU,WACVxD,YAAaP,EAAMC,QAAQ,GAC3BK,MAAO,GACPD,OAAQ,IAGZgG,YAAa,CACTxH,MAAO,QAEXyH,eAAgB,CACZzH,MAAO,YACP0H,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVC,eAAgB,CACZ5H,MAAO,UACP0H,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVE,kBAAmB,CACf3C,SAAU,WAEV4B,aAAc3F,EAAMC,QAAQ,IAEhCmF,KAAM,CACFrD,QAAS,OACTI,eAAgB,mBA8BTrC,CA1BgB,SAASxM,GAAQ,IAExC7B,EAGA6B,EAHA7B,GACAoT,EAEAvR,EAFAuR,MACA7F,EACA1L,EADA0L,QAGJ,OAAO,kBAACG,GAAA,EAAD,CAAMG,UAAWN,EAAQiH,UAAWnB,IAAKD,GAC5C,kBAAC1F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,GAAA,EAAD,CAAMK,WAAS,EAACC,WAAW,UACvB,8BAAOhO,EAAGqD,OAAV,UAGR,kBAACqK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,UAAWN,EAAQoG,MACjC,yBAAK9F,UAAWN,EAAQkH,OACpB,uBAAG7C,OAAO,SAAS8B,KAAM,YAA4B,YAAf1T,EAAGgD,QAAwB,SAAW,IAAK,mBAAmBhD,EAAGkE,OAAO2J,UAAWN,EAAQkG,UAAjI,qBAIJ,6BACI,8BAAQ,IAAI9O,KAAK3E,EAAG0G,WAAWwO,uBCiEzCC,G,YACF,WAAYtT,GAAQ,IAAD,8BACf,4CAAMA,KACD4L,MAAQ,CACT2H,QAAQ,EACRC,eAAgB,GAChBvQ,cAAe,GACfR,wBAAyB,GACzBgR,gBAAiB,GACjBC,oBAAqB,GACrBpQ,gBAAiB,IAErB,EAAKqQ,eAAiBrH,IAAMsH,YAC5B,EAAKC,SAAW,KAChB,EAAKC,iBAAmB,KACxB,EAAKC,SAAU,EAdA,E,sMAkBTC,EAAajU,KAAKC,MAAM9B,MAAMK,IAAI,qB,SAClCgF,EAAiBvC,KAAKjB,KAAtBwD,CAA4ByQ,G,OAClCjU,KAAKkU,SAAS,CACVV,QAAQ,IAGRxT,KAAK4T,eAAeO,UACpBnU,KAAK4T,eAAeO,QAAQzO,MAAQuO,EAAW9N,e,iJAS/CnG,KAAK8T,UACLtE,cAAcxP,KAAK8T,Y,2EAOnB,IACI3V,EAAU6B,KAAKC,MAAf9B,MACRA,EAAMO,IAAI,oBAAqB,SAC/BP,EAAMO,IAAI,oBAAqB,Q,qJAKvBP,EAAU6B,KAAKC,MAAf9B,MACF8V,EAAa9V,EAAMK,IAAI,qB,SACvBqF,EAAM5C,KAAKjB,KAAX6D,CAAiBoQ,G,mIAGjB,IAAD,SAIDjU,KAAKC,MAFL0L,EAFC,EAEDA,QACAxN,EAHC,EAGDA,MAGE8V,EAAa9V,EAAMK,IAAI,qBAGzBgV,EACAxT,KAAK6L,MADL2H,OAGET,EAAWtQ,EAAwBwR,GAGrChR,EAQA8P,EARA9P,0BACAP,EAOAqQ,EAPArQ,wBAEAa,GAKAwP,EANA5P,0BAMA4P,EALAxP,iBACA9B,EAIAsR,EAJAtR,OACA2B,EAGA2P,EAHA3P,qBACAC,EAEA0P,EAFA1P,cACAC,EACAyP,EADAzP,gBAGId,EAAsByR,EAAtBzR,kBACF4R,EAAkBjW,EAAMK,IAAI,0BAC5B4C,EAAUjD,EAAMK,IAAI,mBAI1B,OAFA2B,QAAQC,IAAI,WAAY2S,GAEjB,kBAAC,IAAMzD,SAAP,KACH,yBAAKrD,UAAWN,EAAQ0I,UACpB,uBAAGvC,KAAK,eAAeX,QAASnR,KAAKsU,KAAKrT,KAAKjB,OAAQ,SAEzDwT,EAkBF,kBAAC,IAAMlE,SAAP,KACI,kBAACxD,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWgI,EAAW1R,SAAWoJ,EAAQ4I,OAAS5I,EAAQ6I,eACzE,kBAAC1I,GAAA,EAAD,CAAMK,WAAS,GACX,kBAACL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,yBAAKC,UAAWN,EAAQ8I,SAClB,kBAACC,GAAA,EAAD,CACEpI,QAAQ,cACR5G,MAAO,IACPuG,UAAWN,EAAQgJ,WACnBtE,KAAM,GACNuE,UAAW,IAEb,kBAACF,GAAA,EAAD,CACEpI,QAAQ,gBACRuI,eAAa,EACb5I,UAAWN,EAAQmJ,cACnBzE,KAAM,GACNuE,UAAW,MAIvB,kBAAC9I,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQoJ,gBAClC,kBAAC,GAAD,CAAyB3W,GAAI6V,KACH,aAAxBA,EAAWlS,UAA2BkS,EAAW5R,QAC/C,2BAAG,uBAAGyP,KAAK,eACP7F,UAAWN,EAAQqJ,WACnB7D,QAAS,WACL9R,EAASlB,EAAO8V,GAChB9V,EAAMO,IAAI,oBAAqB,MAC/BP,EAAMO,IAAI,oBAAqB,WALpC,WAUkB,eAAxBuV,EAAWlS,UAA6B,2BAAG,uBAAGiO,OAAO,SAAS8B,KAAI,uCAA8C,YAAZ1Q,EAAwB,cAAgB,MAA1E,eAAsF6S,EAAWrM,WAChKqE,UAAWN,EAAQqJ,YADqB,8BAKhD,kBAAClJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAImF,QAAS,cACxB,kBAACrF,GAAA,EAAD,CAAMK,WAAS,EAAC8I,QAAQ,UACK,aAAxBhB,EAAWlS,UAA2B,yBAAKkK,UAAWN,EAAQuJ,gBAC3D,2BAAG,6CAAejB,EAAWxS,OAA1B,oCACH,kBAACyO,GAAA,EAAD,CAAWjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQxD,SACpDkG,MAAO,GACP/B,QAAQ,WACR+D,KAAK,QACLC,YAAY,kBACZ6E,SAAUnV,KAAK4T,oBAK/B,kBAAC9H,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACF,GAAA,EAAD,CAAMK,WAAS,EAAC8I,QAAQ,UACK,aAAxBhB,EAAWlS,UAA2BkS,EAAW5R,QAAU4R,EAAWlS,SAAW,yBAAKkK,UAAWN,EAAQqJ,YACrGf,EAAW3R,OAAS,uBAAG2J,UAAWN,EAAQkG,SAAU7B,OAAO,SAAS8B,KAAM,YAAyB,YAAZ1Q,EAAwB,SAAW,IAAK,mBAAmB6S,EAAW3R,QAAzI,oBAAwK,MACxL,SAMzB,yBAAK2J,UAAWgI,EAAW1R,UAAYiR,EAAS7H,EAAQ0H,kBAAoB1H,EAAQ4I,QAChF,kBAACzI,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,yBAAKC,UAAWN,EAAQoH,UAClB,kBAAC2B,GAAA,EAAD,CACEpI,QAAQ,SACR5G,MAAO,IACPuG,UAAWN,EAAQqH,YACnB3C,KAAM,IACNuE,UAAW,IAEb,kBAACF,GAAA,EAAD,CACEpI,QAAQ,SACRL,UAAWN,EAAQsH,eACnB5C,KAAM,IACN3K,MAAO9C,OAAOK,GACd2R,UAAW,IAEb,kBAACF,GAAA,EAAD,CACEpI,QAAQ,SACRL,UAAWN,EAAQyH,eACnB/C,KAAM,IACN3K,MAAO9C,OAAOF,GACdkS,UAAW,KAGnB,yBAAK3I,UAAWN,EAAQyJ,cACpB,6BACI,uBAAGnJ,UAAWN,EAAQ0J,eAClB,2BAAI5T,EAAJ,UAGR,2BACI,2BAAI4B,EAAcxB,QAAQ,GAA1B,MAAgC,kBAAC,KAAD,CAASc,MAAOS,EAAsBJ,IAAKiR,EAAWxS,OAAQW,SAAUmB,EAAiB+R,SAAU,GAAIhS,GAAvI,SAEJ,2BACI,6CAKhB,kBAACwI,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWgI,EAAW1R,UAAYiR,EAAQ7H,EAAQ4J,YAAc5J,EAAQ4I,QACtFjR,EVlWW,SUkW0B,kBAAC2N,GAAA,EAAD,CAAQrB,SAAUwE,EACpDnI,UAAW,GACXK,QAAQ,WACRd,MAAM,UACN2F,QAAS,WACL,EAAKtN,MAAM5C,KAAK,EAAhB,KAEHmT,EAAe,4CAA0C9Q,EAAgBzB,QAAQ,GAAlE,SACR,8BAAOoB,EAA4B,IAA5B,kCV1WP,SU0WO,QAAsF,gCAE5GT,EAAkB3C,OAAS,kBAACiM,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACvC,kBAACqF,GAAA,EAAD,CAASpF,UAAWN,EAAQ2F,WACtB,KACV,yBAAKrF,UAAWgI,EAAW1R,UAAYiR,EAAS7H,EAAQnJ,kBAAoBmJ,EAAQ4I,QAC/E/R,GAAqBA,EAAkB3C,OAAS2C,EAAkBtD,IAAI,SAACd,EAAIoT,GACxE,OAAO,kBAAC,GAAD,CACHpT,GAAIA,EACJoT,MAAOA,EACPgE,OAAQ,SAAArW,KAERsW,SAAU,SAAAtW,SAEb,OAhJF,kBAAC2M,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQ+J,kBAC7C,yBAAKzJ,UAAWN,EAAQ8I,SAClB,kBAACC,GAAA,EAAD,CACEpI,QAAQ,cACR5G,MAAO,IACPuG,UAAWN,EAAQgJ,WACnBtE,KAAM,GACNuE,UAAW,IAEb,kBAACF,GAAA,EAAD,CACEpI,QAAQ,gBACRuI,eAAa,EACb5I,UAAWN,EAAQmJ,cACnBzE,KAAM,GACNuE,UAAW,W,GAzGDrI,IAAMC,WAkPzBY,eAAUX,YA9WV,iBAAO,CAClBsG,SAAU,CACNrC,SAAU,WACViF,OAAQ,WACR1I,MAAO,KAGX+F,YAAa,CACTxH,MAAO,QAEXyH,eAAgB,CACZzH,MAAO,YACP0H,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVC,eAAgB,CACZ5H,MAAO,UACP0H,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVE,kBAAmB,CACf3C,SAAU,WAEV4B,aAAc3F,EAAMC,QAAQ,IAEhCwI,aAAc,CACV1E,SAAU,WACVkF,IAAK,EACLzC,KAAM,EACNlG,MAAO,OACPD,OAAQ,OACR0B,QAAS,OACTtC,WAAY,SACZ0C,eAAgB,SAChBH,cAAe,SACf,MAAO,CACHgH,OAAQ,QAIhBN,cAAe,CACXpG,SAAU,GACVpC,cAAeF,EAAMC,QAAQ,IAEjC6H,QAAS,CACL/D,SAAU,WACViF,OAAQ,WACR1I,MAAO,GACPqF,aAAc3F,EAAMC,QAAQ,IAEhC+H,WAAY,CACRnJ,MAAO,QAEXsJ,cAAe,CACXtJ,MAAOmB,EAAMzC,QAAQC,QAAQE,KAC7B6I,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEV4B,eAAgB,CACZrC,UAAW,SACX7F,cAAeF,EAAMC,QAAQ,GAC7BqC,SAAU,IAEdsG,YAAa,CAET7C,UAAW,SACX7F,cAAeF,EAAMC,QAAQ,GAC7B,SAAU,CACNqC,SAAU,KAGlBmB,MAAO,CACHkC,aAAc3F,EAAMC,QAAQ,GAC5BK,MAAO,OACP,UAAW,CACPgC,SAAU,IAEd,MAAO,CACHA,SAAU,IAEd,qCAAsC,CAClClE,YAAa,kCAGrBwJ,OAAQ,CACJ7F,QAAS,QAEb8F,cAAe,CAEX,MAAO,CACHvF,SAAU,KAGlBoF,SAAU,CACNpF,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,IAEhC8I,iBAAkB,GAGlBR,eAAgB,CACZjG,SAAU,GACVyD,UAAW,SACX,SAAU,CACN7F,cAAeF,EAAMC,QAAQ,KAGrCzE,QAAS,CACL0N,SAAU,IACV5I,MAAO,QAEXqE,QAAS,CACLtC,UAAWrC,EAAMC,QAAQ,GACzB0F,aAAc3F,EAAMC,QAAQ,GAC5BrB,gBAAiB,WAErBuK,OAAQ,KAuParJ,CAAmB8G,KCnQ7B9G,eArHA,iBAAO,CAClBiF,YAAa,CACTzC,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,IAEhC+E,cAAe,CACXjD,QAAS,OACTI,eAAgB,iBAEpB+D,MAAO,CACH,MAAO,CACHC,WAAYnG,EAAMC,QAAQ,KAGlCmG,SAAU,CACNrC,SAAU,WACVxD,YAAaP,EAAMC,QAAQ,GAC3BK,MAAO,GACPD,OAAQ,IAGZgG,YAAa,CACTxH,MAAO,QAEXyH,eAAgB,CACZzH,MAAO,YACP0H,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVC,eAAgB,CACZ5H,MAAO,UACP0H,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVE,kBAAmB,CACf3C,SAAU,WAEV4B,aAAc3F,EAAMC,QAAQ,MA8ErBH,CA1EW,SAASxM,GAAO,IAG9B7B,EAKA6B,EALA7B,GACAoT,EAIAvR,EAJAuR,MACA7F,EAGA1L,EAHA0L,QACA6J,EAEAvV,EAFAuV,OACAC,EACAxV,EADAwV,SAP8B,GAY9BrX,EADAmE,SAMAE,EAAwBrE,IAFxB6E,EAf8B,EAe9BA,0BACAP,EAhB8B,EAgB9BA,wBAGEqT,EAA0C,MAA9B9S,EAElB,OAAO,kBAAC6I,GAAA,EAAD,CAAM2F,IAAKD,EACRrF,WAAS,EACT2D,UAAU,MACV7D,UAAWN,EAAQ+F,aACzB,kBAAC5F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,GAAA,EAAD,CAAMK,WAAS,EAACC,WAAW,UACvB,yBAAKH,UAAWN,EAAQoH,UAClB,kBAAC2B,GAAA,EAAD,CACEpI,QAAQ,SACR5G,MAAO,IACPuG,UAAWN,EAAQqH,YACnB3C,KAAM,GACNuE,UAAW,IAEb,kBAACF,GAAA,EAAD,CACEpI,QAAQ,SACRL,UAAWN,EAAQsH,eACnB5C,KAAM,GACN3K,MAAOzC,EACP2R,UAAW,IAEb,kBAACF,GAAA,EAAD,CACEpI,QAAQ,SACRL,UAAWN,EAAQyH,eACnB/C,KAAM,GACN3K,MAAOhD,EACPkS,UAAW,KAGnB,8BAAOxW,EAAGqD,OAAV,UAGR,kBAACqK,GAAA,EAAD,CAAMG,UAAWN,EAAQgG,cAAe5F,MAAI,EAACC,GAAI,GAC7C,kBAAC,GAAD,CAAyB5N,GAAIA,IAC7B,yBAAK6N,UAAWN,EAAQkH,OACpB,uBAAGf,KAAK,eAAe7F,UAAWN,EAAQkG,SAAUV,QAAS,kBAAOqE,EAAOpX,KAA3E,QAGC2X,GAAa,uBAAGjE,KAAK,eAAe7F,UAAWN,EAAQkG,SAAUV,QAAS,kBAAOsE,EAASrX,KAA7E,c,gCC3FnBqO,mBAjBA,iBAAO,CAClBN,UAAW,CACP8C,SAAU,GACVhC,MAAO,OACPqF,aAAc3F,EAAMC,QAAQ,MAarBH,CATf,SAAoBxM,GAAO,IACf0L,EAAY1L,EAAZ0L,QACR,OAAO,kBAACqK,GAAA,EAAD,CACH/J,UAAWN,EAAQQ,UACnB8J,KAAM,kBAAC,KAAD,MACN5H,MAAO,8BAAM,uBAAGyD,KAAK,+BAA+B9B,OAAO,UAA9C,YAAN,wECqLTkG,IA3JU7M,sBA8HOkD,IAAMC,U,YA+BzB,WAAYvM,GAAQ,qEACVA,I,iMAIE9B,EAAU6B,KAAKC,MAAf9B,OAEFI,EAAMI,aAAamL,QAAQ,yBAG7B3L,EAAMO,IAAI,sBAAuBG,KAAKkL,MAAMxL,I,iJAWhDiR,cAAcxP,KAAKyP,e,wJAIXtR,EAAU6B,KAAKC,MAAf9B,MACFsD,EAAStD,EAAMK,IAAI,iBACnB2J,EAAUhK,EAAMK,IAAI,kBACpBkB,EAAYiC,KAAK8C,MAAM1B,KAAKF,MAAQ,KACpCT,EAAWjE,EAAMK,IAAI,mBACrB4C,EAAUjD,EAAMK,IAAI,mBAEpBJ,EAAK,CACPgB,GAAI,MAAQuC,KAAKC,SAASC,QAAQ,GAClCT,UACA9C,KAAM,SACNwD,SAAS,EACTC,SAAU,WACVsF,iBAAkB,EAClBO,UAAW,GACXhI,YAAauI,EACb1G,OAAQA,EACR/B,YACA0C,WACAC,OAAO,EACPC,OAAQ,GACRE,kBAAmB,IAGvBrE,EAAMO,IAAI,oBAAqBN,GAC/BD,EAAMO,IAAI,oBAAqB,eAE/B0I,EAAYnG,KAAKjB,KAAjBoH,CAAuBhJ,G,kIAGpBA,GAAK,IACAD,EAAW6B,KAAKC,MAAhB9B,MAERA,EAAMO,IAAI,oBAAqBN,GAC/BD,EAAMO,IAAI,oBAAqB,iB,+BAGzB,IAAD,SAIDsB,KAAKC,MAFL0L,EAFC,EAEDA,QACAxN,EAHC,EAGDA,MAIEiD,EAAUjD,EAAMK,IAAI,mBACpBiD,EAAStD,EAAMK,IAAI,iBACnB2J,EAAUhK,EAAMK,IAAI,kBACpB4D,EAAWjE,EAAMK,IAAI,mBACrB6C,EAAelD,EAAMK,IAAI,uBAAuBc,OAAO,SAAAH,GAAC,OAAIA,EAAEiC,UAAYA,IAC1E+U,EAAahY,EAAMK,IAAI,qBACvByV,EAAa9V,EAAMK,IAAI,qBACvB4X,EAAgBjY,EAAMK,IAAI,wBAC1B8B,EAAiBnC,EAAMK,IAAI,yBAE3BoR,EAAWnO,EAAS,QAAY0G,IAAY/F,EAGlD,OAAO,kBAAC0J,GAAA,EAAD,CAAMK,WAAS,GAClB,kBAACL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQkE,kBAClC,kBAAC/D,GAAA,EAAD,CAAMK,WAAS,EAAC2D,UAAU,OACN,UAAfqG,GAA0B,kBAAC,IAAM7G,SAAP,KACvB,kBAACxD,GAAA,EAAD,CAAMG,UAAWN,EAAQoE,KAAMhE,MAAI,EAACC,GAAI,IACpC,4CACA,kBAAC,GAAD,CACIkD,eAAgB9N,EAChB4M,SAAU,SAACC,GACPjE,EAAc/I,KAAK,EAAnB+I,CAAyBiE,EAAE+B,OAAOtK,WAG9C,kBAACoG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACF,GAAA,EAAD,CAAMK,WAAS,GACX,kBAACL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQsE,iBAClC,kBAACC,GAAA,EAAD,CAAWjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQlK,QACpD6K,QAAQ,WACR+D,KAAK,QACLC,YAAY,WACZtC,SAAU,SAAAC,GACN9P,EAAMO,IAAI,gBAAiBuP,EAAE+B,OAAOtK,QAExC6K,WAAY,CACRC,aAAc,kBAACC,GAAA,EAAD,CAAgBxE,UAAWN,EAAQ6E,aAAcE,SAAS,OAA1D,WAG1B,kBAAC5E,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACkE,GAAA,EAAD,CAAWjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQxD,SAAUmE,QAAQ,WAAW+D,KAAK,QAAQC,YAAY,wBAAwBtC,SAAU,SAAAC,GAC5I9P,EAAMO,IAAI,iBAAkBuP,EAAE+B,OAAOtK,WAG7C,kBAACoG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACkE,GAAA,EAAD,CAAWjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQxD,SAAUmE,QAAQ,WAAW+D,KAAK,QAAQC,YAAY,sBAAsBtC,SAAU,SAAAC,GAC1I9P,EAAMO,IAAI,kBAAmBuP,EAAE+B,OAAOtK,aAMtD,kBAACoG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQqF,qBAClC,kBAACC,GAAA,EAAD,CAAQrB,SAAUA,EAAU3D,UAAWN,EAAQuF,WAAY5E,QAAQ,WAAWd,MAAM,UAAU2F,QAASnR,KAAK2C,MAAM1B,KAAKjB,OAAvH,iBAGJ,kBAAC8L,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACqF,GAAA,EAAD,CAASpF,UAAWN,EAAQ2F,WAEhC,kBAACxF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQqF,qBAClC,kBAACd,GAAA,EAAD,CACIjE,UAAWkE,IAAWxE,EAAQyE,MAAOzE,EAAQxD,SAC7CmE,QAAQ,WACR+D,KAAK,QACLC,YAAY,gCACZtC,SAAU,SAAAC,GACN9P,EAAMO,IAAI,uBAAwBuP,EAAE+B,OAAOtK,QAE/C6K,WAAY,CACRC,aAAc,kBAACC,GAAA,EAAD,CACVxE,UAAWN,EAAQ0K,WACnB3F,SAAS,OACL,uBAAGoB,KAAK,eAAeX,QAAS,WAC5BnQ,EAAeC,KAAK,EAApBD,CAA0BoV,KAD9B,oBAOpB,kBAACtK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQ4F,YACjClQ,GAAgBA,EAAaxB,OAASwB,EAAanC,IAAI,SAACd,EAAIoT,GACrD,OAAO,kBAAC,GAAD,CACHpT,GAAIA,EACJoT,MAAOA,EACPgE,OAAQ,SAAArW,GACJ,EAAKmX,OAAOrV,KAAK,EAAjB,CAAuB9B,IAE3BsW,SAAU,SAAAtW,GACNE,EAASlB,EAAOgB,QAEvB,OAGD,gBAAfgX,GAAgC,kBAACrK,GAAA,EAAD,CAAMK,WAAS,EAAC2D,UAAU,OACvD,kBAAChE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAYiI,WAAYA,QAMvC,kBAACnI,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQoG,MACnC,2BACI,uBAAG9F,UAAWN,EAAQqG,SAAtB,gBACA,6BACA,6BAHJ,eAIgB,uBAAGhC,OAAO,SAAS8B,KAAK,0BAAxB,SAJhB,wBAI+F,uBAAG9B,OAAO,SAAS8B,KAAK,iCAAxB,OAJ/F,6NAMA,6FACmE,uBAAG9B,OAAO,SAAS8B,KAAM,YAAyB,YAAZ1Q,EAAwB,SAAW,IAAK,wBAAwBd,GAAiBA,IAE1L,0HACgG,uBAAG0P,OAAO,SAAS8B,KAAK,oCAAxB,oBADhG,4BAGA,4BACI,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,mDAAzB,6BAAJ,iCACA,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,iDAAzB,+BACJ,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,oDAAzB,mCACJ,4BAAI,uBAAG9B,OAAO,SAAS8B,KAAM,0CAAzB,uB,GA7LMvF,IAAMC,YAqMrBC,eAnVA,iBAAO,CACpB7B,KAAM,CACJqH,SAAU,GAEZC,MAAO,GAEPhG,aAAc,CACZQ,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,GAC7BE,UAAW,IAEb+C,iBAAkB,CAEdsC,aAAcxF,EAAMyF,MAAMD,aAC1B7G,OAAQ,oBACR+G,QAAS1F,EAAMC,QAAQ,GAGvB0F,aAAc3F,EAAMC,QAAQ,GAC5B,UAAW,IAGfwD,MAAO,CACHkC,aAAc3F,EAAMC,QAAQ,GAC5BK,MAAO,OACP,UAAW,CACPgC,SAAU,IAEd,MAAO,CACHA,SAAU,IAEd,qCAAsC,CAClClE,YAAa,kCAGrBkF,gBAAiB,GAGjBxO,OAAQ,GAER8Q,MAAO,CACHtD,SAAU,GACVxD,WAAY,IACZuD,UAAWrC,EAAMC,QAAQ,IAE7B2E,WAAY,GAGZG,YAAa,CACTzC,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,IAEhC+E,cAAe,CACXjD,QAAS,OACTI,eAAgB,iBAEpBiD,KAAM,CACF9C,SAAU,GACVqD,aAAc3F,EAAMC,QAAQ,GAC5B,MAAO,CACH0F,aAAc,IAGtBhB,QAAS,CACLtC,UAAWrC,EAAMC,QAAQ,GACzB0F,aAAc3F,EAAMC,QAAQ,GAC5BrB,gBAAiB,WAErBwE,KAAM,CACFuC,aAAc3F,EAAMC,QAAQ,GAC5BqC,SAAU,GACVP,QAAS,OACTtC,WAAY,SACZ0C,eAAgB,iBAEpB0D,QAAS,CACLvD,SAAU,IAEd4C,SAAU,CACN5C,SAAU,GACV/B,YAAaP,EAAMC,QAAQ,IAE/B6F,WAAY,CACRzD,UAAWrC,EAAMC,QAAQ,GACzB0F,aAAc3F,EAAMC,QAAQ,IAEhCoE,oBAAqB,CACjB0B,UAAW,SACXhG,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,IAEjC+D,gBAAiB,CACb+B,UAAW,SACX7F,cAAeF,EAAMC,QAAQ,GAC7B,+BAAgC,CAC5BqC,SAAU,KAGlBiC,WAAY,GAEZqF,MAAO,CACHjE,aAAc3F,EAAMC,QAAQ,GAC5B+B,cAAe,MACf,SAAU,CACRM,SAAU,KAGhBoH,WAAY,CACRpH,SAAU,GACV4G,SAAU,MAsODpJ,CAAmBW,YAAU8I,K,sBC1VtCM,GAAe,CACjB,kBAAqB,WACrB,gBAAmB,UACnB,gBAAmB,GAEnB,oBAAqB,GACrB,sBdnD6B,6CcoD7B,4BAA4B,EAC5B,cAAe,GACf,eAAgB,GAEhB,wBdtD+B,6CcuD/B,sBAAuB,GACvB,gBAAiB,GACjB,qBAAsB,GACtB,kBAAmB,GACnB,oBAAqB,QACrB,oBAAqB,KACrB,uBAAwB,GACxB,0BAA0B,GAIxBC,G,YACF,WAAYxW,GAAQ,IAAD,8BACf,4CAAMA,KACD4L,MAAQ,GAFE,E,yMAMTpC,EAAexI,KAAKjB,KAApByJ,CAA0B,W,OAChCG,EAAsB3I,KAAKjB,KAA3B4J,GAGAT,EAAelI,KAAKjB,KAApBmJ,GAGAJ,EAAsB9H,KAAKjB,KAA3B+I,GAEAhK,OAAOZ,MAAQ6B,KAAKC,MAAM9B,MAE1BY,OAAOC,SAAWA,EAASiC,KAAKjB,M,mIAG3B,IAAD,EACuBA,KAAKC,MAAxB9B,EADJ,EACIA,MAAOwN,EADX,EACWA,QAEX+K,EACAvY,EAAMkC,WADNqW,kBAGJ,OAAO,kBAACC,GAAA,EAAD,CAAWC,SAAS,MACvB,kBAAC,IAAD,KACI,kBAAC9K,GAAA,EAAD,CAAMK,WAAS,GAIX,kBAACL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6K,GAAI,EAAGC,GAAI,GAC1B,kBAAC,GAAD,OAEJ,kBAAChL,GAAA,EAAD,CAAMG,UAAWN,EAAQoL,QAAShL,MAAI,EAACC,GAAI,GAAI6K,GAAI,EAAGC,GAAI,GACtD,yBAAK7K,UAAWN,EAAQqL,SAAS,kBAAC,GAAD,OACV,aAAtBN,GAAoC,kBAAC,GAAD,MACd,SAAtBA,GAAgC,kBAAC,GAAD,c,GAvChCnK,IAAMC,WAuDzByK,GAAsB7J,YAAUqJ,IAEhCS,G,YACF,WAAYjX,GAAQ,IAAD,8BACf,4CAAMA,KACD4L,MAAQ,GAFE,E,gTAQT,IACEF,EAAY3L,KAAKC,MAAjB0L,QACR,OACI,kBAACwL,GAAA,EAAD,CAAexK,MAAOA,GAClB,kBAACsK,GAAD,CAAqBtL,QAASA,S,GAb5BY,IAAMC,WAmBT4K,eAAY3K,YAhHZ,iBAAO,CAClBuK,QAAS,CACLhI,UAAWrC,EAAMC,QAAQ,GACzB0F,aAAc3F,EAAMC,QAAQ,GAC5BK,MAAO,OACP,SAAU,CACNoF,QAAS1F,EAAMC,QAAQ,IACvByK,WAAY,aAyGG5K,CAAmByK,IAAMV,IC5IhCc,QACW,cAA7BvY,OAAOuO,SAASiK,UAEe,UAA7BxY,OAAOuO,SAASiK,UAEhBxY,OAAOuO,SAASiK,SAAS/J,MACvB,2DCZNgK,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,00REnInBC,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.baa8eea6.chunk.js","sourcesContent":["import RenJS from \"@renproject/ren\";\r\nimport adapterABI from './exchangeAdapterSimpleABI.json'\r\nimport streamAdapterABI from './streamAdapterSimpleABI.json'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// export const API_URL = 'http://localhost:3000'\r\nexport const API_URL = ''\r\nexport const MIN_CLAIM_AMOUNT = 0.00010001\r\nexport const SWAP_ADAPTER_TEST = '0xade8792c3ee90320cabde200ccab34b27cc88651'\r\nexport const SWAP_ADAPTER_MAIN = '0x35Db75fc0D5457eAb9C21AFb5857716427F8129D'\r\nexport const STREAM_ADAPTER_TEST = '0x89E02f9A8E84f32Aa3694b43Ba86Af5448129CD0'\r\nexport const STREAM_ADAPTER_MAIN = '0x5216dD52888cE0B484A4DeaA0Fb88Aac44231Fe5'\r\nlet swapMonitor = null\r\n\r\nexport const addTx = (store, tx) => {\r\n    const storeString = tx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    let txs = store.get(storeString)\r\n    txs.push(tx)\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const updateTx = (store, newTx) => {\r\n    const storeString = newTx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    const txs = store.get(storeString).map(t => {\r\n        if (t.id === newTx.id) {\r\n            // const newTx = Object.assign(t, props)\r\n            return newTx\r\n        }\r\n        return t\r\n    })\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const removeTx = (store, tx) => {\r\n    const storeString = tx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    let txs = store.get(storeString).filter(t => (t.id !== tx.id))\r\n    // console.log(txs)\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const streamExists = function(streams, beneficiary, startTime) {\r\n    return streams.filter(stream => (stream.destAddress === beneficiary && stream.startTime === startTime)).length > 0\r\n}\r\n\r\nexport const getStreams = async function() {\r\n    // console.log('search', destAddress)\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    console.log(store.getState())\r\n    // const web3Context = store.get('web3Context')\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n    // console.log(adapterContract)\r\n    window.adapter = adapterContract\r\n    const schedules = await adapterContract.methods.getSchedules().call()\r\n    // console.log(schedules)\r\n    return schedules\r\n}\r\n\r\nexport const recoverStreams = async function(destAddress) {\r\n    const { store } = this.props\r\n    const web3 = store.get('web3')\r\n    const schedules = await getStreams.bind(this)()\r\n    const beneficiary = web3.utils.fromAscii(destAddress)\r\n    const network = store.get('selectedNetwork')\r\n    const transactions = store.get('stream.transactions').filter(t => t.network === network)\r\n\r\n    schedules.map(s => {\r\n        const alreadyExists = streamExists(transactions, web3.utils.toAscii(s.beneficiary), s.startTime)\r\n        // console.log(s.beneficiary)\r\n        if (s.beneficiary === beneficiary && !alreadyExists) {\r\n            const amount = new BigNumber(s.amount)\r\n            const tx = {\r\n                id: 'tx-' + Math.random().toFixed(6),\r\n                network,\r\n                type: 'stream',\r\n                instant: false,\r\n                awaiting: '',\r\n                source: 'btc',\r\n                dest: 'eth',\r\n                destAddress,\r\n                amount: amount.div(10 ** 8).toNumber(),\r\n                startTime: s.startTime,\r\n                duration: s.duration,\r\n                error: false,\r\n                txHash: '',\r\n                schedule: s,\r\n                claimTransactions: []\r\n            }\r\n\r\n            addTx(store, tx)\r\n        } else {\r\n            // show no results ui\r\n        }\r\n    })\r\n}\r\n\r\nexport const calculateStreamProgress = function(tx) {\r\n    const schedule = tx.schedule\r\n\r\n    if (schedule) {\r\n        const start = Number(schedule.startTime)\r\n        const now = Math.floor(Date.now() / 1000)\r\n        const end = Number(schedule.startTime) + (Number(schedule.duration * 60))\r\n        const period = end - start\r\n        let totalClaimablePercentrage = 0\r\n        let amountClaimedPercentage = 0\r\n        if (now > end) {\r\n            totalClaimablePercentrage = 100\r\n        } else {\r\n            totalClaimablePercentrage = Number((((now - start) / period) * 100).toFixed(1))\r\n        }\r\n        amountClaimedPercentage = Number(((schedule.amountClaimed / schedule.amount) * 100).toFixed(1))\r\n        const amountClaimablePercentage = Number((totalClaimablePercentrage - amountClaimedPercentage).toFixed(1))\r\n\r\n        const amount = tx.schedule ? (tx.schedule.amount / (10 ** 8)).toFixed(6) : 0\r\n        const totalClaimableAmount = amount * (totalClaimablePercentrage / 100)\r\n        const claimedAmount = Number(amount * (amountClaimedPercentage / 100))\r\n        const claimableAmount = Number(amount * (amountClaimablePercentage / 100))\r\n\r\n        return {\r\n            amount,\r\n            totalClaimablePercentrage,\r\n            totalClaimableAmount,\r\n            amountClaimedPercentage,\r\n            claimedAmount,\r\n            amountClaimablePercentage,\r\n            claimableAmount,\r\n            remaingDuration: end - start\r\n        }\r\n    } else {\r\n        return {\r\n            amount: 0,\r\n            totalClaimablePercentrage: 0,\r\n            totalClaimableAmount: 0,\r\n            amountClaimedPercentage: 0,\r\n            claimedAmount: 0,\r\n            amountClaimablePercentage: 0,\r\n            claimableAmount: 0,\r\n            remaingDuration: 0\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateStreamInfo = async function(tx) {\r\n    const { store } =  this.props\r\n    const web3 = store.get('web3')\r\n    const { startTime, destAddress } = tx\r\n\r\n    const beneficiary = web3.utils.fromAscii(destAddress)\r\n    const schedules = await getStreams.bind(this)()\r\n\r\n    const schedule = schedules.filter(s => (\r\n        Number(s.startTime) === Number(startTime) &&\r\n        s.beneficiary === beneficiary\r\n    ))[0]\r\n\r\n    console.log('schedule', schedule, schedules)\r\n\r\n    if (schedule && schedule.beneficiary) {\r\n        // console.log('updateStreamInfo', schedules, schedule)\r\n        const sched = {\r\n            id: schedule.id,\r\n            beneficiary: schedule.beneficiary,\r\n            startTime: schedule.startTime,\r\n            duration: schedule.duration,\r\n            amount: schedule.amount,\r\n            amountClaimed: schedule.amountClaimed,\r\n            minutesClaimed: schedule.minutesClaimed\r\n        }\r\n        // in-case tx was never updated\r\n        let newTx = Object.assign(tx, {\r\n            awaiting: '',\r\n            error: false\r\n        })\r\n        newTx.schedule = sched\r\n        updateTx(store, tx, newTx)\r\n        return newTx\r\n    }\r\n}\r\n\r\nexport const claim = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const { destAddress, schedule } = tx\r\n\r\n    store.set('stream.claimRequesting', true)\r\n\r\n    const {\r\n        totalClaimablePercentrage,\r\n        amountClaimedPercentage\r\n    } = calculateStreamProgress(tx)\r\n\r\n    const claimAmount = (((totalClaimablePercentrage - amountClaimedPercentage) / 100) * tx.amount).toFixed(6)\r\n\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    console.log('gasPrice', gasPrice)\r\n\r\n    // console.log('claiming tx', tx, schedule, schedule.id)\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const result = await adapterContract.methods.claim(\r\n                schedule.id\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 150000\r\n            }).on('transactionHash', (hash) => {\r\n                updateTx(store, Object.assign(tx, {\r\n                    claimTransactions: tx.claimTransactions.concat([{\r\n                        timestamp: Date.now(),\r\n                        amount: claimAmount,\r\n                        txHash: hash,\r\n                        network: tx.network\r\n                    }])\r\n                }))\r\n            }).on('confirmation', (confirmationNumber, receipt) => {\r\n                if (confirmationNumber === 1) {\r\n                    store.set('stream.claimRequesting', false)\r\n                    console.log('confirmation', confirmationNumber, receipt)\r\n                    updateStreamInfo.bind(this)(tx)\r\n                    resolve()\r\n                }\r\n            })\r\n            // console.log('result', result)\r\n        } catch(e) {\r\n            console.log('error completing', e)\r\n            store.set('stream.claimRequesting', false)\r\n            reject()\r\n        }\r\n    })\r\n}\r\n\r\nexport const completeDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n    const pendingShiftIns = store.get('pendingShiftIns')\r\n\r\n    // const adapterAddress = store.get('adapterAddress')\r\n    const { id, type, params, awaiting, renResponse, renSignature } = tx\r\n\r\n    let adapterContract\r\n    if (type === 'swap') {\r\n        adapterContract = new web3.eth.Contract(adapterABI, store.get('swap.adapterAddress'))\r\n    } else if (type === 'stream') {\r\n        adapterContract = new web3.eth.Contract(streamAdapterABI, store.get('stream.adapterAddress'))\r\n    }\r\n\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    console.log('gasPrice', gasPrice)\r\n\r\n    updateTx(store, Object.assign(tx, { awaiting: 'eth-settle' }))\r\n\r\n    console.log('completeDeposit', tx)\r\n\r\n    try {\r\n        let result\r\n        if (type === 'swap') {\r\n            result = await adapterContract.methods.shiftInWithSwap(\r\n                params.contractCalls[0].contractParams[0].value,\r\n                Number(params.sendAmount),\r\n                renResponse.autogen.nhash,\r\n                renSignature\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 200000\r\n            })\r\n        } else if (type === 'stream') {\r\n            result = await adapterContract.methods.addVestingSchedule(\r\n                params.contractCalls[0].contractParams[0].value,\r\n                params.contractCalls[0].contractParams[1].value,\r\n                Number(params.contractCalls[0].contractParams[2].value),\r\n                Number(params.sendAmount),\r\n                renResponse.autogen.nhash,\r\n                renSignature\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 350000\r\n            })\r\n            await updateStreamInfo.bind(this)(tx)\r\n        }\r\n        store.set('pendingShiftIns', pendingShiftIns.filter(p => p !== id))\r\n        updateTx(store, Object.assign(tx, { awaiting: '', txHash: result.transactionHash, error: false }))\r\n    } catch(e) {\r\n        console.log(e)\r\n        updateTx(store, Object.assign(tx, { error: true }))\r\n    }\r\n}\r\n\r\nexport const initShiftIn = function(tx) {\r\n    const {\r\n      type,\r\n      amount,\r\n      renBtcAddress,\r\n      params,\r\n      ethSig,\r\n      destAddress,\r\n      // stream\r\n      startTime,\r\n      duration\r\n    } = tx\r\n    const {\r\n        sdk,\r\n        web3\r\n    } = this.props.store.getState()\r\n\r\n    let adapterAddress = ''\r\n    let contractFn = ''\r\n    let contractParams = []\r\n\r\n    if (type === 'swap') {\r\n        adapterAddress = this.props.store.get('swap.adapterAddress')\r\n        contractFn = 'shiftInWithSwap'\r\n        contractParams = [\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n                value: destAddress\r\n            }\r\n        ]\r\n    } else if (type === 'stream') {\r\n        adapterAddress = this.props.store.get('stream.adapterAddress')\r\n        contractFn = 'addVestingSchedule'\r\n        contractParams = [\r\n            {\r\n                name: \"_beneficiary\",\r\n                type: \"bytes\",\r\n                value: web3.utils.fromAscii(destAddress),\r\n            },\r\n            {\r\n                name: \"_startTime\",\r\n                type: \"uint256\",\r\n                value: startTime,\r\n            },\r\n            {\r\n                name: \"_duration\",\r\n                type: \"uint16\",\r\n                value: duration,\r\n            }\r\n        ]\r\n    }\r\n\r\n    // // store data or update params with nonce\r\n    const data = {\r\n        sendToken: RenJS.Tokens.BTC.Btc2Eth,\r\n        sendAmount: RenJS.utils.value(amount, \"btc\").sats(), // Convert to Satoshis\r\n        sendTo: adapterAddress,\r\n        contractFn,\r\n        contractParams,\r\n        nonce: params && params.nonce ? params.nonce : RenJS.utils.randomNonce(),\r\n    }\r\n\r\n    const shiftIn = sdk.shiftIn(data)\r\n\r\n    window.shiftIns.push(shiftIn)\r\n\r\n    return shiftIn\r\n}\r\n\r\nexport const initDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const {\r\n        id,\r\n        params,\r\n        awaiting,\r\n        renResponse,\r\n        renSignature,\r\n        error,\r\n        btcConfirmations\r\n    } = tx\r\n\r\n    const pendingShiftIns = store.get('pendingShiftIns')\r\n    if (pendingShiftIns.indexOf(id) < 0) {\r\n        store.set('pendingShiftIns', pendingShiftIns.concat([id]))\r\n    }\r\n\r\n    // console.log('initDeposit', tx)\r\n\r\n    console.log('initDeposit', tx)\r\n\r\n    // completed\r\n    if (!awaiting) return\r\n\r\n    // clear error when re-attempting\r\n    if (error) {\r\n        updateTx(store, Object.assign(tx, { error: false }))\r\n    }\r\n\r\n    // ren already exposed a signature\r\n    if (renResponse && renSignature && !error) {\r\n        completeDeposit.bind(this)(tx)\r\n    } else {\r\n        // create or re-create shift in\r\n        const shiftIn = await initShiftIn.bind(this)(tx)\r\n\r\n        // console.log('initDeposit shiftin', shiftIn)\r\n\r\n        if (!params) {\r\n            addTx(store, Object.assign(tx, {\r\n                params: shiftIn.params,\r\n                renBtcAddress: shiftIn.addr()\r\n            }))\r\n        }\r\n\r\n        // wait for btc\r\n        const deposit = await shiftIn\r\n            .waitForDeposit(2)\r\n            .on(\"deposit\", dep => {\r\n                // console.log('on deposit', dep)\r\n                if (dep.utxo) {\r\n                    if (awaiting === 'btc-init') {\r\n                        updateTx(store, Object.assign(tx, {\r\n                            awaiting: 'btc-settle',\r\n                            btcConfirmations: dep.utxo.confirmations,\r\n                            btcTxHash: dep.utxo.txid\r\n                        }))\r\n                    } else {\r\n                        updateTx(store, Object.assign(tx, {\r\n                            btcConfirmations: dep.utxo.confirmations,\r\n                            btcTxHash: dep.utxo.txid\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n\r\n        updateTx(store, Object.assign(tx, { awaiting: 'ren-settle' }))\r\n\r\n        try {\r\n            const signature = await deposit.submitToRenVM();\r\n            updateTx(store, Object.assign(tx, {\r\n                renResponse: signature.response,\r\n                renSignature: signature.signature\r\n            }))\r\n\r\n            completeDeposit.bind(this)(tx)\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const initInstantSwap = async function(tx) {\r\n    const { store }  = this.props\r\n    const { params, awaiting, renResponse, renSignature, error } = tx\r\n\r\n    const address = store.get('swap.address')\r\n    const amount = store.get('swap.amount')\r\n\r\n    const request = await fetch(`${API_URL}/swap-gateway/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            sourceAmount: amount,\r\n            sourceAsset: 'BTC',\r\n            destinationAsset: 'ETH',\r\n            destinationAddress: address\r\n        })\r\n    })\r\n    const data = await request.json()\r\n    addTx(store, Object.assign(tx, {\r\n        renBtcAddress: data.gatewayAddress\r\n    }))\r\n}\r\n\r\nexport const initInstantMonitoring = function() {\r\n    const store = this.props.store\r\n    const network = store.get('selectedNetwork')\r\n\r\n    swapMonitor = setInterval(async () => {\r\n        const transactions = store.get('swap.transactions').filter(t => t.network === network)\r\n        transactions.filter((t) => (t.instant && t.awaiting === 'btc-init')).map(async tx => {\r\n            const req = await fetch(`${API_URL}/swap-gateway/status?gateway=${tx.renBtcAddress}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const data = await req.json()\r\n            if (data.status === 'complete') {\r\n                updateTx(this.props.store, Object.assign(tx, {\r\n                    awaiting: '',\r\n                    txHash: data.txHash\r\n                }))\r\n            }\r\n        })\r\n    }, 1000)\r\n}\r\n\r\nexport const initMonitoring = function() {\r\n    const store = this.props.store\r\n    const network = store.get('selectedNetwork')\r\n    const pendingShiftIns = store.get('pendingShiftIns')\r\n    const txs = store.get('swap.transactions').concat(store.get('stream.transactions')).filter(t => t.network === network)\r\n\r\n    txs.map(tx => {\r\n        if (tx.awaiting && !tx.instant) {\r\n            if (pendingShiftIns.indexOf(tx.id) < 0) {\r\n                initDeposit.bind(this)(tx)\r\n            }\r\n        } else if (tx.type === 'stream') {\r\n            updateStreamInfo.bind(this)(tx)\r\n        }\r\n    })\r\n}\r\n\r\nwindow.shiftIns = []\r\n\r\nexport default {\r\n    addTx,\r\n    updateTx,\r\n    removeTx,\r\n    completeDeposit,\r\n    initShiftIn,\r\n    initDeposit,\r\n    initMonitoring\r\n}\r\n","import RenJS from \"@renproject/ren\";\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    SWAP_ADAPTER_TEST,\r\n    SWAP_ADAPTER_MAIN,\r\n    STREAM_ADAPTER_TEST,\r\n    STREAM_ADAPTER_MAIN\r\n} from './txUtils'\r\n\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  verbose: true\r\n};\r\n\r\nexport const initNetworking = async function(network) {\r\n    const { store } = this.props\r\n\r\n    const web3Context = await fromConnection(\r\n        `https://${network === 'testnet' ? 'kovan' : 'mainnet'}.infura.io/v3/7be66f167c2e4a05981e2ffc4653dec2`,\r\n        {\r\n            gsn: { signKey, ...relay_client_config }\r\n        }\r\n    )\r\n\r\n    store.set('web3Context', web3Context)\r\n    store.set('web3', web3Context.lib)\r\n\r\n    const sdk = new RenJS(network)\r\n    store.set('sdk', sdk)\r\n\r\n    store.set('swap.adapterAddress', network === 'testnet' ? SWAP_ADAPTER_TEST : SWAP_ADAPTER_MAIN)\r\n    store.set('stream.adapterAddress', network === 'testnet' ? STREAM_ADAPTER_TEST : STREAM_ADAPTER_MAIN)\r\n\r\n    // turn instant off\r\n    store.set('swap.instantSwapSelected', false)\r\n}\r\n\r\nexport const initLocalTransactions = async function() {\r\n    const { store } = this.props\r\n    const swaps = localStorage.getItem('swap.transactions')\r\n    const streams = localStorage.getItem('stream.transactions')\r\n\r\n    if (swaps) {\r\n        store.set('swap.transactions', JSON.parse(swaps))\r\n    }\r\n\r\n    if (streams) {\r\n        store.set('stream.transactions', JSON.parse(streams))\r\n    }\r\n}\r\n\r\nexport const switchNetwork = async function(network) {\r\n    const { store } = this.props\r\n    store.set('selectedNetwork', network)\r\n    await initNetworking.bind(this)(network)\r\n    initLocalTransactions.bind(this)()\r\n    initMonitoring.bind(this)()\r\n    initInstantMonitoring.bind(this)()\r\n}\r\n\r\n\r\nexport default {\r\n    initNetworking,\r\n    initLocalTransactions\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#000',\r\n            main: '#000',\r\n            dark: '#000',\r\n            contrastText: '#fff',\r\n        },\r\n        // primary: blueGrey,\r\n        secondary: grey,\r\n    },\r\n    overrides: {\r\n        // Style sheet name ⚛️\r\n        // MuiButton: {\r\n        //   // Name of the rule\r\n        //   text: {\r\n        //     // Some CSS\r\n        //     color: 'white',\r\n        //   },\r\n        // }\r\n        PrivateNotchedOutline: {\r\n            root: {\r\n            }\r\n        },\r\n        // '.MuiOutlinedInput-root:hover':{\r\n        //     borderColor: '#EBEBEB !important'\r\n        // },\r\n        MuiOutlinedInput: {\r\n            root:{\r\n                '& input': {\r\n                    // minHeight: 32\r\n                },\r\n            //     '&:hover': {\r\n            //         // notchedOutline: {\r\n            //             borderColor: '#EBEBEB'\r\n            //         // }\r\n            //     }\r\n            },\r\n            notchedOutline: {\r\n                borderColor: '#eee !important',\r\n                borderWidth: '1px !important'\r\n            }\r\n        },\r\n        MuiTextField: {\r\n\r\n        },\r\n        MuiToggleButtonGroup: {\r\n          grouped: {\r\n            '&:not(:first-child)': {\r\n              borderLeft: '1px solid #EBEBEB'\r\n            }\r\n          }\r\n        },\r\n        // .MuiToggleButtonGroup-grouped:not(:first-child)\r\n        MuiToggleButton: {\r\n            root: {\r\n                border: '1px solid #EBEBEB',\r\n                backgroundColor: '#fff',\r\n                '&.Mui-selected': {\r\n                    // back\r\n                    backgroundColor: '#fff !important',\r\n                    color: '#000',\r\n                    fontWeight: '500',\r\n                    '&:hover': {\r\n                        backgroundColor: '#fff !important',\r\n                    }\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: '#fff !important',\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","import React from 'react';\r\nimport Web3 from \"web3\";\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst styles = () => ({\r\n    navContainer: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n        minHeight: 52\r\n    },\r\n    logo: {\r\n        height: 22,\r\n        width: 25,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    accountButton: {\r\n      '& svg': {\r\n        marginRight: theme.spacing(1)\r\n      }\r\n    }\r\n})\r\n\r\nclass NavContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const walletAddress = store.get('walletAddress')\r\n        const isSignedIn = walletAddress && walletAddress.length\r\n\r\n        console.log(this.props, this.state, this.props.store.getState())\r\n\r\n        return <Grid item xs={12}>\r\n            {<Grid className={classes.navContainer} container alignItems='center'>\r\n              <Grid item xs={6}>\r\n                  <Grid container alignItems='center'>\r\n                      <Typography variant='h6'>RenVM Interoperability</Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(NavContainer))\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport RenVMLogo from '../assets/renvm-logo.svg'\r\n\r\nconst styles = () => ({\r\n    tabs: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingRight: theme.spacing(4),\r\n        '& .MuiTabs-flexContainer': {\r\n            alignItems: 'flex-end',\r\n        },\r\n        '& .MuiTab-wrapper': {\r\n            alignItems: 'flex-end',\r\n            // paddingRight: theme.spacing(1)\r\n        },\r\n        '& span.MuiTabs-indicator': {\r\n            backgroundColor: 'transparent'\r\n        },\r\n        '& button.MuiTab-textColorInherit': {\r\n            color: '#7f7f7f',\r\n        },\r\n        '& button.MuiTab-textColorInherit.Mui-selected': {\r\n            color: '#333',\r\n        },\r\n        width: '100%'\r\n    },\r\n    tabsMobile: {\r\n        // paddingTop: theme.spacing(2),\r\n        // paddingRight: theme.spacing(4),\r\n        '& .MuiTabs-flexContainer': {\r\n            alignItems: 'flex-end',\r\n        },\r\n        '& .MuiTab-wrapper': {\r\n            alignItems: 'flex-end',\r\n            // paddingRight: theme.spacing(1)\r\n        },\r\n        '& span.MuiTabs-indicator': {\r\n            backgroundColor: 'transparent'\r\n        },\r\n        '& button.MuiTab-textColorInherit': {\r\n            color: '#7f7f7f',\r\n        },\r\n        '& button.MuiTab-textColorInherit.Mui-selected': {\r\n            color: '#333',\r\n        },\r\n        // width: '100%'\r\n    },\r\n    logo: {\r\n        width: 120,\r\n        height: 'auto',\r\n        marginRight: theme.spacing(5.5)\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        paddingTop: theme.spacing(4),\r\n        [theme.breakpoints.down('xs')]: {\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            flexDirection: 'row',\r\n            paddingTop: theme.spacing(2),\r\n        }\r\n    },\r\n    networkChooser: {\r\n        marginRight: theme.spacing(5.5),\r\n        marginTop: theme.spacing(1)\r\n    }\r\n})\r\n\r\n\r\n\r\nclass ActionTabsContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = props.store.getState()\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { location, store } = this.props\r\n        if (location.pathname && location.pathname.match(/stream/)) {\r\n            store.set('selectedActionTab', 'stream')\r\n        }\r\n    }\r\n\r\n    changeTabs(value) {\r\n        const { store } = this.props\r\n        store.set('selectedActionTab', value)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store,\r\n            history\r\n        } = this.props\r\n\r\n        // console.log(this.props, this.state)\r\n\r\n        return <div className={classes.container}>\r\n            <img className={classes.logo} src={RenVMLogo} />\r\n            <Hidden xsDown>\r\n                <Tabs\r\n                    orientation=\"vertical\"\r\n                    value={store.get('selectedActionTab')}\r\n                    onChange={(e, value) => {\r\n                        this.changeTabs.bind(this)(value)\r\n                        history.push(value === 'exchange' ? '/' : '/stream')\r\n                    }}\r\n                    className={classes.tabs}\r\n                  >\r\n                    <Tab value={'exchange'} label=\"Exchange\" />\r\n                    <Tab value={'stream'} label=\"Stream\" />\r\n                </Tabs>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n                <Tabs\r\n                    value={store.get('selectedActionTab')}\r\n                    onChange={(e, value) => {\r\n                        this.changeTabs.bind(this)(value)\r\n                        history.push(value === 'exchange' ? '/' : '/stream')\r\n                    }}\r\n                    className={classes.tabsMobile}\r\n                  >\r\n                    <Tab value={'exchange'} label=\"Exchange\" />\r\n                    <Tab value={'stream'} label=\"Stream\" />\r\n                </Tabs>\r\n            </Hidden>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(withStore(ActionTabsContainer)))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { switchNetwork } from '../utils/networkingUtils'\r\n\r\nconst styles = () => ({\r\n    container: {\r\n        fontSize: 14\r\n    }\r\n})\r\n\r\nfunction NetworkChooser(props){\r\n    const { currentNetwork, onChange, classes } = props\r\n    return <Select\r\n        native\r\n        value={currentNetwork}\r\n        className={classes.container}\r\n        onChange={onChange}\r\n        inputProps={{\r\n            name: '',\r\n            id: 'age-native-simple',\r\n        }}>\r\n        <option value=\"chaosnet\">Chaosnet</option>\r\n        <option value=\"testnet\">Testnet</option>\r\n    </Select>\r\n}\r\n\r\nexport default withStyles(styles)(NetworkChooser);\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\n// import classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = () => ({\r\n})\r\n\r\nconst StreamTransactionStatus = function(props) {\r\n    const {\r\n        tx,\r\n    } = props\r\n\r\n    return <React.Fragment>\r\n            {tx.awaiting === 'btc-init' ? <span>\r\n                {`Waiting for BTC transaction to be initiated `}<br />{`${tx.renBtcAddress}`}\r\n            </span> : null}\r\n            {tx.awaiting === 'btc-settle' ? <span>\r\n                {`BTC transaction confirming (${tx.btcConfirmations}/${'2'} complete)`}\r\n            </span> : null}\r\n            {tx.awaiting === 'ren-settle' ? <span>\r\n                {`Submitting to RenVM`}\r\n            </span> : null}\r\n            {tx.awaiting === 'eth-settle' ? <span>\r\n                {`Submitting to Ethereum`}\r\n            </span> : null}\r\n            {!tx.awaiting ? <span>{`Swap complete`}</span> : null}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransactionStatus);\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    switchNetwork\r\n} from '../utils/networkingUtils'\r\n\r\nimport NetworkChooser from '../components/NetworkChooser'\r\nimport SwapTransactionStatus from '../components/SwapTransactionStatus'\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    updateTx,\r\n    initInstantSwap\r\n} from '../utils/txUtils'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  // force_gasLimit: 200000, //override requested gas limit.\r\n  // gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #7f7f7f',\r\n      padding: theme.spacing(3),\r\n\r\n      // marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      backgroundColor: '#999999'\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(4),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass DepositContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('swap.amount')\r\n        const address = store.get('swap.address')\r\n        const transactions = store.get('swap.transactions')\r\n        const network = store.get('selectedNetwork')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.floor(Math.random() * (10 ** 16)),\r\n            network,\r\n            type: 'swap',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    async startInstant() {\r\n        const { store } = this.props\r\n        const amount = store.get('swap.amount')\r\n        const address = store.get('swap.address')\r\n        const transactions = store.get('swap.transactions')\r\n        const network = store.get('selectedNetwork')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.floor(Math.random() * (10 ** 16)),\r\n            network,\r\n            type: 'swap',\r\n            instant: true,\r\n            awaiting: 'btc-init',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initInstantSwap.bind(this)(tx)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const network = store.get('selectedNetwork')\r\n        const adapterAddress = store.get('swap.adapterAddress')\r\n        const instantSwapSelected = store.get('swap.instantSwapSelected')\r\n        const transactions = store.get('swap.transactions').filter(t => t.network === network)\r\n        const amount = store.get('swap.amount')\r\n        const address = store.get('swap.address')\r\n        const showInstant = network === 'testnet'\r\n\r\n        console.log(store.getState())\r\n\r\n        const disabled = amount <= 0.0001 || (amount > 0.0005 && instantSwapSelected) || !address\r\n\r\n        return <Grid container>\r\n            {/*<Typography variant={'h1'} className={classes.title}>Kovan ETH – Testnet BTC Exchange</Typography>*/}\r\n\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='row'>\r\n                    <Grid className={classes.desc} item xs={12}>\r\n                        <span >Swap BTC for ETH</span>\r\n                        <NetworkChooser\r\n                            currentNetwork={network}\r\n                            onChange={(e) => {\r\n                                switchNetwork.bind(this)(e.target.value)\r\n                            }} />\r\n                        {/*<span className={classes.btcLink}>Send testnet BTC from <a target='_blank' href={'https://tbtc.bitaps.com/'}>here</a></span>*/}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={4} className={classes.amountContainer}>\r\n                                <TextField className={classNames(classes.input, classes.amount)}\r\n                                    variant='outlined'\r\n                                    size='small'\r\n                                    placeholder='0.000000'\r\n                                    onChange={e => {\r\n                                        store.set('swap.amount', e.target.value)\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                    }}/>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Send to ETH Address' onChange={e => {\r\n                                    store.set('swap.address', e.target.value)\r\n                                }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.switchContainer}>\r\n                        {showInstant && <FormControlLabel control={<Switch checked={instantSwapSelected}\r\n                            color='primary'\r\n                            onChange={() => store.set('swap.instantSwapSelected', !instantSwapSelected)}\r\n                            value={\"instant\"} />} label=\"Faster swap (0 confirmations, 0.0005 BTC max)\" />}\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                        <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={instantSwapSelected ? this.startInstant.bind(this) : this.start.bind(this)}>Start Swap</Button>\r\n                    </Grid>\r\n                    {transactions && transactions.length ? <Grid item xs={12}><Divider className={classes.divider} /></Grid> : null}\r\n                    <Grid item xs={12} className={classes.unfinished}>\r\n                        {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                                return <Grid key={index} container direction='row' className={classes.depositItem}>\r\n                                    <Grid item xs={3}>\r\n                                        {tx.amount} BTC\r\n                                    </Grid>\r\n                                    <Grid className={classes.depositStatus} item xs={9}>\r\n                                        <SwapTransactionStatus tx={tx} />\r\n                                        <div>\r\n                                            {tx.awaiting === 'btc-settle' ? <a className={classes.viewLink} target='_blank' href={`https://live.blockcypher.com/${tx.network === 'testnet' ? 'btc-testnet' : 'btc'}/tx/${tx.btcTxHash}`}>View transaction</a> : null}\r\n                                            {tx.awaiting === 'btc-init' || tx.error || !tx.awaiting ? <div>\r\n                                                {tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://' + (tx.network === 'testnet' ? 'kovan.' : '') + 'etherscan.io/tx/'+tx.txHash}>View transaction</a> : null}\r\n                                                <a href='javascript:;' onClick={() => {\r\n                                                    removeTx(store, tx)\r\n                                                }}>{!tx.awaiting ? 'Clear' : 'Cancel'}</a></div> : null}\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }) : null}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    This exchange uses <a target='_blank' href='https://renproject.io/'>RenVM</a>, <a target='_blank' href='https://uniswap.io/'>Uniswap</a>, and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. All swaps abstract ETH away from the user with the <b>GaaS pattern</b>, and faster swaps are faciliated using the <b>CaaS pattern</b>. To learn more, check out our interoperability tutorials below:\r\n                </p>\r\n                <p>\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>GaaS Tutorial</a> | Gas-less transactions</li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>CaaS tutorial</a> | Faster swaps via expedited confirmations</li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n                    Swaps are submitted to the following adapter address: <a target='_blank' href={'https://' + (network === 'testnet' ? 'kovan.' : '') + 'etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                        <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n\r\n                </p>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(DepositContainer))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\n// import classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { calculateStreamProgress } from '../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n})\r\n\r\nconst StreamTransactionStatus = function(props) {\r\n    const {\r\n        tx,\r\n    } = props\r\n\r\n    const {\r\n        totalClaimablePercentrage,\r\n        amountClaimedPercentage\r\n    } = calculateStreamProgress(tx)\r\n\r\n    const complete = totalClaimablePercentrage === 100\r\n\r\n    return <React.Fragment>\r\n            {tx.awaiting === 'btc-init' ? <span>\r\n                {`Waiting for BTC transaction to be initiated`}\r\n            </span> : null}\r\n            {tx.awaiting === 'btc-settle' ? <span>\r\n                {`BTC transaction confirming (${tx.btcConfirmations}/${'2'} complete)`}\r\n            </span> : null}\r\n            {tx.awaiting === 'ren-settle' ? <span>\r\n                {tx.error ? `Error submitting to RenVM` : `Submitting to RenVM`}\r\n            </span> : null}\r\n            {tx.awaiting === 'eth-settle' ? <span>\r\n                {tx.error ? `Error submitting to Ethereum` : `Submitting to Ethereum`}\r\n            </span> : null}\r\n            {!tx.awaiting ? <span>{complete ? `Stream complete` : `Streaming in progress`}</span> : null}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransactionStatus);\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport StreamTransactionStatus from './StreamTransactionStatus'\r\nimport { calculateStreamProgress } from '../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n    claimItem: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    depositStatus: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    links: {\r\n        '& a': {\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n    },\r\n    progress: {\r\n        position: 'relative',\r\n        marginRight: theme.spacing(1),\r\n        width: 18,\r\n        height: 18\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    info: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n})\r\n\r\nconst ClaimStreamTransaction = function(props) {\r\n    const {\r\n        tx,\r\n        index,\r\n        classes,\r\n    } = props\r\n\r\n    return <Grid className={classes.claimItem} key={index}>\r\n        <Grid item xs={4}>\r\n            <Grid container alignItems='center'>\r\n                <span>{tx.amount} BTC</span>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={8} className={classes.info}>\r\n            <div className={classes.links}>\r\n                <a target='_blank' href={'https://'+ (tx.network === 'testnet' ? 'kovan.' : '') +'etherscan.io/tx/'+tx.txHash}className={classes.viewLink}>\r\n                    View transaction\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <span>{(new Date(tx.timestamp).toLocaleString())}</span>\r\n            </div>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\nexport default withStyles(styles)(ClaimStreamTransaction);\r\n","import React from 'react';\r\nimport theme from '../../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { withStore } from '@spyna/react-store'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CountUp from 'react-countup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport {\r\n    claim,\r\n    updateStreamInfo,\r\n    removeTx,\r\n    calculateStreamProgress,\r\n    MIN_CLAIM_AMOUNT\r\n} from '../../utils/txUtils'\r\nimport StreamTransactionStatus from '../../components/StreamTransactionStatus'\r\nimport ClaimStreamTransaction from '../../components/ClaimStreamTransaction'\r\n\r\nconst styles = () => ({\r\n    progress: {\r\n        position: 'relative',\r\n        margin: '0px auto',\r\n        width: 250,\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progressText: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        '& p': {\r\n            margin: '0px'\r\n        }\r\n        // paddingTop: theme.spacing(5)\r\n    },\r\n    totalStreamed: {\r\n        fontSize: 24,\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    spinner: {\r\n        position: 'relative',\r\n        margin: '0px auto',\r\n        width: 24,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    spinnerTop: {\r\n        color: '#eee',\r\n    },\r\n    spinnerBottom: {\r\n        color: theme.palette.primary.main,\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    awaitingStatus: {\r\n        textAlign: 'center',\r\n        paddingBottom: theme.spacing(4),\r\n        fontSize: 12\r\n    },\r\n    claimButton: {\r\n        // margin: '0px auto'\r\n        textAlign: 'center',\r\n        paddingBottom: theme.spacing(3),\r\n        '& span': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    input: {\r\n        marginBottom: theme.spacing(2),\r\n        width: '100%',\r\n        '& input': {\r\n            fontSize: 12\r\n        },\r\n        '& p': {\r\n            fontSize: 12\r\n        },\r\n        '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n        }\r\n    },\r\n    hidden: {\r\n        display: 'none'\r\n    },\r\n    initContainer: {\r\n        // paddingTop: theme.spacing(3),\r\n        '& a': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    backLink: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    loadingContianer: {\r\n        // paddingTop: theme.spacing(3)\r\n    },\r\n    depositAddress: {\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        '& span': {\r\n            paddingBottom: theme.spacing(1)\r\n        }\r\n    },\r\n    address: {\r\n        minWidth: 300,\r\n        width: 'auto'\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        backgroundColor: '#999999'\r\n    },\r\n    claims: {\r\n    }\r\n})\r\n\r\n// clean up logic in this component\r\nclass ViewStreamContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n            totalClaimable: '',\r\n            amountClaimed: '',\r\n            amountClaimedPercentage: '',\r\n            availableAmount: '',\r\n            availablePercentage: '',\r\n            remaingDuration: ''\r\n        }\r\n        this.initAddressRef = React.createRef()\r\n        this.interval = null\r\n        this.scheduleInterval = null\r\n        this.mounted = false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const selectedTx = this.props.store.get('stream.selectedTx')\r\n        await updateStreamInfo.bind(this)(selectedTx)\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n\r\n        if (this.initAddressRef.current) {\r\n            this.initAddressRef.current.value = selectedTx.renBtcAddress\r\n        }\r\n\r\n        // this.interval = setInterval(() => {\r\n        //     updateStreamInfo.bind(this)(selectedTx)\r\n        // }, 5000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    back() {\r\n        const { store } = this.props\r\n        store.set('stream.activeView', 'start')\r\n        store.set('stream.selectedTx', null)\r\n        // console.log('back')\r\n    }\r\n\r\n    async claim() {\r\n        const { store } = this.props\r\n        const selectedTx = store.get('stream.selectedTx')\r\n        await claim.bind(this)(selectedTx)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const selectedTx = store.get('stream.selectedTx')\r\n\r\n        const {\r\n            loaded\r\n        } = this.state\r\n\r\n        const progress = calculateStreamProgress(selectedTx)\r\n\r\n        const {\r\n            totalClaimablePercentrage,\r\n            amountClaimedPercentage,\r\n            amountClaimablePercentage,\r\n            remaingDuration,\r\n            amount,\r\n            totalClaimableAmount,\r\n            claimedAmount,\r\n            claimableAmount,\r\n        } = progress\r\n\r\n        const { claimTransactions } = selectedTx\r\n        const claimRequesting = store.get('stream.claimRequesting')\r\n        const network = store.get('selectedNetwork')\r\n\r\n        console.log('progress', progress)\r\n\r\n        return <React.Fragment>\r\n            <div className={classes.backLink}>\r\n                <a href='javascript:;' onClick={this.back.bind(this)}>{'Back'}</a>\r\n            </div>\r\n            {!loaded ? <Grid item xs={12} className={classes.loadingContianer}>\r\n                <div className={classes.spinner}>\r\n                      <CircularProgress\r\n                        variant=\"determinate\"\r\n                        value={100}\r\n                        className={classes.spinnerTop}\r\n                        size={24}\r\n                        thickness={4}\r\n                      />\r\n                      <CircularProgress\r\n                        variant=\"indeterminate\"\r\n                        disableShrink\r\n                        className={classes.spinnerBottom}\r\n                        size={24}\r\n                        thickness={4}\r\n                      />\r\n                </div>\r\n            </Grid> :\r\n            <React.Fragment>\r\n                <Grid item xs={12} className={selectedTx.schedule ? classes.hidden : classes.initContainer}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.spinner}>\r\n                                  <CircularProgress\r\n                                    variant=\"determinate\"\r\n                                    value={100}\r\n                                    className={classes.spinnerTop}\r\n                                    size={24}\r\n                                    thickness={4}\r\n                                  />\r\n                                  <CircularProgress\r\n                                    variant=\"indeterminate\"\r\n                                    disableShrink\r\n                                    className={classes.spinnerBottom}\r\n                                    size={24}\r\n                                    thickness={4}\r\n                                  />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.awaitingStatus}>\r\n                            <StreamTransactionStatus tx={selectedTx} />\r\n                            {(selectedTx.awaiting === 'btc-init' || selectedTx.error) &&\r\n                                <p><a href='javascript:;'\r\n                                    className={classes.cancelLink}\r\n                                    onClick={() => {\r\n                                        removeTx(store, selectedTx)\r\n                                        store.set('stream.selectedTx', null)\r\n                                        store.set('stream.activeView', 'start')\r\n                                    }}>\r\n                                    Cancel\r\n                                </a></p>}\r\n\r\n                            {selectedTx.awaiting === 'btc-settle' && <p><a target='_blank' href={`https://live.blockcypher.com/${network === 'testnet' ? 'btc-testnet' : 'btc'}/tx/${selectedTx.btcTxHash}`}\r\n                                className={classes.cancelLink}>\r\n                                View pending transaction\r\n                            </a></p>}\r\n                        </Grid>\r\n                        <Grid item xs={12} onClick={() => {}}>\r\n                            <Grid container justify='center'>\r\n                                {selectedTx.awaiting === 'btc-init' && <div className={classes.depositAddress}>\r\n                                    <p><span>{`Send ${selectedTx.amount} BTC to the following address:`}</span></p>\r\n                                    <TextField className={classNames(classes.input, classes.address)}\r\n                                        label={''}\r\n                                        variant='outlined'\r\n                                        size='small'\r\n                                        placeholder='Deposit Address'\r\n                                        inputRef={this.initAddressRef}/>\r\n                                </div>}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify='center'>\r\n                                {selectedTx.awaiting === 'btc-init' || selectedTx.error || !selectedTx.awaiting ? <div className={classes.cancelLink}>\r\n                                    {selectedTx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://'+ (network === 'testnet' ? 'kovan.' : '') +'etherscan.io/tx/'+selectedTx.txHash}>View transaction</a> : null}\r\n                                </div> : null}\r\n                                {/*<span  onClick={() => store.set('activeStreamView', 'start')}>Cancel</span>*/}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={selectedTx.schedule && loaded ? classes.progressContainer : classes.hidden}>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.progress}>\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                value={100}\r\n                                className={classes.progressTop}\r\n                                size={250}\r\n                                thickness={2}\r\n                              />\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                className={classes.progressMiddle}\r\n                                size={250}\r\n                                value={Number(totalClaimablePercentrage)}\r\n                                thickness={2}\r\n                              />\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                className={classes.progressBottom}\r\n                                size={250}\r\n                                value={Number(amountClaimedPercentage)}\r\n                                thickness={2}\r\n                              />\r\n                        </div>\r\n                        <div className={classes.progressText}>\r\n                            <div>\r\n                                <p className={classes.totalStreamed}>\r\n                                    <b>{amount} BTC</b>\r\n                                </p>\r\n                            </div>\r\n                            <p>\r\n                                <b>{claimedAmount.toFixed(6)} / <CountUp start={totalClaimableAmount} end={selectedTx.amount} duration={remaingDuration} decimals={6}>{claimableAmount}</CountUp> BTC</b>\r\n                            </p>\r\n                            <p>\r\n                                <span>claimed</span>\r\n                            </p>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n                <Grid item xs={12} className={selectedTx.schedule && loaded ?classes.claimButton : classes.hidden}>\r\n                    {claimableAmount > MIN_CLAIM_AMOUNT ? <Button disabled={claimRequesting}\r\n                        className={''}\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        onClick={() => {\r\n                            this.claim.bind(this)()\r\n                        }}>\r\n                        {claimRequesting ? `Submitting transaction...` : `Claim ${claimableAmount.toFixed(6)} BTC`}\r\n                    </Button> : <span>{totalClaimablePercentrage < 100 ? `Minimum claim amount is ${MIN_CLAIM_AMOUNT} BTC` : 'All available funds claimed'}</span>}\r\n                </Grid>\r\n                {claimTransactions.length ? <Grid item xs={12}>\r\n                    <Divider className={classes.divider} />\r\n                </Grid> : null}\r\n                <div className={selectedTx.schedule && loaded ? classes.claimTransactions : classes.hidden}>\r\n                    {claimTransactions && claimTransactions.length ? claimTransactions.map((tx, index) => {\r\n                        return <ClaimStreamTransaction\r\n                            tx={tx}\r\n                            index={index}\r\n                            onView={t => {\r\n                            }}\r\n                            onCancel={t => {\r\n                            }}/>\r\n                    }) : null}\r\n                </div>\r\n            </React.Fragment>}\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default withStore(withStyles(styles)(ViewStreamContainer))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport StreamTransactionStatus from './StreamTransactionStatus'\r\nimport { calculateStreamProgress } from '../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n    depositItem: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    depositStatus: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    links: {\r\n        '& a': {\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n    },\r\n    progress: {\r\n        position: 'relative',\r\n        marginRight: theme.spacing(1),\r\n        width: 18,\r\n        height: 18\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n})\r\n\r\nconst StreamTransaction = function(props) {\r\n    // render() {\r\n        const {\r\n            tx,\r\n            index,\r\n            classes,\r\n            onView,\r\n            onCancel\r\n        } = props\r\n\r\n        const {\r\n            schedule\r\n        } = tx\r\n\r\n        const {\r\n            totalClaimablePercentrage,\r\n            amountClaimedPercentage\r\n        } = calculateStreamProgress(tx)\r\n\r\n        const completed = totalClaimablePercentrage === 100\r\n\r\n        return <Grid key={index}\r\n                  container\r\n                  direction='row'\r\n                  className={classes.depositItem}>\r\n            <Grid item xs={4}>\r\n                <Grid container alignItems='center'>\r\n                    <div className={classes.progress}>\r\n                          <CircularProgress\r\n                            variant=\"static\"\r\n                            value={100}\r\n                            className={classes.progressTop}\r\n                            size={18}\r\n                            thickness={4}\r\n                          />\r\n                          <CircularProgress\r\n                            variant=\"static\"\r\n                            className={classes.progressMiddle}\r\n                            size={18}\r\n                            value={totalClaimablePercentrage}\r\n                            thickness={4}\r\n                          />\r\n                          <CircularProgress\r\n                            variant=\"static\"\r\n                            className={classes.progressBottom}\r\n                            size={18}\r\n                            value={amountClaimedPercentage}\r\n                            thickness={4}\r\n                          />\r\n                    </div>\r\n                    <span>{tx.amount} BTC</span>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.depositStatus} item xs={8}>\r\n                <StreamTransactionStatus tx={tx} />\r\n                <div className={classes.links}>\r\n                    <a href='javascript:;' className={classes.viewLink} onClick={() => (onView(tx))}>\r\n                        View\r\n                    </a>\r\n                    {completed && <a href='javascript:;' className={classes.viewLink} onClick={() => (onCancel(tx))}>\r\n                        Clear\r\n                    </a>}\r\n\r\n                    {/*tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}>View transaction</a> : null*/}\r\n\r\n                    {/*tx.awaiting === 'btc-init' || tx.error ? <a href='javascript:;' onClick={() => {\r\n                        onCancel(tx)\r\n                    }}>Cancel</a> : null*/}\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    // }\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransaction);\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nimport Chip from '@material-ui/core/Chip'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n\r\nconst styles = () => ({\r\n    container: {\r\n        fontSize: 12,\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n})\r\n\r\nfunction Disclosure(props){\r\n    const { classes } = props\r\n    return <Chip\r\n        className={classes.container}\r\n        icon={<WarningIcon />}\r\n        label={<span><a href='https://chaos.renproject.io/' target='_blank'>Chaosnet</a> is unaudited and this project is in beta. Use at your own risk.</span>}\r\n    />\r\n}\r\n\r\nexport default withStyles(styles)(Disclosure);\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    initInstantSwap,\r\n    recoverStreams\r\n} from '../../utils/txUtils'\r\n\r\nimport {\r\n    switchNetwork\r\n} from '../../utils/networkingUtils'\r\n\r\nimport ViewStream from './ViewStreamContainer'\r\nimport StreamTransaction from '../../components/StreamTransaction'\r\nimport NetworkChooser from '../../components/NetworkChooser'\r\nimport Disclosure from '../../components/Disclosure'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  force_gasLimit: 200000, //override requested gas limit.\r\n  gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #7f7f7f',\r\n      padding: theme.spacing(3),\r\n\r\n      // marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    // paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      backgroundColor: '#999999'\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(4),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  },\r\n  radio: {\r\n      marginBottom: theme.spacing(2),\r\n      flexDirection: 'row',\r\n      '& span': {\r\n        fontSize: 12\r\n      }\r\n  },\r\n  searchLink: {\r\n      fontSize: 12,\r\n      minWidth: 80\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass StreamContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { store } = this.props\r\n\r\n        const txs = localStorage.getItem('stream.transactions')\r\n\r\n        if (txs) {\r\n            store.set('stream.transactions', JSON.parse(txs))\r\n        }\r\n\r\n        // // monitor normal swaps\r\n        // initMonitoring.bind(this)()\r\n        //\r\n        // // monitor instant swaps\r\n        // initInstantMonitoring.bind(this)()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('stream.amount')\r\n        const address = store.get('stream.address')\r\n        const startTime = Math.round(Date.now() / 1000)\r\n        const duration = store.get('stream.duration')\r\n        const network = store.get('selectedNetwork')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.random().toFixed(6),\r\n            network,\r\n            type: 'stream',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            btcConfirmations: 0,\r\n            btcTxHash: '',\r\n            destAddress: address,\r\n            amount: amount,\r\n            startTime,\r\n            duration,\r\n            error: false,\r\n            txHash: '',\r\n            claimTransactions: []\r\n        }\r\n\r\n        store.set('stream.selectedTx', tx)\r\n        store.set('stream.activeView', 'view-stream')\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    viewTx(tx) {\r\n        const { store } =  this.props\r\n\r\n        store.set('stream.selectedTx', tx)\r\n        store.set('stream.activeView', 'view-stream')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        // console.log(store.getState())\r\n        const network = store.get('selectedNetwork')\r\n        const amount = store.get('stream.amount')\r\n        const address = store.get('stream.address')\r\n        const duration = store.get('stream.duration')\r\n        const transactions = store.get('stream.transactions').filter(t => t.network === network)\r\n        const activeView = store.get('stream.activeView')\r\n        const selectedTx = store.get('stream.selectedTx')\r\n        const searchAddress = store.get('stream.searchAddress')\r\n        const adapterAddress = store.get('stream.adapterAddress')\r\n\r\n        const disabled = amount < 0.00011 || !address || !duration\r\n        // const disabled = false\r\n\r\n        return <Grid container>\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='row'>\r\n                    {activeView === 'start' && <React.Fragment>\r\n                        <Grid className={classes.desc} item xs={12}>\r\n                            <span >Stream BTC</span>\r\n                            <NetworkChooser\r\n                                currentNetwork={network}\r\n                                onChange={(e) => {\r\n                                    switchNetwork.bind(this)(e.target.value)\r\n                                }} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.amountContainer}>\r\n                                    <TextField className={classNames(classes.input, classes.amount)}\r\n                                        variant='outlined'\r\n                                        size='small'\r\n                                        placeholder='0.000000'\r\n                                        onChange={e => {\r\n                                            store.set('stream.amount', e.target.value)\r\n                                        }}\r\n                                        InputProps={{\r\n                                            endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                        }}/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Stream to BTC Address' onChange={e => {\r\n                                        store.set('stream.address', e.target.value)\r\n                                    }}/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Duration in Minutes' onChange={e => {\r\n                                        store.set('stream.duration', e.target.value)\r\n                                    }}/>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                            <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={this.start.bind(this)}>Start Stream</Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Divider className={classes.divider} />\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                            <TextField\r\n                                className={classNames(classes.input, classes.address)}\r\n                                variant='outlined'\r\n                                size='small'\r\n                                placeholder='Search by Destination Address'\r\n                                onChange={e => {\r\n                                    store.set('stream.searchAddress', e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment\r\n                                        className={classes.searchLink}\r\n                                        position=\"end\">\r\n                                            <a href='javascript:;' onClick={() => {\r\n                                                recoverStreams.bind(this)(searchAddress)\r\n                                            }}>Get Streams</a>\r\n                                        </InputAdornment>\r\n                                }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.unfinished}>\r\n                            {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                                    return <StreamTransaction\r\n                                        tx={tx}\r\n                                        index={index}\r\n                                        onView={t => {\r\n                                            this.viewTx.bind(this)(t)\r\n                                        }}\r\n                                        onCancel={t => {\r\n                                            removeTx(store, t)\r\n                                        }}/>\r\n                                }) : null}\r\n                        </Grid>\r\n                    </React.Fragment>}\r\n                    {activeView === 'view-stream' && <Grid container direction='row'>\r\n                        <Grid item xs={12}>\r\n                            <ViewStream selectedTx={selectedTx} />\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    Streams use <a target='_blank' href='https://renproject.io/'>RenVM</a> and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. Active streams are held in a smart contract that allows anyone to shift out a valid amount of earned BTC to the recipient BTC address at any time.\r\n                </p>\r\n                <p>\r\n                    Streams are facilitated through the following adapter address: <a target='_blank' href={'https://'+ (network === 'testnet' ? 'kovan.' : '') +'etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                </p>\r\n                <ul>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>Bitcoin Payments Tutorial</a> | Scheduled Bitcoin Payments</li>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                    <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                </ul>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(StreamContainer))\r\n","import React from 'react';\r\nimport { createStore, withStore } from '@spyna/react-store'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    updateTx,\r\n    SWAP_ADAPTER_TEST,\r\n    STREAM_ADAPTER_TEST\r\n} from './utils/txUtils'\r\n\r\nimport {\r\n    initNetworking,\r\n    initLocalTransactions,\r\n} from './utils/networkingUtils'\r\n\r\n\r\nimport NavContainer from './containers/NavContainer'\r\nimport ActionTabsContainer from './containers/ActionTabsContainer'\r\nimport DepositContainer from './containers/DepositContainer'\r\nimport StreamContainer from './containers/Stream/StreamContainer'\r\nimport Disclosure from './components/Disclosure'\r\n\r\nimport theme from './theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport { withStyles, ThemeProvider } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import TabPanel from '@material-ui/core/TabPanel'\r\n\r\n\r\n\r\nconst styles = () => ({\r\n    warning: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(1),\r\n        width: '100%',\r\n        '& span': {\r\n            padding: theme.spacing(0.5),\r\n            whiteSpace: 'normal',\r\n            // fontSize: 12\r\n        },\r\n    }\r\n})\r\n\r\nconst initialState = {\r\n    'selectedActionTab': 'exchange',\r\n    'selectedNetwork': 'testnet',\r\n    'pendingShiftIns': [],\r\n    // exchange\r\n    'swap.transactions': [],\r\n    'swap.adapterAddress': SWAP_ADAPTER_TEST,\r\n    'swap.instantSwapSelected': false,\r\n    'swap.amount': '',\r\n    'swap.address': '',\r\n    // streaming\r\n    'stream.adapterAddress': STREAM_ADAPTER_TEST,\r\n    'stream.transactions': [],\r\n    'stream.amount': '',\r\n    'stream.destination': '',\r\n    'stream.duration': '',\r\n    'stream.activeView': 'start',\r\n    'stream.selectedTx': null,\r\n    'stream.searchAddress': '',\r\n    'stream.claimRequesting': false,\r\n}\r\n\r\n\r\nclass AppWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await initNetworking.bind(this)('testnet')\r\n        initLocalTransactions.bind(this)()\r\n\r\n        // monitor normal swaps\r\n        initMonitoring.bind(this)()\r\n\r\n        // monitor instant swaps\r\n        initInstantMonitoring.bind(this)()\r\n\r\n        window.store = this.props.store\r\n\r\n        window.updateTx = updateTx.bind(this)\r\n    }\r\n\r\n    render(){\r\n        const { store, classes } = this.props\r\n        const {\r\n            selectedActionTab\r\n        } = store.getState()\r\n\r\n        return <Container maxWidth=\"lg\">\r\n            <Router>\r\n                <Grid container>\r\n                    {/*<Grid item xs={12}>\r\n                        <NavContainer />\r\n                    </Grid>*/}\r\n                    <Grid item xs={12} sm={3} md={3}>\r\n                        <ActionTabsContainer />\r\n                    </Grid>\r\n                    <Grid className={classes.content} item xs={12} sm={9} md={6}>\r\n                        <div className={classes.warning}><Disclosure /></div>\r\n                        {selectedActionTab === 'exchange' && <DepositContainer />}\r\n                        {selectedActionTab === 'swap' && <StreamContainer />}\r\n                        {/*<Switch>\r\n                            <Route exact path=\"/\" component={<DepositContainer />}>\r\n                                {selectedActionTab === 'exchange' && <DepositContainer />}\r\n                            </Route>\r\n                            <Route path=\"/stream\">\r\n                                {selectedActionTab === 'swap' && <StreamContainer />}\r\n                            </Route>\r\n                        </Switch>*/}\r\n                    </Grid>\r\n                </Grid>\r\n            </Router>\r\n        </Container>\r\n    }\r\n}\r\n\r\nconst AppWrapperComponent = withStore(AppWrapper)\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <AppWrapperComponent classes={classes}/>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createStore(withStyles(styles)(App), initialState)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/renvm-logo.f545406f.svg\";"],"sourceRoot":""}