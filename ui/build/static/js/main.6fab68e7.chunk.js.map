{"version":3,"sources":["theme/theme.js","containers/NavContainer.js","containers/ActionTabsContainer.js","components/SwapTransactionStatus.js","utils/txUtils.js","containers/DepositContainer.js","components/StreamTransactionStatus.js","components/ClaimStreamTransaction.js","containers/Stream/ViewStreamContainer.js","components/StreamTransaction.js","containers/Stream/StreamContainer.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","grey","overrides","PrivateNotchedOutline","root","MuiOutlinedInput","notchedOutline","borderColor","borderWidth","MuiTextField","MuiToggleButtonGroup","grouped","borderLeft","MuiToggleButton","border","backgroundColor","color","fontWeight","NavContainer","props","this","classes","walletAddress","store","get","length","console","log","state","getState","Grid","item","xs","className","navContainer","container","alignItems","Typography","variant","React","Component","withStyles","paddingTop","theme","spacing","paddingBottom","minHeight","logo","height","width","marginRight","accountButton","withStore","ActionTabsContainer","value","set","Tabs","orientation","onChange","e","changeTabs","bind","tabs","Tab","label","paddingRight","tx","Fragment","awaiting","renBtcAddress","btcConfirmations","addTx","storeString","type","txs","push","localStorage","setItem","JSON","stringify","window","updateTx","newTx","map","t","id","removeTx","filter","getStreams","a","web3","adapterAddress","adapterContract","eth","Contract","streamAdapterABI","adapter","methods","getSchedules","call","schedules","recoverStreams","destAddress","beneficiary","utils","fromAscii","s","amount","BigNumber","Math","random","toFixed","instant","source","dest","div","toNumber","startTime","duration","error","txHash","schedule","calculateStreamProgress","totalClaimablePercentrage","amountClaimedPercentage","start","Number","now","floor","Date","end","amountClaimed","updateStreamInfo","sched","minutesClaimed","Object","assign","claim","web3Context","claimAmount","lib","getGasPrice","gasPrice","send","from","accounts","round","gasLimit","on","hash","claimTransactions","concat","timestamp","confirmationNumber","receipt","completeDeposit","params","renResponse","renSignature","adapterABI","shiftInWithSwap","contractParams","sendAmount","args","nhash","result","addVestingSchedule","transactionHash","initShiftIn","shiftIn","ethSig","sdk","contractFn","name","messageID","sendTo","amt","data","sendToken","RenJS","Tokens","BTC","Btc2Eth","times","nonce","gatewayAddress","initDeposit","addr","waitForDeposit","dep","utxo","confirmations","btcTxHash","txid","deposit","submitToRenVM","signature","response","initInstantSwap","address","fetch","method","headers","body","sourceAmount","sourceAsset","destinationAsset","destinationAddress","request","json","initInstantMonitoring","setInterval","req","status","initMonitoring","signKey","ephemeral","relay_client_config","txfee","verbose","DepositContainer","fromConnection","gsn","swaps","getItem","streams","parse","clearInterval","swapMonitor","instantSwapSelected","transactions","disabled","contentContainer","direction","desc","btcLink","target","href","amountContainer","TextField","classNames","input","size","placeholder","InputProps","endAdornment","InputAdornment","position","switchContainer","FormControlLabel","control","Switch","checked","swapButtonContainer","Button","swapButton","onClick","startInstant","Divider","divider","unfinished","index","key","depositItem","depositStatus","SwapTransactionStatus","viewLink","info","caption","flexGrow","paper","padding","marginTop","marginBottom","fontSize","title","display","justifyContent","actionTabs","textAlign","complete","claimItem","links","marginLeft","progress","progressTop","progressMiddle","animationDuration","left","progressBottom","progressContainer","toLocaleString","ViewStreamContainer","loaded","totalClaimable","availableAmount","availablePercentage","remaingDuration","initAddressRef","createRef","interval","scheduleInterval","mounted","selectedTx","setState","current","calculateStats","period","claimableAmount","claimRequesting","backLink","back","hidden","initContainer","spinner","CircularProgress","spinnerTop","thickness","disableShrink","spinnerBottom","awaitingStatus","cancelLink","justify","depositAddress","inputRef","progressText","totalStreamed","decimals","claimButton","onView","onCancel","loadingContianer","margin","top","flexDirection","minWidth","claims","StreamContainer","activeView","searchAddress","searchLink","viewTx","radio","AppWrapper","selectedActionTab","Container","maxWidth","sm","App","ThemeProvider","createStore","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAIeA,cAAe,CAC1BC,QAAS,CACLC,QAAS,CACLC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,aAAc,QAGlBC,UAAWC,KAEfC,UAAW,CASPC,sBAAuB,CACnBC,KAAM,IAMVC,iBAAkB,CAQdC,eAAgB,CACZC,YAAa,qBACbC,YAAa,mBAGrBC,aAAc,GAGdC,qBAAsB,CACpBC,QAAS,CACP,sBAAuB,CACrBC,WAAY,uBAKlBC,gBAAiB,CACbT,KAAM,CACFU,OAAQ,oBACRC,gBAAiB,OACjB,iBAAkB,CAEdA,gBAAiB,kBACjBC,MAAO,OACPC,WAAY,MACZ,UAAW,CACPF,gBAAiB,oBAGzB,UAAW,CACPA,gBAAiB,wB,oCC9B/BG,E,YAEF,WAAYC,GAAQ,qEACVA,I,gTAMA,IAAD,EAIDC,KAAKD,MAFLE,EAFC,EAEDA,QAIEC,EAND,EAGDC,MAGwBC,IAAI,iBACbF,GAAiBA,EAAcG,OAIlD,OAFAC,QAAQC,IAAIP,KAAKD,MAAOC,KAAKQ,MAAOR,KAAKD,MAAMI,MAAMM,YAE9C,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACjB,kBAACF,EAAA,EAAD,CAAMG,UAAWZ,EAAQa,aAAcC,WAAS,EAACC,WAAW,UAC3D,kBAACN,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMK,WAAS,EAACC,WAAW,UACvB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,kC,GAxBKC,IAAMC,W,GAgClBC,YAlDA,iBAAO,CAClBP,aAAc,CACVQ,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,GAC7BE,UAAW,IAEfC,KAAM,CACFC,OAAQ,GACRC,MAAO,GACPC,YAAaP,EAAMC,QAAQ,IAE/BO,cAAe,CACb,QAAS,CACPD,YAAaP,EAAMC,QAAQ,OAqCpBH,CAAmBW,YAAUlC,I,mBCvCtCmC,E,YAEF,WAAYlC,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQT,EAAMI,MAAMM,WAFV,E,wEAKRyB,GACWlC,KAAKD,MAAfI,MACFgC,IAAI,oBAAqBD,K,+BAGzB,IAAD,SAIDlC,KAAKD,MAFLE,EAFC,EAEDA,QACAE,EAHC,EAGDA,MAKJ,OAAO,kBAACiC,EAAA,EAAD,CACLC,YAAY,WACZH,MAAO/B,EAAMC,IAAI,qBACjBkC,SAAU,SAACC,EAAGL,GACZ,EAAKM,WAAWC,KAAK,EAArB,CAA2BP,IAE7BrB,UAAWZ,EAAQyC,MAEnB,kBAACC,EAAA,EAAD,CAAKT,MAAO,WAAYU,MAAM,aAC9B,kBAACD,EAAA,EAAD,CAAKT,MAAO,SAAUU,MAAM,4B,GA7BJzB,IAAMC,WAkCzBC,cA/CA,iBAAO,CAClBqB,KAAM,CACFpB,WAAYC,EAAMC,QAAQ,GAC1BqB,aAActB,EAAMC,QAAQ,GAC5B,oBAAqB,CACjBR,WAAY,eA0CTK,CAAmBW,YAAUC,I,gHCpC7BZ,cAzBA,iBAAO,IAyBPA,CAtBiB,SAAStB,GAAQ,IAEzC+C,EACA/C,EADA+C,GAGJ,OAAO,kBAAC,IAAMC,SAAP,KACkB,aAAhBD,EAAGE,SAA0B,6EACsB,6BADtB,UACgCF,EAAGG,gBACvD,KACO,eAAhBH,EAAGE,SAA4B,oEACIF,EAAGI,iBADP,IAC2B,IAD3B,eAEtB,KACO,eAAhBJ,EAAGE,SAA4B,qDAEtB,KACO,eAAhBF,EAAGE,SAA4B,wDAEtB,KACRF,EAAGE,SAA4C,KAAjC,kD,kBCffG,EAAQ,SAAChD,EAAO2C,GACzB,IAAMM,EAA0B,SAAZN,EAAGO,KAAkB,oBAAsB,sBAC3DC,EAAMnD,EAAMC,IAAIgD,GACpBE,EAAIC,KAAKT,GACT3C,EAAMgC,IAAIiB,EAAaE,GACvBE,aAAaC,QAAQL,EAAaM,KAAKC,UAAUL,IAEjDM,OAAOR,GAAeE,GAGbO,EAAW,SAAC1D,EAAO2D,GAC5B,IAAMV,EAA6B,SAAfU,EAAMT,KAAkB,oBAAsB,sBAC5DC,EAAMnD,EAAMC,IAAIgD,GAAaW,IAAI,SAAAC,GACnC,OAAIA,EAAEC,KAAOH,EAAMG,GAERH,EAEJE,IAEX7D,EAAMgC,IAAIiB,EAAaE,GACvBE,aAAaC,QAAQL,EAAaM,KAAKC,UAAUL,IAGjDM,OAAOR,GAAeE,GAGbY,EAAW,SAAC/D,EAAO2C,GAC5B,IAAMM,EAA0B,SAAZN,EAAGO,KAAkB,oBAAsB,sBAC3DC,EAAMnD,EAAMC,IAAIgD,GAAae,OAAO,SAAAH,GAAC,OAAKA,EAAEC,KAAOnB,EAAGmB,KAE1D9D,EAAMgC,IAAIiB,EAAaE,GACvBE,aAAaC,QAAQL,EAAaM,KAAKC,UAAUL,IAGjDM,OAAOR,GAAeE,GAGbc,EAAU,sCAAG,oCAAAC,EAAA,4DAEdlE,EAAWH,KAAKD,MAAhBI,MACFmE,EAAOnE,EAAMC,IAAI,QAEjBmE,EAAiBpE,EAAMC,IAAI,yBAC3BoE,EAAkB,IAAIF,EAAKG,IAAIC,SAASC,EAAkBJ,GAEhEX,OAAOgB,QAAUJ,EARK,SASEA,EAAgBK,QAAQC,eAAeC,OATzC,cAShBC,EATgB,yBAWfA,GAXe,8CAAH,qDAcVC,EAAc,sCAAG,WAAeC,GAAf,qBAAAb,EAAA,4DAClBlE,EAAUH,KAAKD,MAAfI,MACFmE,EAAOnE,EAAMC,IAAI,QAFG,SAGFgE,EAAW3B,KAAKzC,KAAhBoE,GAHE,OAGpBY,EAHoB,OAIpBG,EAAcb,EAAKc,MAAMC,UAAUH,GAEzCF,EAAUjB,IAAI,SAAAuB,GAEV,GAAIA,EAAEH,cAAgBA,EAAa,CAC/B,IAAMI,EAAS,IAAIC,IAAUF,EAAEC,QACzBzC,EAAK,CACPmB,GAAI,MAAQwB,KAAKC,SAASC,QAAQ,GAClCtC,KAAM,SACNuC,SAAS,EACT5C,SAAU,GACV6C,OAAQ,MACRC,KAAM,MACNZ,cACAK,OAAQA,EAAOQ,IAAP,SAAW,GAAM,IAAGC,WAC5BC,UAAWX,EAAEW,UACbC,SAAUZ,EAAEY,SACZC,OAAO,EACPC,OAAQ,GACRC,SAAUf,GAGdnC,EAAMhD,EAAO2C,MA1BK,8CAAH,sDAiCdwD,EAA0B,SAASxD,GAC5C,IAAMuD,EAAWvD,EAAGuD,SAChBE,EAA4B,EAC5BC,EAA0B,EAE9B,GAAIH,EAAU,CACV,IAAMI,EAAQC,OAAOL,EAASJ,WACxBU,EAAMlB,KAAKmB,MAAMC,KAAKF,MAAQ,KAC9BG,EAAMJ,OAAOL,EAASJ,WAAcS,OAA2B,GAApBL,EAASH,UAGtDK,EADAI,EAAMG,EACsB,IAEAJ,SAAUC,EAAMF,IAJjCK,EAAML,GAI8C,KAAKd,QAAQ,IAEhFa,EAA0BE,QAASL,EAASU,cAAgBV,EAASd,OAAU,KAAKI,QAAQ,IAGhG,MAAO,CACHY,4BACAC,4BAKKQ,EAAgB,sCAAG,WAAelE,GAAf,iCAAAuB,EAAA,4DACpBlE,EAAWH,KAAKD,MAAhBI,MACFmE,EAAOnE,EAAMC,IAAI,QACjBmE,EAAiBpE,EAAMC,IAAI,yBACzB6F,EAA2BnD,EAA3BmD,UAAWf,EAAgBpC,EAAhBoC,YAEK,IAAIZ,EAAKG,IAAIC,SAASC,EAAkBJ,GAE1DY,EAAcb,EAAKc,MAAMC,UAAUH,GARb,SASJd,EAAW3B,KAAKzC,KAAhBoE,GATI,OAStBY,EATsB,QAWtBqB,EAAWrB,EAAUb,OAAO,SAAAmB,GAAC,OAC/BoB,OAAOpB,EAAEW,aAAeS,OAAOT,IAC/BX,EAAEH,cAAgBA,IACnB,KAEakB,EAASlB,cAEf8B,EAAQ,CACVhD,GAAIoC,EAASpC,GACbkB,YAAakB,EAASlB,YACtBc,UAAWI,EAASJ,UACpBC,SAAUG,EAASH,SACnBX,OAAQc,EAASd,OACjBwB,cAAeV,EAASU,cACxBG,eAAgBb,EAASa,iBAEzBpD,EAAQqD,OAAOC,OAAOtE,EAAI,KACxBuD,SAAWY,EACjBpD,EAAS1D,EAAO2D,IA7BQ,+CAAH,sDAiChBuD,EAAK,sCAAG,WAAevE,GAAf,0CAAAuB,EAAA,4DACTlE,EAAWH,KAAKD,MAAhBI,MACFmE,EAAOnE,EAAMC,IAAI,QACjBkH,EAAcnH,EAAMC,IAAI,eAExBmE,EAAiBpE,EAAMC,IAAI,yBACC0C,EAA1BoC,YAAamB,EAAavD,EAAbuD,SAErBlG,EAAMgC,IAAI,0BAA0B,GARnB,EAabmE,EAAwBxD,GAFxByD,EAXa,EAWbA,0BACAC,EAZa,EAYbA,wBAGEe,IAAiBhB,EAA4BC,GAA2B,IAAO1D,EAAGyC,QAAQI,QAAQ,GAElGnB,EAAkB,IAAIF,EAAKG,IAAIC,SAASC,EAAkBJ,GAjB/C,UAkBM+C,EAAYE,IAAI/C,IAAIgD,cAlB1B,eAkBXC,EAlBW,2BAuBQlD,EAAgBK,QAAQwC,MACzChB,EAASpC,IACX0D,KAAK,CACHC,KAAMN,EAAYO,SAAS,GAC3BH,SAAUjC,KAAKqC,MAAiB,IAAXJ,GACrBK,SAAU,OACXC,GAAG,kBAAmB,SAACC,GACtBpE,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAC9BoF,kBAAmBpF,EAAGoF,kBAAkBC,OAAO,CAAC,CAC5CC,UAAWvB,KAAKF,MAChBpB,OAAQgC,EACRnB,OAAQ6B,QAGhB9H,EAAMgC,IAAI,0BAA0B,KACrC6F,GAAG,eAAgB,SAACK,EAAoBC,GAEvCtB,EAAiBvE,KAAK,EAAtBuE,CAA4BlE,KAxCnB,kEA4CbxC,QAAQC,IAAR,MACAJ,EAAMgC,IAAI,0BAA0B,GA7CvB,yDAAH,sDAiDLoG,EAAe,sCAAG,WAAezF,GAAf,iCAAAuB,EAAA,4DACnBlE,EAAWH,KAAKD,MAAhBI,MACFmE,EAAOnE,EAAMC,IAAI,QACjBkH,EAAcnH,EAAMC,IAAI,eAGtBiD,EAAsDP,EAAtDO,KAAMmF,EAAgD1F,EAAhD0F,OAAgD1F,EAAxCE,SAAUyF,EAA8B3F,EAA9B2F,YAAaC,EAAiB5F,EAAjB4F,aAGhC,SAATrF,EACAmB,EAAkB,IAAIF,EAAKG,IAAIC,SAASiE,EAAYxI,EAAMC,IAAI,wBAC9C,WAATiD,IACPmB,EAAkB,IAAIF,EAAKG,IAAIC,SAASC,EAAkBxE,EAAMC,IAAI,2BAZ7C,SAeJkH,EAAYE,IAAI/C,IAAIgD,cAfhB,UAerBC,EAfqB,OAiB3B7D,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAAEE,SAAU,gBAjBnB,SAuBV,SAATK,EAvBmB,kCAwBJmB,EAAgBK,QAAQ+D,gBACnCJ,EAAOK,eAAe,GAAG3G,MACzBsG,EAAOM,WACPL,EAAYM,KAAKC,MACjBN,GACFf,KAAK,CACHC,KAAMN,EAAYO,SAAS,GAC3BH,SAAUjC,KAAKqC,MAAiB,IAAXJ,GACrBK,SAAU,MAhCK,QAwBnBkB,EAxBmB,kCAkCH,WAAT5F,EAlCY,kCAmCJmB,EAAgBK,QAAQqE,mBACnCV,EAAOK,eAAe,GAAG3G,MACzBsG,EAAOK,eAAe,GAAG3G,MACzBwE,OAAO8B,EAAOK,eAAe,GAAG3G,OAChCsG,EAAOM,WACPL,EAAYM,KAAKC,MACjBN,GACFf,KAAK,CACHC,KAAMN,EAAYO,SAAS,GAC3BH,SAAUjC,KAAKqC,MAAiB,IAAXJ,GACrBK,SAAU,OA7CK,eAmCnBkB,EAnCmB,iBA+CbjC,EAAiBvE,KAAKzC,KAAtBgH,CAA4BlE,GA/Cf,QAiDvBe,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAAEE,SAAU,GAAIoD,OAAQ6C,EAAOE,mBAjD1C,kDAoDvBtF,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAAEqD,OAAO,KApDpB,wDAAH,sDAwDfiD,GAAc,SAAStG,GAAK,IAsDjCuG,EApDFhG,EASEP,EATFO,KACAkC,EAQEzC,EARFyC,OACAtC,EAOEH,EAPFG,cACAuF,EAME1F,EANF0F,OACAc,EAKExG,EALFwG,OACApE,EAIEpC,EAJFoC,YAEAe,EAEEnD,EAFFmD,UACAC,EACEpD,EADFoD,SAVkC,EAehClG,KAAKD,MAAMI,MAAMM,WAFjB8I,EAbgC,EAahCA,IACAjF,EAdgC,EAchCA,KAGAC,EAAiB,GACjBiF,EAAa,GACbX,EAAiB,GAoCrB,GAlCa,SAATxF,GACAkB,EAAiBvE,KAAKD,MAAMI,MAAMC,IAAI,uBACtCoJ,EAAa,kBACbX,EAAiB,CACb,CACIY,KAAM,MACNpG,KAAM,UACNnB,MAAOgD,KAGC,WAAT7B,IACPkB,EAAiBvE,KAAKD,MAAMI,MAAMC,IAAI,yBACtCoJ,EAAa,qBACbX,EAAiB,CACb,CACIY,KAAM,eACNpG,KAAM,QACNnB,MAAOoC,EAAKc,MAAMC,UAAUH,IAEhC,CACIuE,KAAM,aACNpG,KAAM,UACNnB,MAAO+D,GAEX,CACIwD,KAAM,YACNpG,KAAM,SACNnB,MAAOgE,KAOfoD,EACAD,EAAUE,EAAIF,QAAQ,CAClBK,UAAWJ,EAAOI,UAClBC,OAAQpF,EACRiF,aACAX,uBAED,CACH,IAAMe,EAAM,IAAIpE,IAAUD,GACtBsE,EAAO,CACPC,UAAWC,IAAMC,OAAOC,IAAIC,QAC5BpB,WAAYc,EAAIO,MAAJ,SAAU,GAAM,IAAGnE,WAC/B2D,OAAQpF,EACRiF,aACAX,kBAGAL,GAAUA,EAAO4B,QACjBP,EAAKO,MAAQ5B,EAAO4B,OAGxBf,EAAUE,EAAIF,QAAQQ,GAQ1B,OALI5G,GAAiBuF,IACjBa,EAAQb,OAASA,EACjBa,EAAQgB,eAAiBpH,GAGtBoG,GAGEiB,GAAW,sCAAG,WAAexH,GAAf,+BAAAuB,EAAA,wDACflE,EAAWH,KAAKD,MAAhBI,MAEJqI,EAMA1F,EANA0F,OACAxF,EAKAF,EALAE,SACAyF,EAIA3F,EAJA2F,YACAC,EAGA5F,EAHA4F,aACAvC,EAEArD,EAFAqD,MAEArD,EADAI,iBAMCF,EAdkB,oDAiBnBmD,GACAtC,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAAEqD,OAAO,MAI3CsC,IAAeC,EAtBI,gBAuBnBH,EAAgB9F,KAAKzC,KAArBuI,CAA2BzF,GAvBR,wCA0BGsG,GAAY3G,KAAKzC,KAAjBoJ,CAAuBtG,GA1B1B,eA0BbuG,EA1Ba,OA8Bdb,GACDrF,EAAMhD,EAAOgH,OAAOC,OAAOtE,EAAI,CAC3B0F,OAAQa,EAAQb,OAChBvF,cAAeoG,EAAQkB,UAjCZ,UAsCGlB,EACjBmB,eAAe,GACfxC,GAAG,UAAW,SAAAyC,GAEPA,EAAIC,MAEA7G,EAAS1D,EADI,aAAb6C,EACgBmE,OAAOC,OAAOtE,EAAI,CAC9BE,SAAU,aACVE,iBAAkBuH,EAAIC,KAAKC,cAC3BC,UAAWH,EAAIC,KAAKG,OAGR1D,OAAOC,OAAOtE,EAAI,CAC9BI,iBAAkBuH,EAAIC,KAAKC,cAC3BC,UAAWH,EAAIC,KAAKG,UApDrB,eAsCbC,EAtCa,OA0DnBjH,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAAEE,SAAU,gBA1D3B,oBA6DS8H,EAAQC,gBA7DjB,QA6DTC,EA7DS,OA8DfnH,EAAS1D,EAAOgH,OAAOC,OAAOtE,EAAI,CAC9B2F,YAAauC,EAAUC,SACvBvC,aAAcsC,EAAUA,aAG5BzC,EAAgB9F,KAAKzC,KAArBuI,CAA2BzF,GAnEZ,mDAqEfxC,QAAQC,IAAR,MArEe,yDAAH,sDA0EX2K,GAAe,sCAAG,WAAepI,GAAf,uBAAAuB,EAAA,4DACnBlE,EAAWH,KAAKD,MAAhBI,MACuD2C,EAAvD0F,OAAuD1F,EAA/CE,SAA+CF,EAArC2F,YAAqC3F,EAAxB4F,aAAwB5F,EAAVqD,MAE/CgF,EAAUhL,EAAMC,IAAI,gBACpBmF,EAASpF,EAAMC,IAAI,eALE,SAOLgL,MAAM,GAAD,OAraR,GAqaQ,wBAAmC,CAC1DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM7H,KAAKC,UAAU,CACjB6H,aAAcjG,EACdkG,YAAa,MACbC,iBAAkB,MAClBC,mBAAoBR,MAhBD,cAOrBS,EAPqB,gBAmBRA,EAAQC,OAnBA,OAmBrBhC,EAnBqB,OAoB3B1G,EAAMhD,EAAOgH,OAAOC,OAAOtE,EAAI,CAC3BG,cAAe4G,EAAKQ,kBArBG,+CAAH,sDAyBfyB,GAAwB,WAAY,IAAD,OAC9BC,YAAW,qBAAC,sBAAA1H,EAAA,qDACD,EAAKtE,MAAMI,MAAMC,IAAI,qBAC7B+D,OAAO,SAACH,GAAD,OAAQA,EAAE4B,SAA0B,aAAf5B,EAAEhB,WAA0Be,IAArE,sCAAyE,WAAMjB,GAAN,iBAAAuB,EAAA,qEACnD+G,MAAM,GAAD,OA3bZ,GA2bY,wCAA2CtI,EAAGG,eAAiB,CAClFoI,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJ+C,cAC/DU,EAD+D,gBAQlDA,EAAIH,OAR8C,OASjD,cADdhC,EAR+D,QAS5DoC,QACLpI,EAAS,EAAK9D,MAAMI,MAAOgH,OAAOC,OAAOtE,EAAI,CACzCE,SAAU,GACVoD,OAAQyD,EAAKzD,UAZgD,yCAAzE,uDAFsB,yCAkBvB,MAGM8F,GAAiB,WAAY,IAAD,OAC/B/L,EAAQH,KAAKD,MAAMI,MAEbA,EAAMC,IAAI,qBAAqB+H,OAAOhI,EAAMC,IAAI,wBAExD2D,IAAI,SAAAjB,GACAA,EAAGE,WAAaF,EAAG8C,QACnB0E,GAAY7H,KAAK,EAAjB6H,CAAuBxH,GACJ,WAAZA,EAAGO,MACV2D,EAAiBvE,KAAK,EAAtBuE,CAA4BlE,M,ujBCvbxC,IACMqJ,GAAUC,sBAEVC,GAAsB,CAC1BC,MAJuB,IASvBC,SAAS,GAwILC,IA7BiBrL,IAAMC,U,YA+BzB,WAAYrB,GAAQ,qEACVA,I,8MAIEI,EAAUH,KAAKD,MAAfI,M,SAEkBsM,yBACtB,8DACA,CACIC,IAAI,GAAD,CAAIP,YAAYE,M,OAHrB/E,E,OAONnH,EAAMgC,IAAI,cAAemF,GACzBnH,EAAMgC,IAAI,OAAQmF,EAAYE,KAExB+B,EAAM,IAAIQ,IAAM,WACtB5J,EAAMgC,IAAI,MAAOoH,GAEXoD,EAAQnJ,aAAaoJ,QAAQ,qBAC7BC,EAAUrJ,aAAaoJ,QAAQ,uBAEjCD,GACAxM,EAAMgC,IAAI,oBAAqBuB,KAAKoJ,MAAMH,IAG1CE,GACA1M,EAAMgC,IAAI,sBAAuBuB,KAAKoJ,MAAMD,IAIhDX,GAAezJ,KAAKzC,KAApBkM,GAGAJ,GAAsBrJ,KAAKzC,KAA3B8L,GAEAlI,OAAOzD,MAAQA,EAEfyD,OAAOC,SAAWA,EAASpB,KAAKzC,M,kJAIhC+M,cAAc/M,KAAKgN,e,kJAIX7M,EAAUH,KAAKD,MAAfI,MACFoF,EAASpF,EAAMC,IAAI,eACnB+K,EAAUhL,EAAMC,IAAI,gBACLD,EAAMC,IAAI,qBAEzB0C,EAAK,CACPmB,GAAI,MAAQwB,KAAKmB,MAAMnB,KAAKC,SAALD,KAAA,IAAiB,GAAM,KAC9CpC,KAAM,OACNuC,SAAS,EACT5C,SAAU,WACVkC,YAAaiG,EACb5F,OAAQA,EACRY,OAAO,EACPC,OAAQ,IAGZkE,GAAY7H,KAAKzC,KAAjBsK,CAAuBxH,G,6PAIf3C,EAAUH,KAAKD,MAAfI,MACFoF,EAASpF,EAAMC,IAAI,eACnB+K,EAAUhL,EAAMC,IAAI,gBACLD,EAAMC,IAAI,qBAEzB0C,EAAK,CACPmB,GAAI,MAAQwB,KAAKmB,MAAMnB,KAAKC,SAALD,KAAA,IAAiB,GAAM,KAC9CpC,KAAM,OACNuC,SAAS,EACT5C,SAAU,WACVkC,YAAaiG,EACb5F,OAAQA,EACRY,OAAO,EACPC,OAAQ,IAGZ8E,GAAgBzI,KAAKzC,KAArBkL,CAA2BpI,G,mIAGrB,IAAD,EAID9C,KAAKD,MAFLE,EAFC,EAEDA,QACAE,EAHC,EAGDA,MAGEoE,EAAiBpE,EAAMC,IAAI,uBAC3B6M,EAAsB9M,EAAMC,IAAI,4BAChC8M,EAAe/M,EAAMC,IAAI,qBACzBmF,EAASpF,EAAMC,IAAI,eACnB+K,EAAUhL,EAAMC,IAAI,gBAE1BE,QAAQC,IAAIJ,EAAMM,YAElB,IAAM0M,EAAW5H,EAAS,MAAWA,EAAS,MAAU0H,IAAyB9B,EAEjF,OAAO,kBAACzK,EAAA,EAAD,CAAMK,WAAS,GAGlB,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQmN,kBAClC,kBAAC1M,EAAA,EAAD,CAAMK,WAAS,EAACsM,UAAU,OACtB,kBAAC3M,EAAA,EAAD,CAAMG,UAAWZ,EAAQqN,KAAM3M,MAAI,EAACC,GAAI,IACpC,gEACA,0BAAMC,UAAWZ,EAAQsN,SAAzB,yBAAwD,uBAAGC,OAAO,SAASC,KAAM,4BAAzB,UAE5D,kBAAC/M,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACF,EAAA,EAAD,CAAMK,WAAS,GACX,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,UAAWZ,EAAQyN,iBACjC,kBAACC,EAAA,EAAD,CAAW9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQsF,QACpDrE,QAAQ,WACR4M,KAAK,QACLC,YAAY,WACZzL,SAAU,SAAAC,GACNpC,EAAMgC,IAAI,cAAeI,EAAEiL,OAAOtL,QAEtC8L,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBrN,UAAWZ,EAAQgO,aAAcE,SAAS,OAA1D,WAG1B,kBAACzN,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC+M,EAAA,EAAD,CAAW9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQkL,SAAUjK,QAAQ,WAAW4M,KAAK,QAAQC,YAAY,sBAAsBzL,SAAU,SAAAC,GAC1IpC,EAAMgC,IAAI,eAAgBI,EAAEiL,OAAOtL,aAMnD,kBAACxB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQmO,iBAClC,kBAACC,EAAA,EAAD,CAAkBC,QAAS,kBAACC,EAAA,EAAD,CAAQC,QAASvB,EACxCrN,MAAM,UACN0C,SAAU,kBAAMnC,EAAMgC,IAAI,4BAA6B8K,IACvD/K,MAAO,YAAeU,MAAM,mDAEpC,kBAAClC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQwO,qBAClC,kBAACC,EAAA,EAAD,CAAQvB,SAAUA,EAAUtM,UAAWZ,EAAQ0O,WAAYzN,QAAQ,WAAWtB,MAAM,UAAUgP,QAAS3B,EAAsBjN,KAAK6O,aAAapM,KAAKzC,MAAQA,KAAKyG,MAAMhE,KAAKzC,OAA5K,eAEHkN,GAAgBA,EAAa7M,OAAS,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAAI,kBAACkO,EAAA,EAAD,CAASjO,UAAWZ,EAAQ8O,WAAqB,KAC3G,kBAACrO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQ+O,YACjC9B,GAAgBA,EAAa7M,OAAS6M,EAAanJ,IAAI,SAACjB,EAAImM,GACzD,OAAO,kBAACvO,EAAA,EAAD,CAAMwO,IAAKD,EAAOlO,WAAS,EAACsM,UAAU,MAAMxM,UAAWZ,EAAQkP,aAClE,kBAACzO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACVkC,EAAGyC,OADR,QAGA,kBAAC7E,EAAA,EAAD,CAAMG,UAAWZ,EAAQmP,cAAezO,MAAI,EAACC,GAAI,GAC7C,kBAACyO,EAAD,CAAuBvM,GAAIA,IAC3B,6BACqB,eAAhBA,EAAGE,SAA4B,uBAAGnC,UAAWZ,EAAQqP,SAAU9B,OAAO,SAASC,KAAI,sDAAiD3K,EAAG8H,YAAxG,oBAA4I,KAC3J,aAAhB9H,EAAGE,UAA2BF,EAAGqD,QAAUrD,EAAGE,SAAW,6BACrDF,EAAGsD,OAAS,uBAAGvF,UAAWZ,EAAQqP,SAAU9B,OAAO,SAASC,KAAM,iCAAiC3K,EAAGsD,QAA1F,oBAAyH,KACtI,uBAAGqH,KAAK,eAAemB,QAAS,WAC5B1K,EAAS/D,EAAO2C,KACfA,EAAGE,SAAqB,SAAV,UAAgC,UAIlE,QAKhB,kBAACtC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQsP,MACnC,2BACI,uBAAG1O,UAAWZ,EAAQuP,SAAtB,gBACA,6BACA,6BAHJ,sBAIuB,uBAAGhC,OAAO,SAASC,KAAK,0BAAxB,SAJvB,KAImF,uBAAGD,OAAO,SAASC,KAAK,uBAAxB,WAJnF,yBAIkK,uBAAGD,OAAO,SAASC,KAAK,iCAAxB,OAJlK,6HAI2V,2CAJ3V,+CAI0Z,2CAJ1Z,oEAMA,2BACI,4BACI,4BAAI,uBAAGD,OAAO,SAASC,KAAM,mDAAzB,iBAAJ,4BACA,4BAAI,uBAAGD,OAAO,SAASC,KAAM,mDAAzB,iBAAJ,iDAGR,oFAC0D,uBAAGD,OAAO,SAASC,KAAM,sCAAsClJ,GAAiBA,IAE1I,0HACgG,uBAAGiJ,OAAO,SAASC,KAAK,oCAAxB,oBADhG,2BAEI,4BACI,4BAAI,uBAAGD,OAAO,SAASC,KAAM,iDAAzB,+BACJ,4BAAI,uBAAGD,OAAO,SAASC,KAAM,oDAAzB,mCACJ,4BAAI,uBAAGD,OAAO,SAASC,KAAM,0CAAzB,kBAGZ,kC,GAhMetM,IAAMC,YAyMtBC,eA5UA,iBAAO,CACpBrC,KAAM,CACJyQ,SAAU,GAEZC,MAAO,GAEP5O,aAAc,CACZQ,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,GAC7BE,UAAW,IAEb0L,iBAAkB,CAGd1N,OAAQ,iBACRiQ,QAASpO,EAAMC,QAAQ,GAEvBoO,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,GAC5B,UAAW,IAGfqM,MAAO,CACHgC,aAActO,EAAMC,QAAQ,GAC5BK,MAAO,OACP,UAAW,CACPiO,SAAU,IAEd,MAAO,CACHA,SAAU,IAEd,qCAAsC,CAClC3Q,YAAa,kCAGrBuO,gBAAiB,CACf7K,aAActB,EAAMC,QAAQ,IAE9B+D,OAAQ,GAERwK,MAAO,CACHD,SAAU,GACVjQ,WAAY,IACZ+P,UAAWrO,EAAMC,QAAQ,IAE7BwN,WAAY,GAGZG,YAAa,CACTW,SAAU,GACVD,aAActO,EAAMC,QAAQ,IAEhC4N,cAAe,CACXY,QAAS,OACTC,eAAgB,iBAEpBV,KAAM,CACFO,SAAU,GACVD,aAActO,EAAMC,QAAQ,GAC5B,MAAO,CACHqO,aAAc,IAGtBd,QAAS,CACLa,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,GAC5B7B,gBAAiB,WAErB2N,KAAM,CACFuC,aAActO,EAAMC,QAAQ,GAC5BsO,SAAU,GACVE,QAAS,OACThP,WAAY,WACZiP,eAAgB,iBAEpB1C,QAAS,CACLuC,SAAU,IAEdR,SAAU,CACNQ,SAAU,GACVhO,YAAaP,EAAMC,QAAQ,IAE/B0O,WAAY,CACRN,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,IAEhCiN,oBAAqB,CACjB0B,UAAW,SACX7O,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,IAEjC4M,gBAAiB,CACb+B,UAAW,SACX1O,cAAeF,EAAMC,QAAQ,GAC7B,+BAAgC,CAC5BsO,SAAU,KAGlBnB,WAAY,KA0OCtN,CAAmBW,YAAUwK,K,gCCxV7BnL,eAhCA,iBAAO,IAgCPA,CA7BiB,SAAStB,GAAQ,IAEzC+C,EACA/C,EADA+C,GAFwC,EAQxCwD,EAAwBxD,GAFxByD,EANwC,EAMxCA,0BAIE6J,GAVsC,EAOxC5J,wBAG2C,MAA9BD,GAEjB,OAAO,kBAAC,IAAMxD,SAAP,KACkB,aAAhBD,EAAGE,SAA0B,6EAEpB,KACO,eAAhBF,EAAGE,SAA4B,oEACIF,EAAGI,iBADP,IAC2B,IAD3B,eAEtB,KACO,eAAhBJ,EAAGE,SAA4B,qDAEtB,KACO,eAAhBF,EAAGE,SAA4B,wDAEtB,KACRF,EAAGE,SAAmF,KAAxE,8BAAOoN,EAAQ,8CCuD5B/O,eA3EA,iBAAO,CAClBgP,UAAW,CACPP,SAAU,GACVD,aAActO,EAAMC,QAAQ,GAC5BwO,QAAS,OACTnO,MAAO,QAEXuN,cAAe,CACXY,QAAS,OACTC,eAAgB,iBAEpBK,MAAO,CACH,MAAO,CACHC,WAAYhP,EAAMC,QAAQ,KAGlCgP,SAAU,CACNrC,SAAU,WACVrM,YAAaP,EAAMC,QAAQ,GAC3BK,MAAO,GACPD,OAAQ,IAGZ6O,YAAa,CACT7Q,MAAO,QAEX8Q,eAAgB,CACZ9Q,MAAO,YACP+Q,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVC,eAAgB,CACZjR,MAAO,UACP+Q,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVE,kBAAmB,CACf3C,SAAU,WAEV0B,aAActO,EAAMC,QAAQ,IAEhC+N,KAAM,CACFS,QAAS,OACTC,eAAgB,mBA8BT5O,CA1BgB,SAAStB,GAAQ,IAExC+C,EAGA/C,EAHA+C,GACAmM,EAEAlP,EAFAkP,MACAhP,EACAF,EADAE,QAGJ,OAAO,kBAACS,EAAA,EAAD,CAAMG,UAAWZ,EAAQoQ,UAAWnB,IAAKD,GAC5C,kBAACvO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMK,WAAS,EAACC,WAAW,UACvB,8BAAO8B,EAAGyC,OAAV,UAGR,kBAAC7E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,UAAWZ,EAAQsP,MACjC,yBAAK1O,UAAWZ,EAAQqQ,OACpB,uBAAG9C,OAAO,SAASC,KAAM,iCAAiC3K,EAAGsD,OAAOvF,UAAWZ,EAAQqP,UAAvF,qBAIJ,6BACI,8BAAQ,IAAIzI,KAAK/D,EAAGsF,WAAW2I,uBCiEzCC,G,YACF,WAAYjR,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQ,CACTyQ,QAAQ,EACRC,eAAgB,GAChBnK,cAAe,GACfP,wBAAyB,GACzB2K,gBAAiB,GACjBC,oBAAqB,GACrBC,gBAAiB,IAErB,EAAKC,eAAiBnQ,IAAMoQ,YAC5B,EAAKC,SAAW,KAChB,EAAKC,iBAAmB,KACxB,EAAKC,SAAU,EAdA,E,sMAkBPC,EAAe3R,KAAKD,MAApB4R,W,SACF3K,EAAiBvE,KAAKzC,KAAtBgH,CAA4B2K,G,OAClC3R,KAAK4R,SAAS,CACVX,QAAQ,IAGRjR,KAAKsR,eAAeO,UACpB7R,KAAKsR,eAAeO,QAAQ3P,MAAQyP,EAAW1O,eAGnDjD,KAAK8R,iB,iJAID9R,KAAKwR,UACLzE,cAAc/M,KAAKwR,Y,qFAWT,IAAD,OAEPnL,EADiBrG,KAAKD,MAApB4R,WACoBtL,SAC5B,GAAIA,EAAU,CACV,IAAMI,EAAQC,OAAOL,EAASJ,WACxBa,EAAMJ,OAAOL,EAASJ,WAAcS,OAA2B,GAApBL,EAASH,UACpDgL,GAAkB7K,EAASd,OAAT,SAAmB,GAAM,IAAII,QAAQ,GACvDoB,GAAiBV,EAASU,cAAT,SAA0B,GAAM,IAAIpB,QAAQ,GAC7Da,EAAwE,KAA7CO,EAAgBmK,GAAgBvL,QAAQ,GAGzE3F,KAAKwR,SAAWzF,YAAY,WACxB,IAAMpF,EAAMlB,KAAKmB,MAAMC,KAAKF,MAAQ,KAC9BoL,EAASjL,EAAML,EACjB2K,EAAsB,EACtBzK,EAAMG,GACNsK,EAAsB,IACtBrE,cAAc,EAAKyE,WACZ/K,EAAQ,IACf2K,EAAsB1K,SAAUC,EAAMF,GAASsL,EAAU,KAAKpM,QAAQ,KAE1E,IAAMwL,GAAoBC,EAAsB,IAAOF,GAAgBvL,QAAQ,GACzE0L,EAAkBvK,EAAMH,EAKzB,EAAK+K,QAWN,EAAKE,SAAS,CACVR,yBAXJ,EAAKQ,SAAS,CACVV,iBACAnK,gBACAP,0BACA2K,kBACAC,sBACAC,oBAEJ,EAAKK,SAAU,IAMpB,O,6BASH,IACIvR,EAAUH,KAAKD,MAAfI,MACRA,EAAMgC,IAAI,oBAAqB,SAC/BhC,EAAMgC,IAAI,oBAAqB,Q,+BAIzB,IAAD,SAKDnC,KAAKD,MAHLE,EAFC,EAEDA,QACA0R,EAHC,EAGDA,WACAxR,EAJC,EAIDA,MAJC,EAeDH,KAAKQ,MAPLyQ,EARC,EAQDA,OACAC,EATC,EASDA,eACAnK,EAVC,EAUDA,cACAP,EAXC,EAWDA,wBACA2K,EAZC,EAYDA,gBACAC,EAbC,EAaDA,oBACAC,EAdC,EAcDA,gBAIA9K,EACAD,EAAwBqL,GADxBpL,0BAGEyL,EAAkBL,EAAWtL,SAAWK,OAAQiL,EAAWtL,SAASd,SAAWgB,EAA4BC,GAAyB,KAArF,SAA8F,GAAM,IAAM,EAEvJ0B,EAAsByJ,EAAtBzJ,kBACF+J,EAAkB9R,EAAMC,IAAI,0BAIlC,OAAO,kBAAC,IAAM2C,SAAP,KACH,yBAAKlC,UAAWZ,EAAQiS,UACpB,uBAAGzE,KAAK,eAAemB,QAAS5O,KAAKmS,KAAK1P,KAAKzC,OAAQ,SAEzDiR,EAkBF,kBAAC,IAAMlO,SAAP,KACI,kBAACrC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAW8Q,EAAWtL,SAAWpG,EAAQmS,OAASnS,EAAQoS,eACzE,kBAAC3R,EAAA,EAAD,CAAMK,WAAS,GACX,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,yBAAKC,UAAWZ,EAAQqS,SAClB,kBAACC,GAAA,EAAD,CACErR,QAAQ,cACRgB,MAAO,IACPrB,UAAWZ,EAAQuS,WACnB1E,KAAM,GACN2E,UAAW,IAEb,kBAACF,GAAA,EAAD,CACErR,QAAQ,gBACRwR,eAAa,EACb7R,UAAWZ,EAAQ0S,cACnB7E,KAAM,GACN2E,UAAW,MAIvB,kBAAC/R,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQ2S,gBAClC,kBAAC,GAAD,CAAyB9P,GAAI6O,KACH,aAAxBA,EAAW3O,UAA2B2O,EAAWxL,QAC/C,2BAAG,uBAAGsH,KAAK,eACP5M,UAAWZ,EAAQ4S,WACnBjE,QAAS,WACL1K,EAAS/D,EAAOwR,GAChBxR,EAAMgC,IAAI,oBAAqB,MAC/BhC,EAAMgC,IAAI,oBAAqB,WALpC,WAUkB,eAAxBwP,EAAW3O,UAA6B,2BAAG,uBAAGwK,OAAO,SAASC,KAAI,sDAAiDkE,EAAW/G,WAC3H/J,UAAWZ,EAAQ4S,YADqB,8BAKhD,kBAACnS,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIgO,QAAS,cACxB,kBAAClO,EAAA,EAAD,CAAMK,WAAS,EAAC+R,QAAQ,UACK,aAAxBnB,EAAW3O,UAA2B,yBAAKnC,UAAWZ,EAAQ8S,gBAC3D,2BAAG,6CAAepB,EAAWpM,OAA1B,oCACH,kBAACoI,EAAA,EAAD,CAAW9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQkL,SACpDvI,MAAO,GACP1B,QAAQ,WACR4M,KAAK,QACLC,YAAY,kBACZiF,SAAUhT,KAAKsR,oBAK/B,kBAAC5Q,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACF,EAAA,EAAD,CAAMK,WAAS,EAAC+R,QAAQ,UACK,aAAxBnB,EAAW3O,UAA2B2O,EAAWxL,QAAUwL,EAAW3O,SAAW,yBAAKnC,UAAWZ,EAAQ4S,YACrGlB,EAAWvL,OAAS,uBAAGvF,UAAWZ,EAAQqP,SAAU9B,OAAO,SAASC,KAAM,iCAAiCkE,EAAWvL,QAAlG,oBAAiI,MACjJ,SAMzB,yBAAKvF,UAAW8Q,EAAWtL,UAAY4K,EAAShR,EAAQ6Q,kBAAoB7Q,EAAQmS,QAChF,kBAAC1R,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,yBAAKC,UAAWZ,EAAQuQ,UAClB,kBAAC+B,GAAA,EAAD,CACErR,QAAQ,SACRgB,MAAO,IACPrB,UAAWZ,EAAQwQ,YACnB3C,KAAM,IACN2E,UAAW,IAEb,kBAACF,GAAA,EAAD,CACErR,QAAQ,SACRL,UAAWZ,EAAQyQ,eACnB5C,KAAM,IACN5L,MAAOwE,OAAO0K,GACdqB,UAAW,IAEb,kBAACF,GAAA,EAAD,CACErR,QAAQ,SACRL,UAAWZ,EAAQ4Q,eACnB/C,KAAM,IACN5L,MAAOwE,OAAOF,GACdiM,UAAW,KAGnB,yBAAK5R,UAAWZ,EAAQgT,cACpB,6BACI,uBAAGpS,UAAWZ,EAAQiT,eAClB,2BAAIhC,EAAJ,UAGR,2BACI,2BAAInK,EAAJ,MAAqB,kBAAC,KAAD,CAASN,MAAO0K,EAAiBrK,IAAK6K,EAAWpM,OAAQW,SAAUmL,EAAiB8B,SAAU,GAAIhC,GAAvH,SAEJ,2BACI,6CAKhB,kBAACzQ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAW8Q,EAAWtL,UAAY4K,EAAQhR,EAAQmT,YAAcnT,EAAQmS,QACtFJ,EJ9YW,KI8Y0B,kBAACtD,EAAA,EAAD,CAAQvB,SAAU8E,EACpDpR,UAAW,GACXK,QAAQ,WACRtB,MAAM,UACNgP,QAAS,WACLvH,EAAM5E,KAAK,EAAX4E,CAAiBsK,KALa,SAO3BK,EAAgBrM,QAAQ,GAPG,QAQ1B,8BAAOY,EAA4B,IAA5B,kCJtZP,KIsZO,QAAsF,gCAE5G2B,EAAkB7H,OAAS,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACvC,kBAACkO,EAAA,EAAD,CAASjO,UAAWZ,EAAQ8O,WACtB,KACV,yBAAKlO,UAAW8Q,EAAWtL,UAAY4K,EAAShR,EAAQiI,kBAAoBjI,EAAQmS,QAC/ElK,GAAqBA,EAAkB7H,OAAS6H,EAAkBnE,IAAI,SAACjB,EAAImM,GACxE,OAAO,kBAAC,GAAD,CACHnM,GAAIA,EACJmM,MAAOA,EACPoE,OAAQ,SAAArP,KAERsP,SAAU,SAAAtP,SAEb,OAhJF,kBAACtD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQsT,kBAC7C,yBAAK1S,UAAWZ,EAAQqS,SAClB,kBAACC,GAAA,EAAD,CACErR,QAAQ,cACRgB,MAAO,IACPrB,UAAWZ,EAAQuS,WACnB1E,KAAM,GACN2E,UAAW,IAEb,kBAACF,GAAA,EAAD,CACErR,QAAQ,gBACRwR,eAAa,EACb7R,UAAWZ,EAAQ0S,cACnB7E,KAAM,GACN2E,UAAW,W,GArJDtR,IAAMC,WA8RzBY,eAAUX,YA1ZV,iBAAO,CAClBmP,SAAU,CACNrC,SAAU,WACVqF,OAAQ,WACR3R,MAAO,KAGX4O,YAAa,CACT7Q,MAAO,QAEX8Q,eAAgB,CACZ9Q,MAAO,YACP+Q,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVC,eAAgB,CACZjR,MAAO,UACP+Q,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVE,kBAAmB,CACf3C,SAAU,WAEV0B,aAActO,EAAMC,QAAQ,IAEhCyR,aAAc,CACV9E,SAAU,WACVsF,IAAK,EACL7C,KAAM,EACN/O,MAAO,OACPD,OAAQ,OACRoO,QAAS,OACThP,WAAY,SACZiP,eAAgB,SAChByD,cAAe,SACf,MAAO,CACHF,OAAQ,QAIhBN,cAAe,CACXpD,SAAU,GACVrO,cAAeF,EAAMC,QAAQ,IAEjC8Q,QAAS,CACLnE,SAAU,WACVqF,OAAQ,WACR3R,MAAO,GACPgO,aAActO,EAAMC,QAAQ,IAEhCgR,WAAY,CACR5S,MAAO,QAEX+S,cAAe,CACX/S,MAAO2B,EAAMjD,QAAQC,QAAQE,KAC7BkS,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVgC,eAAgB,CACZzC,UAAW,SACX1O,cAAeF,EAAMC,QAAQ,GAC7BsO,SAAU,IAEdsD,YAAa,CAETjD,UAAW,SACX1O,cAAeF,EAAMC,QAAQ,GAC7B,SAAU,CACNsO,SAAU,KAGlBjC,MAAO,CACHgC,aAActO,EAAMC,QAAQ,GAC5BK,MAAO,OACP,UAAW,CACPiO,SAAU,IAEd,MAAO,CACHA,SAAU,IAEd,qCAAsC,CAClC3Q,YAAa,kCAGrBiT,OAAQ,CACJpC,QAAS,QAEbqC,cAAe,CAEX,MAAO,CACHvC,SAAU,KAGlBoC,SAAU,CACNpC,SAAU,GACVD,aAActO,EAAMC,QAAQ,IAEhC+R,iBAAkB,GAGlBR,eAAgB,CACZjD,SAAU,GACVK,UAAW,SACX,SAAU,CACN1O,cAAeF,EAAMC,QAAQ,KAGrC2J,QAAS,CACLwI,SAAU,IACV9R,MAAO,QAEXkN,QAAS,CACLa,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,GAC5B7B,gBAAiB,WAErBiU,OAAQ,KAmSavS,CAAmB2P,KCpT7B3P,eAhHA,iBAAO,CAClB8N,YAAa,CACTW,SAAU,GACVD,aAActO,EAAMC,QAAQ,IAEhC4N,cAAe,CACXY,QAAS,OACTC,eAAgB,iBAEpBK,MAAO,CACH,MAAO,CACHC,WAAYhP,EAAMC,QAAQ,KAGlCgP,SAAU,CACNrC,SAAU,WACVrM,YAAaP,EAAMC,QAAQ,GAC3BK,MAAO,GACPD,OAAQ,IAGZ6O,YAAa,CACT7Q,MAAO,QAEX8Q,eAAgB,CACZ9Q,MAAO,YACP+Q,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVC,eAAgB,CACZjR,MAAO,UACP+Q,kBAAmB,QACnBxC,SAAU,WACVyC,KAAM,GAEVE,kBAAmB,CACf3C,SAAU,WAEV0B,aAActO,EAAMC,QAAQ,MAyErBH,CArEW,SAAStB,GAAO,IAG9B+C,EAKA/C,EALA+C,GACAmM,EAIAlP,EAJAkP,MACAhP,EAGAF,EAHAE,QACAoT,EAEAtT,EAFAsT,OAN8B,GAQ9BtT,EADAuT,SAKAxQ,EADAuD,SAMAC,EAAwBxD,IAFxByD,EAf8B,EAe9BA,0BACAC,EAhB8B,EAgB9BA,wBAGJ,OAAO,kBAAC9F,EAAA,EAAD,CAAMwO,IAAKD,EACRlO,WAAS,EACTsM,UAAU,MACVxM,UAAWZ,EAAQkP,aACzB,kBAACzO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,EAAA,EAAD,CAAMK,WAAS,EAACC,WAAW,UACvB,yBAAKH,UAAWZ,EAAQuQ,UAClB,kBAAC+B,GAAA,EAAD,CACErR,QAAQ,SACRgB,MAAO,IACPrB,UAAWZ,EAAQwQ,YACnB3C,KAAM,GACN2E,UAAW,IAEb,kBAACF,GAAA,EAAD,CACErR,QAAQ,SACRL,UAAWZ,EAAQyQ,eACnB5C,KAAM,GACN5L,MAAOqE,EACPkM,UAAW,IAEb,kBAACF,GAAA,EAAD,CACErR,QAAQ,SACRL,UAAWZ,EAAQ4Q,eACnB/C,KAAM,GACN5L,MAAOsE,EACPiM,UAAW,KAGnB,8BAAO3P,EAAGyC,OAAV,UAGR,kBAAC7E,EAAA,EAAD,CAAMG,UAAWZ,EAAQmP,cAAezO,MAAI,EAACC,GAAI,GAC7C,kBAAC,GAAD,CAAyBkC,GAAIA,IAC7B,yBAAKjC,UAAWZ,EAAQqQ,OACpB,uBAAG7C,KAAK,eAAe5M,UAAWZ,EAAQqP,SAAUV,QAAS,kBAAOyE,EAAOvQ,KAA3E,aCoFd+Q,IA3JUzH,sBA8HOjL,IAAMC,U,YA+BzB,WAAYrB,GAAQ,qEACVA,I,iMAIEI,EAAUH,KAAKD,MAAfI,OAEFmD,EAAME,aAAaoJ,QAAQ,yBAG7BzM,EAAMgC,IAAI,sBAAuBuB,KAAKoJ,MAAMxJ,I,iJAWhDyJ,cAAc/M,KAAKgN,e,sJAIX7M,EAAUH,KAAKD,MAAfI,MACFoF,EAASpF,EAAMC,IAAI,iBACnB+K,EAAUhL,EAAMC,IAAI,kBACpB6F,EAAYR,KAAKqC,MAAMjB,KAAKF,MAAQ,KACpCT,EAAW/F,EAAMC,IAAI,mBAErB0C,EAAK,CACPmB,GAAI,MAAQwB,KAAKC,SAASC,QAAQ,GAClCtC,KAAM,SACNuC,SAAS,EACT5C,SAAU,WACVE,iBAAkB,EAClB0H,UAAW,GACX1F,YAAaiG,EACb5F,OAAQA,EACRU,YACAC,WACAC,OAAO,EACPC,OAAQ,GACR8B,kBAAmB,IAGvB/H,EAAMgC,IAAI,oBAAqBW,GAC/B3C,EAAMgC,IAAI,oBAAqB,eAE/BmI,GAAY7H,KAAKzC,KAAjBsK,CAAuBxH,G,iIAGpBA,GAAK,IACA3C,EAAWH,KAAKD,MAAhBI,MAERA,EAAMgC,IAAI,oBAAqBW,GAC/B3C,EAAMgC,IAAI,oBAAqB,iB,+BAGzB,IAAD,SAIDnC,KAAKD,MAFLE,EAFC,EAEDA,QACAE,EAHC,EAGDA,MAKEoF,EAASpF,EAAMC,IAAI,iBACnB+K,EAAUhL,EAAMC,IAAI,kBACpB8F,EAAW/F,EAAMC,IAAI,mBACrB8M,EAAe/M,EAAMC,IAAI,uBACzB0T,EAAa3T,EAAMC,IAAI,qBACvBuR,EAAaxR,EAAMC,IAAI,qBACvB2T,EAAgB5T,EAAMC,IAAI,wBAC1BmE,EAAiBpE,EAAMC,IAAI,yBAE3B+M,EAAW5H,EAAS,QAAY4F,IAAYjF,EAGlD,OAAO,kBAACxF,EAAA,EAAD,CAAMK,WAAS,GAClB,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQmN,kBAClC,kBAAC1M,EAAA,EAAD,CAAMK,WAAS,EAACsM,UAAU,OACN,UAAfyG,GAA0B,kBAAC,IAAM/Q,SAAP,KACvB,kBAACrC,EAAA,EAAD,CAAMG,UAAWZ,EAAQqN,KAAM3M,MAAI,EAACC,GAAI,IACpC,iEAEJ,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACF,EAAA,EAAD,CAAMK,WAAS,GACX,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQyN,iBAClC,kBAACC,EAAA,EAAD,CAAW9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQsF,QACpDrE,QAAQ,WACR4M,KAAK,QACLC,YAAY,WACZzL,SAAU,SAAAC,GACNpC,EAAMgC,IAAI,gBAAiBI,EAAEiL,OAAOtL,QAExC8L,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBrN,UAAWZ,EAAQgO,aAAcE,SAAS,OAA1D,WAG1B,kBAACzN,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC+M,EAAA,EAAD,CAAW9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQkL,SAAUjK,QAAQ,WAAW4M,KAAK,QAAQC,YAAY,wBAAwBzL,SAAU,SAAAC,GAC5IpC,EAAMgC,IAAI,iBAAkBI,EAAEiL,OAAOtL,WAG7C,kBAACxB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC+M,EAAA,EAAD,CAAW9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQkL,SAAUjK,QAAQ,WAAW4M,KAAK,QAAQC,YAAY,sBAAsBzL,SAAU,SAAAC,GAC1IpC,EAAMgC,IAAI,kBAAmBI,EAAEiL,OAAOtL,aAMtD,kBAACxB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQwO,qBAClC,kBAACC,EAAA,EAAD,CAAQvB,SAAUA,EAAUtM,UAAWZ,EAAQ0O,WAAYzN,QAAQ,WAAWtB,MAAM,UAAUgP,QAAS5O,KAAKyG,MAAMhE,KAAKzC,OAAvH,iBAGJ,kBAACU,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACkO,EAAA,EAAD,CAASjO,UAAWZ,EAAQ8O,WAEhC,kBAACrO,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQwO,qBAClC,kBAACd,EAAA,EAAD,CACI9M,UAAW+M,IAAW3N,EAAQ4N,MAAO5N,EAAQkL,SAC7CjK,QAAQ,WACR4M,KAAK,QACLC,YAAY,gCACZzL,SAAU,SAAAC,GACNpC,EAAMgC,IAAI,uBAAwBI,EAAEiL,OAAOtL,QAE/C8L,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CACVrN,UAAWZ,EAAQ+T,WACnB7F,SAAS,OACL,uBAAGV,KAAK,eAAemB,QAAS,WAC5B3J,EAAexC,KAAK,EAApBwC,CAA0B8O,KAD9B,oBAOpB,kBAACrT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQ+O,YACjC9B,GAAgBA,EAAa7M,OAAS6M,EAAanJ,IAAI,SAACjB,EAAImM,GACzD,OAAO,kBAAC,GAAD,CACHnM,GAAIA,EACJmM,MAAOA,EACPoE,OAAQ,SAAArP,GACJ,EAAKiQ,OAAOxR,KAAK,EAAjB,CAAuBuB,IAE3BsP,SAAU,SAAAtP,GACNE,EAAS/D,EAAO6D,QAEvB,OAGG,gBAAf8P,GAAgC,kBAACpT,EAAA,EAAD,CAAMK,WAAS,EAACsM,UAAU,OACvD,kBAAC3M,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAY+Q,WAAYA,QAMvC,kBAACjR,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAWZ,EAAQsP,MACnC,2BACI,uBAAG1O,UAAWZ,EAAQuP,SAAtB,gBACA,6BACA,6BAHJ,sBAIuB,uBAAGhC,OAAO,SAASC,KAAK,0BAAxB,SAJvB,wBAIsG,uBAAGD,OAAO,SAASC,KAAK,iCAAxB,OAJtG,6NAMA,6FACmE,uBAAGD,OAAO,SAASC,KAAM,sCAAsClJ,GAAiBA,IAEnJ,0HACgG,uBAAGiJ,OAAO,SAASC,KAAK,oCAAxB,oBADhG,4BAGA,4BACI,4BAAI,uBAAGD,OAAO,SAASC,KAAM,mDAAzB,6BAAJ,iCACA,4BAAI,uBAAGD,OAAO,SAASC,KAAM,iDAAzB,+BACJ,4BAAI,uBAAGD,OAAO,SAASC,KAAM,oDAAzB,mCACJ,4BAAI,uBAAGD,OAAO,SAASC,KAAM,0CAAzB,uB,GAtLMtM,IAAMC,YA8LrBC,eA5UA,iBAAO,CACpBrC,KAAM,CACJyQ,SAAU,GAEZC,MAAO,GAEP5O,aAAc,CACZQ,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,GAC7BE,UAAW,IAEb0L,iBAAkB,CAGd1N,OAAQ,iBACRiQ,QAASpO,EAAMC,QAAQ,GAEvBoO,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,GAC5B,UAAW,IAGfqM,MAAO,CACHgC,aAActO,EAAMC,QAAQ,GAC5BK,MAAO,OACP,UAAW,CACPiO,SAAU,IAEd,MAAO,CACHA,SAAU,IAEd,qCAAsC,CAClC3Q,YAAa,kCAGrBuO,gBAAiB,GAGjBnI,OAAQ,GAERwK,MAAO,CACHD,SAAU,GACVjQ,WAAY,IACZ+P,UAAWrO,EAAMC,QAAQ,IAE7BwN,WAAY,GAGZG,YAAa,CACTW,SAAU,GACVD,aAActO,EAAMC,QAAQ,IAEhC4N,cAAe,CACXY,QAAS,OACTC,eAAgB,iBAEpBV,KAAM,CACFO,SAAU,GACVD,aAActO,EAAMC,QAAQ,GAC5B,MAAO,CACHqO,aAAc,IAGtBd,QAAS,CACLa,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,GAC5B7B,gBAAiB,WAErB2N,KAAM,CACFuC,aAActO,EAAMC,QAAQ,GAC5BsO,SAAU,GACVE,QAAS,OACThP,WAAY,WACZiP,eAAgB,iBAEpB1C,QAAS,CACLuC,SAAU,IAEdR,SAAU,CACNQ,SAAU,GACVhO,YAAaP,EAAMC,QAAQ,IAE/B0O,WAAY,CACRN,UAAWrO,EAAMC,QAAQ,GACzBqO,aAActO,EAAMC,QAAQ,IAEhCiN,oBAAqB,CACjB0B,UAAW,SACX7O,WAAYC,EAAMC,QAAQ,GAC1BC,cAAeF,EAAMC,QAAQ,IAEjC4M,gBAAiB,CACb+B,UAAW,SACX1O,cAAeF,EAAMC,QAAQ,GAC7B,+BAAgC,CAC5BsO,SAAU,KAGlBnB,WAAY,GAEZuF,MAAO,CACHrE,aAActO,EAAMC,QAAQ,GAC5BkS,cAAe,MACf,SAAU,CACR5D,SAAU,KAGhBkE,WAAY,CACRlE,SAAU,GACV6D,SAAU,MA+NDtS,CAAmBW,YAAU6R,K,sBCxVtCM,GAAanS,YAAU,SAASjC,GAAQ,IAGtCqU,EAFcrU,EAAVI,MAGEM,WADN2T,kBAGJ,OAAO,kBAACC,GAAA,EAAD,CAAWC,SAAS,MACvB,kBAAC5T,EAAA,EAAD,CAAMK,WAAS,GAIX,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAAC4T,GAAI,GACX,kBAAC,EAAD,OAEJ,kBAAC7T,EAAA,EAAD,CAAMC,MAAI,EAAC4T,GAAI,GACY,aAAtBH,GAAoC,kBAAC,GAAD,MACd,WAAtBA,GAAkC,kBAAC,GAAD,WAM7CI,G,YACF,WAAYzU,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQ,GAFE,E,gTASKR,KAAKD,MAAjBE,QACR,OACI,kBAACwU,GAAA,EAAD,CAAelT,MAAOA,GAClB,kBAAC4S,GAAD,W,GAbEhT,IAAMC,WAmBTsT,eAAYrT,YAhEZ,iBAAO,IAgEKA,CAAmBmT,IA7DzB,CACjB,kBAAqB,WAErB,oBAAqB,GACrB,sBAAuB,6CACvB,4BAA4B,EAC5B,cAAe,GACf,eAAgB,GAEhB,wBAAyB,6CACzB,sBAAuB,GACvB,gBAAiB,GACjB,qBAAsB,GACtB,kBAAmB,GACnB,oBAAqB,QACrB,oBAAqB,KACrB,uBAAwB,GACxB,0BAA0B,IC1BVG,QACW,cAA7B/Q,OAAOgR,SAASC,UAEe,UAA7BjR,OAAOgR,SAASC,UAEhBjR,OAAOgR,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.6fab68e7.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#000',\r\n            main: '#000',\r\n            dark: '#000',\r\n            contrastText: '#fff',\r\n        },\r\n        // primary: blueGrey,\r\n        secondary: grey,\r\n    },\r\n    overrides: {\r\n        // Style sheet name ⚛️\r\n        // MuiButton: {\r\n        //   // Name of the rule\r\n        //   text: {\r\n        //     // Some CSS\r\n        //     color: 'white',\r\n        //   },\r\n        // }\r\n        PrivateNotchedOutline: {\r\n            root: {\r\n            }\r\n        },\r\n        // '.MuiOutlinedInput-root:hover':{\r\n        //     borderColor: '#EBEBEB !important'\r\n        // },\r\n        MuiOutlinedInput: {\r\n            // root:{\r\n            //     '&:hover': {\r\n            //         // notchedOutline: {\r\n            //             borderColor: '#EBEBEB'\r\n            //         // }\r\n            //     }\r\n            // },\r\n            notchedOutline: {\r\n                borderColor: '#EBEBEB !important',\r\n                borderWidth: '1px !important'\r\n            }\r\n        },\r\n        MuiTextField: {\r\n\r\n        },\r\n        MuiToggleButtonGroup: {\r\n          grouped: {\r\n            '&:not(:first-child)': {\r\n              borderLeft: '1px solid #EBEBEB'\r\n            }\r\n          }\r\n        },\r\n        // .MuiToggleButtonGroup-grouped:not(:first-child)\r\n        MuiToggleButton: {\r\n            root: {\r\n                border: '1px solid #EBEBEB',\r\n                backgroundColor: '#fff',\r\n                '&.Mui-selected': {\r\n                    // back\r\n                    backgroundColor: '#fff !important',\r\n                    color: '#000',\r\n                    fontWeight: '500',\r\n                    '&:hover': {\r\n                        backgroundColor: '#fff !important',\r\n                    }\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: '#fff !important',\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","import React from 'react';\r\nimport Web3 from \"web3\";\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst styles = () => ({\r\n    navContainer: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n        minHeight: 52\r\n    },\r\n    logo: {\r\n        height: 22,\r\n        width: 25,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    accountButton: {\r\n      '& svg': {\r\n        marginRight: theme.spacing(1)\r\n      }\r\n    }\r\n})\r\n\r\nclass NavContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const walletAddress = store.get('walletAddress')\r\n        const isSignedIn = walletAddress && walletAddress.length\r\n\r\n        console.log(this.props, this.state, this.props.store.getState())\r\n\r\n        return <Grid item xs={12}>\r\n            {<Grid className={classes.navContainer} container alignItems='center'>\r\n              <Grid item xs={6}>\r\n                  <Grid container alignItems='center'>\r\n                      <Typography variant='h6'>RenVM Interoperability</Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(NavContainer))\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\n\r\nconst styles = () => ({\r\n    tabs: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingRight: theme.spacing(2),\r\n        '& .MuiTab-wrapper': {\r\n            alignItems: 'flex-end',\r\n            // paddingRight: theme.spacing(1)\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nclass ActionTabsContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = props.store.getState()\r\n    }\r\n\r\n    changeTabs(value) {\r\n        const { store } = this.props\r\n        store.set('selectedActionTab', value)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        // console.log(this.props, this.state)\r\n\r\n        return <Tabs\r\n          orientation=\"vertical\"\r\n          value={store.get('selectedActionTab')}\r\n          onChange={(e, value) => {\r\n            this.changeTabs.bind(this)(value)\r\n          }}\r\n          className={classes.tabs}\r\n        >\r\n          <Tab value={'exchange'} label=\"Exchange\" />\r\n          <Tab value={'stream'} label=\"Streaming Payments\" />\r\n        </Tabs>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(ActionTabsContainer))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\n// import classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = () => ({\r\n})\r\n\r\nconst StreamTransactionStatus = function(props) {\r\n    const {\r\n        tx,\r\n    } = props\r\n\r\n    return <React.Fragment>\r\n            {tx.awaiting === 'btc-init' ? <span>\r\n                {`Waiting for BTC transaction to be initiated `}<br />{`${tx.renBtcAddress}`}\r\n            </span> : null}\r\n            {tx.awaiting === 'btc-settle' ? <span>\r\n                {`BTC transaction confirming (${tx.btcConfirmations}/${'2'} complete)`}\r\n            </span> : null}\r\n            {tx.awaiting === 'ren-settle' ? <span>\r\n                {`Submitting to RenVM`}\r\n            </span> : null}\r\n            {tx.awaiting === 'eth-settle' ? <span>\r\n                {`Submitting to Ethereum`}\r\n            </span> : null}\r\n            {!tx.awaiting ? <span>{`Swap complete`}</span> : null}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransactionStatus);\r\n","import RenJS from \"@renproject/ren\";\r\nimport adapterABI from './exchangeAdapterSimpleABI.json'\r\nimport streamAdapterABI from './streamAdapterSimpleABI.json'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const API_URL = ''\r\n// export const API_URL = 'http://localhost:3000'\r\nexport const MIN_CLAIM_AMOUNT = 0.0001\r\nlet swapMonitor = null\r\n\r\n\r\nexport const addTx = (store, tx) => {\r\n    const storeString = tx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    let txs = store.get(storeString)\r\n    txs.push(tx)\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const updateTx = (store, newTx) => {\r\n    const storeString = newTx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    const txs = store.get(storeString).map(t => {\r\n        if (t.id === newTx.id) {\r\n            // const newTx = Object.assign(t, props)\r\n            return newTx\r\n        }\r\n        return t\r\n    })\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const removeTx = (store, tx) => {\r\n    const storeString = tx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    let txs = store.get(storeString).filter(t => (t.id !== tx.id))\r\n    // console.log(txs)\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const getStreams = async function() {\r\n    // console.log('search', destAddress)\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    // const web3Context = store.get('web3Context')\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n    // console.log(adapterContract)\r\n    window.adapter = adapterContract\r\n    const schedules = await adapterContract.methods.getSchedules().call()\r\n    // console.log(schedules)\r\n    return schedules\r\n}\r\n\r\nexport const recoverStreams = async function(destAddress) {\r\n    const { store } = this.props\r\n    const web3 = store.get('web3')\r\n    const schedules = await getStreams.bind(this)()\r\n    const beneficiary = web3.utils.fromAscii(destAddress)\r\n\r\n    schedules.map(s => {\r\n        // console.log(s.beneficiary)\r\n        if (s.beneficiary === beneficiary) {\r\n            const amount = new BigNumber(s.amount)\r\n            const tx = {\r\n                id: 'tx-' + Math.random().toFixed(6),\r\n                type: 'stream',\r\n                instant: false,\r\n                awaiting: '',\r\n                source: 'btc',\r\n                dest: 'eth',\r\n                destAddress,\r\n                amount: amount.div(10 ** 8).toNumber(),\r\n                startTime: s.startTime,\r\n                duration: s.duration,\r\n                error: false,\r\n                txHash: '',\r\n                schedule: s\r\n            }\r\n\r\n            addTx(store, tx)\r\n        } else {\r\n            // show no results ui\r\n        }\r\n    })\r\n}\r\n\r\nexport const calculateStreamProgress = function(tx) {\r\n    const schedule = tx.schedule\r\n    let totalClaimablePercentrage = 0\r\n    let amountClaimedPercentage = 0\r\n\r\n    if (schedule) {\r\n        const start = Number(schedule.startTime)\r\n        const now = Math.floor(Date.now() / 1000)\r\n        const end = Number(schedule.startTime) + (Number(schedule.duration * 60))\r\n        const period = end - start\r\n        if (now > end) {\r\n            totalClaimablePercentrage = 100\r\n        } else {\r\n            totalClaimablePercentrage = Number((((now - start) / period) * 100).toFixed(1))\r\n        }\r\n        amountClaimedPercentage = Number(((schedule.amountClaimed / schedule.amount) * 100).toFixed(1))\r\n    }\r\n\r\n    return {\r\n        totalClaimablePercentrage,\r\n        amountClaimedPercentage\r\n    }\r\n}\r\n\r\n// make this better\r\nexport const updateStreamInfo = async function(tx) {\r\n    const { store } =  this.props\r\n    const web3 = store.get('web3')\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const { startTime, destAddress } = tx\r\n\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n\r\n    const beneficiary = web3.utils.fromAscii(destAddress)\r\n    const schedules = await getStreams.bind(this)()\r\n\r\n    const schedule = schedules.filter(s => (\r\n        Number(s.startTime) === Number(startTime) &&\r\n        s.beneficiary === beneficiary\r\n    ))[0]\r\n\r\n    if (schedule && schedule.beneficiary) {\r\n        // console.log('updateStreamInfo', schedules, schedule)\r\n        const sched = {\r\n            id: schedule.id,\r\n            beneficiary: schedule.beneficiary,\r\n            startTime: schedule.startTime,\r\n            duration: schedule.duration,\r\n            amount: schedule.amount,\r\n            amountClaimed: schedule.amountClaimed,\r\n            minutesClaimed: schedule.minutesClaimed\r\n        }\r\n        let newTx = Object.assign(tx, {})\r\n        newTx.schedule = sched\r\n        updateTx(store, newTx)\r\n    }\r\n}\r\n\r\nexport const claim = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const { destAddress, schedule } = tx\r\n\r\n    store.set('stream.claimRequesting', true)\r\n\r\n    const {\r\n        totalClaimablePercentrage,\r\n        amountClaimedPercentage\r\n    } = calculateStreamProgress(tx)\r\n\r\n    const claimAmount = (((totalClaimablePercentrage - amountClaimedPercentage) / 100) * tx.amount).toFixed(6)\r\n\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    // console.log('claiming tx', tx, schedule, schedule.id)\r\n\r\n    try {\r\n        const result = await adapterContract.methods.claim(\r\n            schedule.id\r\n        ).send({\r\n            from: web3Context.accounts[0],\r\n            gasPrice: Math.round(gasPrice * 1.5),\r\n            gasLimit: 150000\r\n        }).on('transactionHash', (hash) => {\r\n            updateTx(store, Object.assign(tx, {\r\n                claimTransactions: tx.claimTransactions.concat([{\r\n                    timestamp: Date.now(),\r\n                    amount: claimAmount,\r\n                    txHash: hash\r\n                }])\r\n            }))\r\n            store.set('stream.claimRequesting', false)\r\n        }).on('confirmation', (confirmationNumber, receipt) => {\r\n            // console.log('receipt', receipt)\r\n            updateStreamInfo.bind(this)(tx)\r\n        })\r\n        // console.log('result', result)\r\n    } catch(e) {\r\n        console.log(e)\r\n        store.set('stream.claimRequesting', false)\r\n    }\r\n}\r\n\r\nexport const completeDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n\r\n    // const adapterAddress = store.get('adapterAddress')\r\n    const { type, params, awaiting, renResponse, renSignature } = tx\r\n\r\n    let adapterContract\r\n    if (type === 'swap') {\r\n        adapterContract = new web3.eth.Contract(adapterABI, store.get('swap.adapterAddress'))\r\n    } else if (type === 'stream') {\r\n        adapterContract = new web3.eth.Contract(streamAdapterABI, store.get('stream.adapterAddress'))\r\n    }\r\n\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    updateTx(store, Object.assign(tx, { awaiting: 'eth-settle' }))\r\n\r\n    // console.log('completeDeposit', tx)\r\n\r\n    try {\r\n        let result\r\n        if (type === 'swap') {\r\n            result = await adapterContract.methods.shiftInWithSwap(\r\n                params.contractParams[0].value,\r\n                params.sendAmount,\r\n                renResponse.args.nhash,\r\n                renSignature\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 200000\r\n            })\r\n        } else if (type === 'stream') {\r\n            result = await adapterContract.methods.addVestingSchedule(\r\n                params.contractParams[0].value,\r\n                params.contractParams[1].value,\r\n                Number(params.contractParams[2].value),\r\n                params.sendAmount,\r\n                renResponse.args.nhash,\r\n                renSignature\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 350000\r\n            })\r\n            await updateStreamInfo.bind(this)(tx)\r\n        }\r\n        updateTx(store, Object.assign(tx, { awaiting: '', txHash: result.transactionHash }))\r\n    } catch(e) {\r\n        // console.log(e)\r\n        updateTx(store, Object.assign(tx, { error: true }))\r\n    }\r\n}\r\n\r\nexport const initShiftIn = function(tx) {\r\n    const {\r\n      type,\r\n      amount,\r\n      renBtcAddress,\r\n      params,\r\n      ethSig,\r\n      destAddress,\r\n      // stream\r\n      startTime,\r\n      duration\r\n    } = tx\r\n    const {\r\n        sdk,\r\n        web3\r\n    } = this.props.store.getState()\r\n\r\n    let adapterAddress = ''\r\n    let contractFn = ''\r\n    let contractParams = []\r\n\r\n    if (type === 'swap') {\r\n        adapterAddress = this.props.store.get('swap.adapterAddress')\r\n        contractFn = 'shiftInWithSwap'\r\n        contractParams = [\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n                value: destAddress\r\n            }\r\n        ]\r\n    } else if (type === 'stream') {\r\n        adapterAddress = this.props.store.get('stream.adapterAddress')\r\n        contractFn = 'addVestingSchedule'\r\n        contractParams = [\r\n            {\r\n                name: \"_beneficiary\",\r\n                type: \"bytes\",\r\n                value: web3.utils.fromAscii(destAddress),\r\n            },\r\n            {\r\n                name: \"_startTime\",\r\n                type: \"uint256\",\r\n                value: startTime,\r\n            },\r\n            {\r\n                name: \"_duration\",\r\n                type: \"uint16\",\r\n                value: duration,\r\n            }\r\n        ]\r\n    }\r\n\r\n    // recreate shift in and override with existing data\r\n    let shiftIn\r\n    if (ethSig) {\r\n        shiftIn = sdk.shiftIn({\r\n            messageID: ethSig.messageID,\r\n            sendTo: adapterAddress,\r\n            contractFn,\r\n            contractParams,\r\n        });\r\n    } else {\r\n        const amt = new BigNumber(amount)\r\n        let data = {\r\n            sendToken: RenJS.Tokens.BTC.Btc2Eth,\r\n            sendAmount: amt.times(10 ** 8).toNumber(), // Convert to Satoshis\r\n            sendTo: adapterAddress,\r\n            contractFn,\r\n            contractParams,\r\n        }\r\n\r\n        if (params && params.nonce) {\r\n            data.nonce = params.nonce\r\n        }\r\n\r\n        shiftIn = sdk.shiftIn(data)\r\n    }\r\n\r\n    if (renBtcAddress && params) {\r\n        shiftIn.params = params\r\n        shiftIn.gatewayAddress = renBtcAddress\r\n    }\r\n\r\n    return shiftIn\r\n}\r\n\r\nexport const initDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const {\r\n        params,\r\n        awaiting,\r\n        renResponse,\r\n        renSignature,\r\n        error,\r\n        btcConfirmations\r\n    } = tx\r\n\r\n    // console.log('initDeposit', tx)\r\n\r\n    // completed\r\n    if (!awaiting) return\r\n\r\n    // clear error when re-attempting\r\n    if (error) {\r\n        updateTx(store, Object.assign(tx, { error: false }))\r\n    }\r\n\r\n    // ren already exposed a signature\r\n    if (renResponse && renSignature) {\r\n        completeDeposit.bind(this)(tx)\r\n    } else {\r\n        // create or re-create shift in\r\n        const shiftIn = await initShiftIn.bind(this)(tx)\r\n\r\n        // console.log('initDeposit shiftin', shiftIn)\r\n\r\n        if (!params) {\r\n            addTx(store, Object.assign(tx, {\r\n                params: shiftIn.params,\r\n                renBtcAddress: shiftIn.addr()\r\n            }))\r\n        }\r\n\r\n        // wait for btc\r\n        const deposit = await shiftIn\r\n            .waitForDeposit(2)\r\n            .on(\"deposit\", dep => {\r\n                // console.log('on deposit', dep)\r\n                if (dep.utxo) {\r\n                    if (awaiting === 'btc-init') {\r\n                        updateTx(store, Object.assign(tx, {\r\n                            awaiting: 'btc-settle',\r\n                            btcConfirmations: dep.utxo.confirmations,\r\n                            btcTxHash: dep.utxo.txid\r\n                        }))\r\n                    } else {\r\n                        updateTx(store, Object.assign(tx, {\r\n                            btcConfirmations: dep.utxo.confirmations,\r\n                            btcTxHash: dep.utxo.txid\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n\r\n        updateTx(store, Object.assign(tx, { awaiting: 'ren-settle' }))\r\n\r\n        try {\r\n            const signature = await deposit.submitToRenVM();\r\n            updateTx(store, Object.assign(tx, {\r\n                renResponse: signature.response,\r\n                renSignature: signature.signature\r\n            }))\r\n\r\n            completeDeposit.bind(this)(tx)\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const initInstantSwap = async function(tx) {\r\n    const { store }  = this.props\r\n    const { params, awaiting, renResponse, renSignature, error } = tx\r\n\r\n    const address = store.get('swap.address')\r\n    const amount = store.get('swap.amount')\r\n\r\n    const request = await fetch(`${API_URL}/swap-gateway/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            sourceAmount: amount,\r\n            sourceAsset: 'BTC',\r\n            destinationAsset: 'ETH',\r\n            destinationAddress: address\r\n        })\r\n    })\r\n    const data = await request.json()\r\n    addTx(store, Object.assign(tx, {\r\n        renBtcAddress: data.gatewayAddress\r\n    }))\r\n}\r\n\r\nexport const initInstantMonitoring = function() {\r\n    swapMonitor = setInterval(async () => {\r\n        const transactions = this.props.store.get('swap.transactions')\r\n        transactions.filter((t) => (t.instant && t.awaiting === 'btc-init')).map(async tx => {\r\n            const req = await fetch(`${API_URL}/swap-gateway/status?gateway=${tx.renBtcAddress}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const data = await req.json()\r\n            if (data.status === 'complete') {\r\n                updateTx(this.props.store, Object.assign(tx, {\r\n                    awaiting: '',\r\n                    txHash: data.txHash\r\n                }))\r\n            }\r\n        })\r\n    }, 1000)\r\n}\r\n\r\nexport const initMonitoring = function() {\r\n    const store = this.props.store\r\n\r\n    const txs = store.get('swap.transactions').concat(store.get('stream.transactions'))\r\n    // console.log('initMonitoring', txs)\r\n    txs.map(tx => {\r\n        if (tx.awaiting && !tx.instant) {\r\n            initDeposit.bind(this)(tx)\r\n        } else if (tx.type === 'stream') {\r\n            updateStreamInfo.bind(this)(tx)\r\n        }\r\n    })\r\n}\r\n\r\nexport default {\r\n    addTx,\r\n    updateTx,\r\n    removeTx,\r\n    completeDeposit,\r\n    initShiftIn,\r\n    initDeposit,\r\n    initMonitoring\r\n}\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport SwapTransactionStatus from '../components/SwapTransactionStatus'\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    updateTx,\r\n    initInstantSwap\r\n} from '../utils/txUtils'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  // force_gasLimit: 200000, //override requested gas limit.\r\n  // gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      // borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #333',\r\n      padding: theme.spacing(3),\r\n\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      backgroundColor: '#999999'\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(4),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass DepositContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { store } = this.props\r\n\r\n        const web3Context = await fromConnection(\r\n            \"https://kovan.infura.io/v3/7be66f167c2e4a05981e2ffc4653dec2\",\r\n            {\r\n                gsn: { signKey, ...relay_client_config }\r\n            }\r\n        )\r\n\r\n        store.set('web3Context', web3Context)\r\n        store.set('web3', web3Context.lib)\r\n\r\n        const sdk = new RenJS('testnet')\r\n        store.set('sdk', sdk)\r\n\r\n        const swaps = localStorage.getItem('swap.transactions')\r\n        const streams = localStorage.getItem('stream.transactions')\r\n\r\n        if (swaps) {\r\n            store.set('swap.transactions', JSON.parse(swaps))\r\n        }\r\n\r\n        if (streams) {\r\n            store.set('stream.transactions', JSON.parse(streams))\r\n        }\r\n\r\n        // monitor normal swaps\r\n        initMonitoring.bind(this)()\r\n\r\n        // monitor instant swaps\r\n        initInstantMonitoring.bind(this)()\r\n\r\n        window.store = store\r\n\r\n        window.updateTx = updateTx.bind(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('swap.amount')\r\n        const address = store.get('swap.address')\r\n        const transactions = store.get('swap.transactions')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.floor(Math.random() * (10 ** 16)),\r\n            type: 'swap',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    async startInstant() {\r\n        const { store } = this.props\r\n        const amount = store.get('swap.amount')\r\n        const address = store.get('swap.address')\r\n        const transactions = store.get('swap.transactions')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.floor(Math.random() * (10 ** 16)),\r\n            type: 'swap',\r\n            instant: true,\r\n            awaiting: 'btc-init',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initInstantSwap.bind(this)(tx)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const adapterAddress = store.get('swap.adapterAddress')\r\n        const instantSwapSelected = store.get('swap.instantSwapSelected')\r\n        const transactions = store.get('swap.transactions')\r\n        const amount = store.get('swap.amount')\r\n        const address = store.get('swap.address')\r\n\r\n        console.log(store.getState())\r\n\r\n        const disabled = amount < 0.0001 || (amount > 0.0005 && instantSwapSelected) || !address\r\n\r\n        return <Grid container>\r\n            {/*<Typography variant={'h1'} className={classes.title}>Kovan ETH – Testnet BTC Exchange</Typography>*/}\r\n\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='row'>\r\n                    <Grid className={classes.desc} item xs={12}>\r\n                        <span >Swap Testnet BTC for Kovan ETH</span>\r\n                        <span className={classes.btcLink}>Send testnet BTC from <a target='_blank' href={'https://tbtc.bitaps.com/'}>here</a></span>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={4} className={classes.amountContainer}>\r\n                                <TextField className={classNames(classes.input, classes.amount)}\r\n                                    variant='outlined'\r\n                                    size='small'\r\n                                    placeholder='0.000000'\r\n                                    onChange={e => {\r\n                                        store.set('swap.amount', e.target.value)\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                    }}/>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Send to ETH Address' onChange={e => {\r\n                                    store.set('swap.address', e.target.value)\r\n                                }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.switchContainer}>\r\n                        <FormControlLabel control={<Switch checked={instantSwapSelected}\r\n                            color='primary'\r\n                            onChange={() => store.set('swap.instantSwapSelected', !instantSwapSelected)}\r\n                            value={\"instant\"} />} label=\"Faster swap (0 confirmations, 0.0005 BTC max)\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                        <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={instantSwapSelected ? this.startInstant.bind(this) : this.start.bind(this)}>Start Swap</Button>\r\n                    </Grid>\r\n                    {transactions && transactions.length ? <Grid item xs={12}><Divider className={classes.divider} /></Grid> : null}\r\n                    <Grid item xs={12} className={classes.unfinished}>\r\n                        {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                            return <Grid key={index} container direction='row' className={classes.depositItem}>\r\n                                <Grid item xs={3}>\r\n                                    {tx.amount} BTC\r\n                                </Grid>\r\n                                <Grid className={classes.depositStatus} item xs={9}>\r\n                                    <SwapTransactionStatus tx={tx} />\r\n                                    <div>\r\n                                        {tx.awaiting === 'btc-settle' ? <a className={classes.viewLink} target='_blank' href={`https://live.blockcypher.com/btc-testnet/tx/${tx.btcTxHash}`}>View transaction</a> : null}\r\n                                        {tx.awaiting === 'btc-init' || tx.error || !tx.awaiting ? <div>\r\n                                            {tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}>View transaction</a> : null}\r\n                                            <a href='javascript:;' onClick={() => {\r\n                                                removeTx(store, tx)\r\n                                            }}>{!tx.awaiting ? 'Clear' : 'Cancel'}</a></div> : null}\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }) : null}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    This exchange uses <a target='_blank' href='https://renproject.io/'>RenVM</a>, <a target='_blank' href='https://uniswap.io/'>Uniswap</a>, and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. All swaps abstract ETH away from the user with the <b>GaaS pattern</b>, and faster swaps are faciliated using the <b>CaaS pattern</b>. To learn more, check out our interoperability tutorials below:\r\n                </p>\r\n                <p>\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>GaaS Tutorial</a> | Gas-less transactions</li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>CaaS tutorial</a> | Faster swaps via expedited confirmations</li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n                    Swaps are submitted to the following adapter address: <a target='_blank' href={'https://kovan.etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                        <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n\r\n                </p>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(DepositContainer))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\n// import classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { calculateStreamProgress } from '../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n})\r\n\r\nconst StreamTransactionStatus = function(props) {\r\n    const {\r\n        tx,\r\n    } = props\r\n\r\n    const {\r\n        totalClaimablePercentrage,\r\n        amountClaimedPercentage\r\n    } = calculateStreamProgress(tx)\r\n\r\n    const complete = totalClaimablePercentrage === 100\r\n\r\n    return <React.Fragment>\r\n            {tx.awaiting === 'btc-init' ? <span>\r\n                {`Waiting for BTC transaction to be initiated`}\r\n            </span> : null}\r\n            {tx.awaiting === 'btc-settle' ? <span>\r\n                {`BTC transaction confirming (${tx.btcConfirmations}/${'2'} complete)`}\r\n            </span> : null}\r\n            {tx.awaiting === 'ren-settle' ? <span>\r\n                {`Submitting to RenVM`}\r\n            </span> : null}\r\n            {tx.awaiting === 'eth-settle' ? <span>\r\n                {`Submitting to Ethereum`}\r\n            </span> : null}\r\n            {!tx.awaiting ? <span>{complete ? `Stream complete` : `Streaming in progress`}</span> : null}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransactionStatus);\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport StreamTransactionStatus from './StreamTransactionStatus'\r\nimport { calculateStreamProgress } from '../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n    claimItem: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    depositStatus: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    links: {\r\n        '& a': {\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n    },\r\n    progress: {\r\n        position: 'relative',\r\n        marginRight: theme.spacing(1),\r\n        width: 18,\r\n        height: 18\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    info: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n})\r\n\r\nconst ClaimStreamTransaction = function(props) {\r\n    const {\r\n        tx,\r\n        index,\r\n        classes,\r\n    } = props\r\n\r\n    return <Grid className={classes.claimItem} key={index}>\r\n        <Grid item xs={4}>\r\n            <Grid container alignItems='center'>\r\n                <span>{tx.amount} BTC</span>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={8} className={classes.info}>\r\n            <div className={classes.links}>\r\n                <a target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}className={classes.viewLink}>\r\n                    View transaction\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <span>{(new Date(tx.timestamp).toLocaleString())}</span>\r\n            </div>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\nexport default withStyles(styles)(ClaimStreamTransaction);\r\n","import React from 'react';\r\nimport theme from '../../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { withStore } from '@spyna/react-store'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CountUp from 'react-countup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport {\r\n    claim,\r\n    updateStreamInfo,\r\n    removeTx,\r\n    calculateStreamProgress,\r\n    MIN_CLAIM_AMOUNT\r\n} from '../../utils/txUtils'\r\nimport StreamTransactionStatus from '../../components/StreamTransactionStatus'\r\nimport ClaimStreamTransaction from '../../components/ClaimStreamTransaction'\r\n\r\nconst styles = () => ({\r\n    progress: {\r\n        position: 'relative',\r\n        margin: '0px auto',\r\n        width: 250,\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progressText: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        '& p': {\r\n            margin: '0px'\r\n        }\r\n        // paddingTop: theme.spacing(5)\r\n    },\r\n    totalStreamed: {\r\n        fontSize: 24,\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    spinner: {\r\n        position: 'relative',\r\n        margin: '0px auto',\r\n        width: 24,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    spinnerTop: {\r\n        color: '#eee',\r\n    },\r\n    spinnerBottom: {\r\n        color: theme.palette.primary.main,\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    awaitingStatus: {\r\n        textAlign: 'center',\r\n        paddingBottom: theme.spacing(4),\r\n        fontSize: 12\r\n    },\r\n    claimButton: {\r\n        // margin: '0px auto'\r\n        textAlign: 'center',\r\n        paddingBottom: theme.spacing(3),\r\n        '& span': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    input: {\r\n        marginBottom: theme.spacing(2),\r\n        width: '100%',\r\n        '& input': {\r\n            fontSize: 12\r\n        },\r\n        '& p': {\r\n            fontSize: 12\r\n        },\r\n        '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n        }\r\n    },\r\n    hidden: {\r\n        display: 'none'\r\n    },\r\n    initContainer: {\r\n        // paddingTop: theme.spacing(3),\r\n        '& a': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    backLink: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    loadingContianer: {\r\n        // paddingTop: theme.spacing(3)\r\n    },\r\n    depositAddress: {\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        '& span': {\r\n            paddingBottom: theme.spacing(1)\r\n        }\r\n    },\r\n    address: {\r\n        minWidth: 300,\r\n        width: 'auto'\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        backgroundColor: '#999999'\r\n    },\r\n    claims: {\r\n    }\r\n})\r\n\r\n// clean up logic in this component\r\nclass ViewStreamContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n            totalClaimable: '',\r\n            amountClaimed: '',\r\n            amountClaimedPercentage: '',\r\n            availableAmount: '',\r\n            availablePercentage: '',\r\n            remaingDuration: ''\r\n        }\r\n        this.initAddressRef = React.createRef()\r\n        this.interval = null\r\n        this.scheduleInterval = null\r\n        this.mounted = false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { selectedTx } = this.props\r\n        await updateStreamInfo.bind(this)(selectedTx)\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n\r\n        if (this.initAddressRef.current) {\r\n            this.initAddressRef.current.value = selectedTx.renBtcAddress\r\n        }\r\n\r\n        this.calculateStats()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval)\r\n        }\r\n\r\n        // if (this.scheduleInterval) {\r\n        //     clearInterval(this.scheduleInterval)\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    calculateStats() {\r\n        const { selectedTx } = this.props\r\n        const schedule = selectedTx.schedule\r\n        if (schedule) {\r\n            const start = Number(schedule.startTime)\r\n            const end = Number(schedule.startTime) + (Number(schedule.duration * 60))\r\n            const totalClaimable = (schedule.amount / (10 ** 8)).toFixed(6)\r\n            const amountClaimed = (schedule.amountClaimed / (10 ** 8)).toFixed(6)\r\n            const amountClaimedPercentage = (amountClaimed / totalClaimable).toFixed(1) * 100\r\n\r\n            // animation\r\n            this.interval = setInterval(() => {\r\n                const now = Math.floor(Date.now() / 1000)\r\n                const period = end - start\r\n                let availablePercentage = 0\r\n                if (now > end) {\r\n                    availablePercentage = 100\r\n                    clearInterval(this.interval)\r\n                } else if (start > 0){\r\n                    availablePercentage = Number((((now - start) / period) * 100).toFixed(1))\r\n                }\r\n                const availableAmount = ((availablePercentage / 100) * totalClaimable).toFixed(6)\r\n                const remaingDuration = end - now\r\n\r\n\r\n                // console.log('mounted', this.mounted)\r\n\r\n                if (!this.mounted) {\r\n                    this.setState({\r\n                        totalClaimable,\r\n                        amountClaimed,\r\n                        amountClaimedPercentage,\r\n                        availableAmount,\r\n                        availablePercentage,\r\n                        remaingDuration\r\n                    })\r\n                    this.mounted = true\r\n                } else {\r\n                    this.setState({\r\n                        availablePercentage\r\n                    })\r\n                }\r\n            }, 10);\r\n\r\n            // // update schedule data\r\n            // this.scheduleInterval = setInterval(() => {\r\n            //     updateStreamInfo.bind(this)(selectedTx)\r\n            // }, (1000 * 10))\r\n        }\r\n    }\r\n\r\n    back() {\r\n        const { store } = this.props\r\n        store.set('stream.activeView', 'start')\r\n        store.set('stream.selectedTx', null)\r\n        // console.log('back')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            selectedTx,\r\n            store\r\n        } = this.props\r\n\r\n        const {\r\n            loaded,\r\n            totalClaimable,\r\n            amountClaimed,\r\n            amountClaimedPercentage,\r\n            availableAmount,\r\n            availablePercentage,\r\n            remaingDuration\r\n        } = this.state\r\n\r\n        const {\r\n            totalClaimablePercentrage\r\n        } = calculateStreamProgress(selectedTx)\r\n\r\n        const claimableAmount = selectedTx.schedule ? Number((selectedTx.schedule.amount * ((totalClaimablePercentrage - amountClaimedPercentage)/100)) / (10 ** 8)) : 0\r\n\r\n        const { claimTransactions } = selectedTx\r\n        const claimRequesting = store.get('stream.claimRequesting')\r\n\r\n        // console.log(availableAmount, claimableAmount)\r\n\r\n        return <React.Fragment>\r\n            <div className={classes.backLink}>\r\n                <a href='javascript:;' onClick={this.back.bind(this)}>{'Back'}</a>\r\n            </div>\r\n            {!loaded ? <Grid item xs={12} className={classes.loadingContianer}>\r\n                <div className={classes.spinner}>\r\n                      <CircularProgress\r\n                        variant=\"determinate\"\r\n                        value={100}\r\n                        className={classes.spinnerTop}\r\n                        size={24}\r\n                        thickness={4}\r\n                      />\r\n                      <CircularProgress\r\n                        variant=\"indeterminate\"\r\n                        disableShrink\r\n                        className={classes.spinnerBottom}\r\n                        size={24}\r\n                        thickness={4}\r\n                      />\r\n                </div>\r\n            </Grid> :\r\n            <React.Fragment>\r\n                <Grid item xs={12} className={selectedTx.schedule ? classes.hidden : classes.initContainer}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.spinner}>\r\n                                  <CircularProgress\r\n                                    variant=\"determinate\"\r\n                                    value={100}\r\n                                    className={classes.spinnerTop}\r\n                                    size={24}\r\n                                    thickness={4}\r\n                                  />\r\n                                  <CircularProgress\r\n                                    variant=\"indeterminate\"\r\n                                    disableShrink\r\n                                    className={classes.spinnerBottom}\r\n                                    size={24}\r\n                                    thickness={4}\r\n                                  />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.awaitingStatus}>\r\n                            <StreamTransactionStatus tx={selectedTx} />\r\n                            {(selectedTx.awaiting === 'btc-init' || selectedTx.error) &&\r\n                                <p><a href='javascript:;'\r\n                                    className={classes.cancelLink}\r\n                                    onClick={() => {\r\n                                        removeTx(store, selectedTx)\r\n                                        store.set('stream.selectedTx', null)\r\n                                        store.set('stream.activeView', 'start')\r\n                                    }}>\r\n                                    Cancel\r\n                                </a></p>}\r\n\r\n                            {selectedTx.awaiting === 'btc-settle' && <p><a target='_blank' href={`https://live.blockcypher.com/btc-testnet/tx/${selectedTx.btcTxHash}`}\r\n                                className={classes.cancelLink}>\r\n                                View pending transaction\r\n                            </a></p>}\r\n                        </Grid>\r\n                        <Grid item xs={12} onClick={() => {}}>\r\n                            <Grid container justify='center'>\r\n                                {selectedTx.awaiting === 'btc-init' && <div className={classes.depositAddress}>\r\n                                    <p><span>{`Send ${selectedTx.amount} BTC to the following address:`}</span></p>\r\n                                    <TextField className={classNames(classes.input, classes.address)}\r\n                                        label={''}\r\n                                        variant='outlined'\r\n                                        size='small'\r\n                                        placeholder='Deposit Address'\r\n                                        inputRef={this.initAddressRef}/>\r\n                                </div>}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify='center'>\r\n                                {selectedTx.awaiting === 'btc-init' || selectedTx.error || !selectedTx.awaiting ? <div className={classes.cancelLink}>\r\n                                    {selectedTx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+selectedTx.txHash}>View transaction</a> : null}\r\n                                </div> : null}\r\n                                {/*<span  onClick={() => store.set('activeStreamView', 'start')}>Cancel</span>*/}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={selectedTx.schedule && loaded ? classes.progressContainer : classes.hidden}>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.progress}>\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                value={100}\r\n                                className={classes.progressTop}\r\n                                size={250}\r\n                                thickness={2}\r\n                              />\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                className={classes.progressMiddle}\r\n                                size={250}\r\n                                value={Number(availablePercentage)}\r\n                                thickness={2}\r\n                              />\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                className={classes.progressBottom}\r\n                                size={250}\r\n                                value={Number(amountClaimedPercentage)}\r\n                                thickness={2}\r\n                              />\r\n                        </div>\r\n                        <div className={classes.progressText}>\r\n                            <div>\r\n                                <p className={classes.totalStreamed}>\r\n                                    <b>{totalClaimable} BTC</b>\r\n                                </p>\r\n                            </div>\r\n                            <p>\r\n                                <b>{amountClaimed} / <CountUp start={availableAmount} end={selectedTx.amount} duration={remaingDuration} decimals={6}>{availableAmount}</CountUp> BTC</b>\r\n                            </p>\r\n                            <p>\r\n                                <span>claimed</span>\r\n                            </p>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n                <Grid item xs={12} className={selectedTx.schedule && loaded ?classes.claimButton : classes.hidden}>\r\n                    {claimableAmount > MIN_CLAIM_AMOUNT ? <Button disabled={claimRequesting}\r\n                        className={''}\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        onClick={() => {\r\n                            claim.bind(this)(selectedTx)\r\n                        }}>\r\n                        Claim {claimableAmount.toFixed(6)} BTC\r\n                    </Button> : <span>{totalClaimablePercentrage < 100 ? `Minimum claim amount is ${MIN_CLAIM_AMOUNT} BTC` : 'All available funds claimed'}</span>}\r\n                </Grid>\r\n                {claimTransactions.length ? <Grid item xs={12}>\r\n                    <Divider className={classes.divider} />\r\n                </Grid> : null}\r\n                <div className={selectedTx.schedule && loaded ? classes.claimTransactions : classes.hidden}>\r\n                    {claimTransactions && claimTransactions.length ? claimTransactions.map((tx, index) => {\r\n                        return <ClaimStreamTransaction\r\n                            tx={tx}\r\n                            index={index}\r\n                            onView={t => {\r\n                            }}\r\n                            onCancel={t => {\r\n                            }}/>\r\n                    }) : null}\r\n                </div>\r\n            </React.Fragment>}\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default withStore(withStyles(styles)(ViewStreamContainer))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport StreamTransactionStatus from './StreamTransactionStatus'\r\nimport { calculateStreamProgress } from '../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n    depositItem: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    depositStatus: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    links: {\r\n        '& a': {\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n    },\r\n    progress: {\r\n        position: 'relative',\r\n        marginRight: theme.spacing(1),\r\n        width: 18,\r\n        height: 18\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n})\r\n\r\nconst StreamTransaction = function(props) {\r\n    // render() {\r\n        const {\r\n            tx,\r\n            index,\r\n            classes,\r\n            onView,\r\n            onCancel\r\n        } = props\r\n\r\n        const {\r\n            schedule\r\n        } = tx\r\n\r\n        const {\r\n            totalClaimablePercentrage,\r\n            amountClaimedPercentage\r\n        } = calculateStreamProgress(tx)\r\n\r\n        return <Grid key={index}\r\n                  container\r\n                  direction='row'\r\n                  className={classes.depositItem}>\r\n            <Grid item xs={4}>\r\n                <Grid container alignItems='center'>\r\n                    <div className={classes.progress}>\r\n                          <CircularProgress\r\n                            variant=\"static\"\r\n                            value={100}\r\n                            className={classes.progressTop}\r\n                            size={18}\r\n                            thickness={4}\r\n                          />\r\n                          <CircularProgress\r\n                            variant=\"static\"\r\n                            className={classes.progressMiddle}\r\n                            size={18}\r\n                            value={totalClaimablePercentrage}\r\n                            thickness={4}\r\n                          />\r\n                          <CircularProgress\r\n                            variant=\"static\"\r\n                            className={classes.progressBottom}\r\n                            size={18}\r\n                            value={amountClaimedPercentage}\r\n                            thickness={4}\r\n                          />\r\n                    </div>\r\n                    <span>{tx.amount} BTC</span>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.depositStatus} item xs={8}>\r\n                <StreamTransactionStatus tx={tx} />\r\n                <div className={classes.links}>\r\n                    <a href='javascript:;' className={classes.viewLink} onClick={() => (onView(tx))}>\r\n                        View\r\n                    </a>\r\n\r\n                    {/*tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}>View transaction</a> : null*/}\r\n\r\n                    {/*tx.awaiting === 'btc-init' || tx.error ? <a href='javascript:;' onClick={() => {\r\n                        onCancel(tx)\r\n                    }}>Cancel</a> : null*/}\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    // }\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransaction);\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    initInstantSwap,\r\n    recoverStreams\r\n} from '../../utils/txUtils'\r\n\r\nimport ViewStream from './ViewStreamContainer'\r\nimport StreamTransaction from '../../components/StreamTransaction'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  force_gasLimit: 200000, //override requested gas limit.\r\n  gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      // borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #333',\r\n      padding: theme.spacing(3),\r\n\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    // paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      backgroundColor: '#999999'\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(4),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  },\r\n  radio: {\r\n      marginBottom: theme.spacing(2),\r\n      flexDirection: 'row',\r\n      '& span': {\r\n        fontSize: 12\r\n      }\r\n  },\r\n  searchLink: {\r\n      fontSize: 12,\r\n      minWidth: 80\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass StreamContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { store } = this.props\r\n\r\n        const txs = localStorage.getItem('stream.transactions')\r\n\r\n        if (txs) {\r\n            store.set('stream.transactions', JSON.parse(txs))\r\n        }\r\n\r\n        // // monitor normal swaps\r\n        // initMonitoring.bind(this)()\r\n        //\r\n        // // monitor instant swaps\r\n        // initInstantMonitoring.bind(this)()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('stream.amount')\r\n        const address = store.get('stream.address')\r\n        const startTime = Math.round(Date.now() / 1000)\r\n        const duration = store.get('stream.duration')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.random().toFixed(6),\r\n            type: 'stream',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            btcConfirmations: 0,\r\n            btcTxHash: '',\r\n            destAddress: address,\r\n            amount: amount,\r\n            startTime,\r\n            duration,\r\n            error: false,\r\n            txHash: '',\r\n            claimTransactions: []\r\n        }\r\n\r\n        store.set('stream.selectedTx', tx)\r\n        store.set('stream.activeView', 'view-stream')\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    viewTx(tx) {\r\n        const { store } =  this.props\r\n\r\n        store.set('stream.selectedTx', tx)\r\n        store.set('stream.activeView', 'view-stream')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        // console.log(store.getState())\r\n\r\n        const amount = store.get('stream.amount')\r\n        const address = store.get('stream.address')\r\n        const duration = store.get('stream.duration')\r\n        const transactions = store.get('stream.transactions')\r\n        const activeView = store.get('stream.activeView')\r\n        const selectedTx = store.get('stream.selectedTx')\r\n        const searchAddress = store.get('stream.searchAddress')\r\n        const adapterAddress = store.get('stream.adapterAddress')\r\n\r\n        const disabled = amount < 0.00011 || !address || !duration\r\n        // const disabled = false\r\n\r\n        return <Grid container>\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='row'>\r\n                    {activeView === 'start' && <React.Fragment>\r\n                        <Grid className={classes.desc} item xs={12}>\r\n                            <span >Continously Stream Testnet BTC</span>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.amountContainer}>\r\n                                    <TextField className={classNames(classes.input, classes.amount)}\r\n                                        variant='outlined'\r\n                                        size='small'\r\n                                        placeholder='0.000000'\r\n                                        onChange={e => {\r\n                                            store.set('stream.amount', e.target.value)\r\n                                        }}\r\n                                        InputProps={{\r\n                                            endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                        }}/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Stream to BTC Address' onChange={e => {\r\n                                        store.set('stream.address', e.target.value)\r\n                                    }}/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Duration in Minutes' onChange={e => {\r\n                                        store.set('stream.duration', e.target.value)\r\n                                    }}/>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                            <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={this.start.bind(this)}>Start Stream</Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Divider className={classes.divider} />\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                            <TextField\r\n                                className={classNames(classes.input, classes.address)}\r\n                                variant='outlined'\r\n                                size='small'\r\n                                placeholder='Search by Destination Address'\r\n                                onChange={e => {\r\n                                    store.set('stream.searchAddress', e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment\r\n                                        className={classes.searchLink}\r\n                                        position=\"end\">\r\n                                            <a href='javascript:;' onClick={() => {\r\n                                                recoverStreams.bind(this)(searchAddress)\r\n                                            }}>Get Streams</a>\r\n                                        </InputAdornment>\r\n                                }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.unfinished}>\r\n                            {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                                return <StreamTransaction\r\n                                    tx={tx}\r\n                                    index={index}\r\n                                    onView={t => {\r\n                                        this.viewTx.bind(this)(t)\r\n                                    }}\r\n                                    onCancel={t => {\r\n                                        removeTx(store, t)\r\n                                    }}/>\r\n                            }) : null}\r\n                        </Grid>\r\n                    </React.Fragment>}\r\n                    {activeView === 'view-stream' && <Grid container direction='row'>\r\n                        <Grid item xs={12}>\r\n                            <ViewStream selectedTx={selectedTx} />\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    This exchange uses <a target='_blank' href='https://renproject.io/'>RenVM</a> and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. Active streams are held in a smart contract that allows anyone to shift out a valid amount of earned BTC to the recipient BTC address at any time.\r\n                </p>\r\n                <p>\r\n                    Streams are facilitated through the following adapter address: <a target='_blank' href={'https://kovan.etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                </p>\r\n                <ul>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>Bitcoin Payments Tutorial</a> | Scheduled Bitcoin Payments</li>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                    <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                </ul>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(StreamContainer))\r\n","import React from 'react';\r\nimport { createStore, withStore } from '@spyna/react-store'\r\n\r\n\r\nimport NavContainer from './containers/NavContainer'\r\nimport ActionTabsContainer from './containers/ActionTabsContainer'\r\nimport DepositContainer from './containers/DepositContainer'\r\nimport StreamContainer from './containers/Stream/StreamContainer'\r\n\r\n\r\nimport theme from './theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport { withStyles, ThemeProvider } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\n// import TabPanel from '@material-ui/core/TabPanel'\r\n\r\nconst styles = () => ({\r\n})\r\n\r\nconst initialState = {\r\n    'selectedActionTab': 'exchange',\r\n    // exchange\r\n    'swap.transactions': [],\r\n    'swap.adapterAddress': '0xade8792c3ee90320cabde200ccab34b27cc88651',\r\n    'swap.instantSwapSelected': false,\r\n    'swap.amount': '',\r\n    'swap.address': '',\r\n    // streaming\r\n    'stream.adapterAddress': '0x49ADDF7Cae3552C3f6991b6931DbcfAc28E11846',\r\n    'stream.transactions': [],\r\n    'stream.amount': '',\r\n    'stream.destination': '',\r\n    'stream.duration': '',\r\n    'stream.activeView': 'start',\r\n    'stream.selectedTx': null,\r\n    'stream.searchAddress': '',\r\n    'stream.claimRequesting': false\r\n}\r\n\r\nconst AppWrapper = withStore(function(props) {\r\n    const { store } = props\r\n    const {\r\n        selectedActionTab\r\n    } = store.getState()\r\n\r\n    return <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n            {/*<Grid item xs={12}>\r\n                <NavContainer />\r\n            </Grid>*/}\r\n            <Grid item sm={3}>\r\n                <ActionTabsContainer />\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                {selectedActionTab === 'exchange' && <DepositContainer />}\r\n                {selectedActionTab === 'stream' && <StreamContainer />}\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n})\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <AppWrapper />\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createStore(withStyles(styles)(App), initialState)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}