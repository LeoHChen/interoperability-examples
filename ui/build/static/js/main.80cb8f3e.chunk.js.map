{"version":3,"sources":["theme/theme.js","containers/NavContainer.js","containers/ActionTabsContainer.js","utils/txUtils.js","containers/DepositContainer.js","containers/Stream/ViewStreamContainer.js","components/StreamTransaction.js","containers/Stream/StreamContainer.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","grey","overrides","PrivateNotchedOutline","root","MuiOutlinedInput","notchedOutline","borderColor","borderWidth","MuiTextField","MuiToggleButtonGroup","grouped","borderLeft","MuiToggleButton","border","backgroundColor","color","fontWeight","NavContainer","props","this","classes","walletAddress","store","get","length","console","log","state","getState","Grid","item","xs","className","navContainer","container","alignItems","Typography","variant","React","Component","withStyles","paddingTop","theme","spacing","paddingBottom","minHeight","logo","height","width","marginRight","accountButton","withStore","ActionTabsContainer","value","set","Tabs","orientation","onChange","e","changeTabs","bind","tabs","Tab","label","paddingRight","addTx","tx","storeString","type","txs","push","localStorage","setItem","JSON","stringify","window","updateTx","newTx","map","t","id","removeTx","filter","getStreams","a","web3","adapterAddress","adapterContract","eth","Contract","streamAdapterABI","adapter","methods","getSchedules","call","schedules","recoverStreams","destAddress","beneficiary","utils","fromAscii","s","amount","BigNumber","Math","random","toFixed","instant","awaiting","source","dest","div","toNumber","startTime","duration","error","txHash","schedule","updateStreamInfo","Number","Object","assign","claim","web3Context","lib","getGasPrice","gasPrice","send","from","accounts","round","gasLimit","result","completeDeposit","params","renResponse","renSignature","adapterABI","shiftInWithSwap","contractParams","sendAmount","args","nhash","addVestingSchedule","transactionHash","initShiftIn","shiftIn","renBtcAddress","ethSig","sdk","contractFn","name","messageID","sendTo","amt","data","sendToken","RenJS","Tokens","BTC","Btc2Eth","times","nonce","gatewayAddress","initDeposit","btcConfirmations","addr","waitForDeposit","on","dep","utxo","confirmations","deposit","submitToRenVM","signature","response","initInstantSwap","address","fetch","method","headers","body","sourceAmount","sourceAsset","destinationAsset","destinationAddress","request","json","initInstantMonitoring","setInterval","req","status","initMonitoring","concat","signKey","ephemeral","relay_client_config","txfee","verbose","Ellipsis","string","interval","setState","clearInterval","DepositContainer","fromConnection","gsn","swaps","getItem","streams","parse","swapMonitor","floor","transactions","instantSwapSelected","selectedTab","disabled","contentContainer","direction","desc","btcLink","target","href","amountContainer","TextField","classNames","input","size","placeholder","InputProps","endAdornment","InputAdornment","position","switchContainer","FormControlLabel","control","Switch","checked","swapButtonContainer","Button","swapButton","onClick","startInstant","start","Divider","divider","unfinished","index","key","depositItem","depositStatus","viewLink","info","caption","flexGrow","paper","padding","marginTop","marginBottom","fontSize","title","display","justifyContent","actionTabs","textAlign","ViewStreamContainer","loaded","totalClaimable","amountClaimed","amountClaimedPercentage","availableAmount","availablePercentage","remaingDuration","initAddressRef","createRef","mounted","selectedTx","current","end","now","Date","period","Fragment","backLink","back","hidden","initContainer","spinner","CircularProgress","spinnerTop","thickness","disableShrink","spinnerBottom","awaitingStatus","inputRef","justify","cancelLink","progressContainer","progress","progressTop","progressMiddle","progressBottom","progressText","totalStreamed","decimals","claimButton","loadingContianer","margin","animationDuration","left","top","flexDirection","onView","onCancel","StreamContainer","activeView","searchAddress","searchLink","viewTx","radio","minWidth","AppWrapper","selectedActionTab","Container","maxWidth","sm","App","ThemeProvider","createStore","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80cb8f3e.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#000',\r\n            main: '#000',\r\n            dark: '#000',\r\n            contrastText: '#fff',\r\n        },\r\n        // primary: blueGrey,\r\n        secondary: grey,\r\n    },\r\n    overrides: {\r\n        // Style sheet name ⚛️\r\n        // MuiButton: {\r\n        //   // Name of the rule\r\n        //   text: {\r\n        //     // Some CSS\r\n        //     color: 'white',\r\n        //   },\r\n        // }\r\n        PrivateNotchedOutline: {\r\n            root: {\r\n            }\r\n        },\r\n        // '.MuiOutlinedInput-root:hover':{\r\n        //     borderColor: '#EBEBEB !important'\r\n        // },\r\n        MuiOutlinedInput: {\r\n            // root:{\r\n            //     '&:hover': {\r\n            //         // notchedOutline: {\r\n            //             borderColor: '#EBEBEB'\r\n            //         // }\r\n            //     }\r\n            // },\r\n            notchedOutline: {\r\n                borderColor: '#EBEBEB !important',\r\n                borderWidth: '1px !important'\r\n            }\r\n        },\r\n        MuiTextField: {\r\n\r\n        },\r\n        MuiToggleButtonGroup: {\r\n          grouped: {\r\n            '&:not(:first-child)': {\r\n              borderLeft: '1px solid #EBEBEB'\r\n            }\r\n          }\r\n        },\r\n        // .MuiToggleButtonGroup-grouped:not(:first-child)\r\n        MuiToggleButton: {\r\n            root: {\r\n                border: '1px solid #EBEBEB',\r\n                backgroundColor: '#fff',\r\n                '&.Mui-selected': {\r\n                    // back\r\n                    backgroundColor: '#fff !important',\r\n                    color: '#000',\r\n                    fontWeight: '500',\r\n                    '&:hover': {\r\n                        backgroundColor: '#fff !important',\r\n                    }\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: '#fff !important',\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","import React from 'react';\r\nimport Web3 from \"web3\";\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst styles = () => ({\r\n    navContainer: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n        minHeight: 52\r\n    },\r\n    logo: {\r\n        height: 22,\r\n        width: 25,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    accountButton: {\r\n      '& svg': {\r\n        marginRight: theme.spacing(1)\r\n      }\r\n    }\r\n})\r\n\r\nclass NavContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const walletAddress = store.get('walletAddress')\r\n        const isSignedIn = walletAddress && walletAddress.length\r\n\r\n        console.log(this.props, this.state, this.props.store.getState())\r\n\r\n        return <Grid item xs={12}>\r\n            {<Grid className={classes.navContainer} container alignItems='center'>\r\n              <Grid item xs={6}>\r\n                  <Grid container alignItems='center'>\r\n                      <Typography variant='h6'>RenVM Interoperability</Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(NavContainer))\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\n\r\nconst styles = () => ({\r\n    tabs: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingRight: theme.spacing(2),\r\n        '& .MuiTab-wrapper': {\r\n            alignItems: 'flex-end',\r\n            // paddingRight: theme.spacing(1)\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nclass ActionTabsContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = props.store.getState()\r\n    }\r\n\r\n    changeTabs(value) {\r\n        const { store } = this.props\r\n        store.set('selectedActionTab', value)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        // console.log(this.props, this.state)\r\n\r\n        return <Tabs\r\n          orientation=\"vertical\"\r\n          value={store.get('selectedActionTab')}\r\n          onChange={(e, value) => {\r\n            this.changeTabs.bind(this)(value)\r\n          }}\r\n          className={classes.tabs}\r\n        >\r\n          <Tab value={'exchange'} label=\"Exchange\" />\r\n          <Tab value={'stream'} label=\"Streaming Payments\" />\r\n        </Tabs>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(ActionTabsContainer))\r\n","import RenJS from \"@renproject/ren\";\r\nimport adapterABI from './exchangeAdapterSimpleABI.json'\r\nimport streamAdapterABI from './streamAdapterSimpleABI.json'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// const API_URL = ''\r\nconst API_URL = 'http://localhost:3000'\r\nlet swapMonitor = null\r\n\r\nexport const addTx = (store, tx) => {\r\n    const storeString = tx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    let txs = store.get(storeString)\r\n    txs.push(tx)\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const updateTx = (store, newTx) => {\r\n    const storeString = newTx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    const txs = store.get(storeString).map(t => {\r\n        if (t.id === newTx.id) {\r\n            // const newTx = Object.assign(t, props)\r\n            return newTx\r\n        }\r\n        return t\r\n    })\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const removeTx = (store, tx) => {\r\n    const storeString = tx.type === 'swap' ? 'swap.transactions' : 'stream.transactions'\r\n    let txs = store.get(storeString).filter(t => (t.id !== tx.id))\r\n    // console.log(txs)\r\n    store.set(storeString, txs)\r\n    localStorage.setItem(storeString, JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window[storeString] = txs\r\n}\r\n\r\nexport const txExists = function(tx) {\r\n    return this.props.store.get('transactions').filter(t => t.id === tx.id).length > 0\r\n}\r\n\r\nexport const getStreams = async function() {\r\n    // console.log('search', destAddress)\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    // const web3Context = store.get('web3Context')\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n    console.log(adapterContract)\r\n    window.adapter = adapterContract\r\n    const schedules = await adapterContract.methods.getSchedules().call()\r\n    console.log(schedules)\r\n    return schedules\r\n}\r\n\r\nexport const recoverStreams = async function(destAddress) {\r\n    const { store } = this.props\r\n    const web3 = store.get('web3')\r\n    const schedules = await getStreams.bind(this)()\r\n    const beneficiary = web3.utils.fromAscii(destAddress)\r\n\r\n    schedules.map(s => {\r\n        console.log(s.beneficiary)\r\n        if (s.beneficiary === beneficiary) {\r\n            const amount = new BigNumber(s.amount)\r\n            const tx = {\r\n                id: 'tx-' + Math.random().toFixed(6),\r\n                type: 'stream',\r\n                instant: false,\r\n                awaiting: '',\r\n                source: 'btc',\r\n                dest: 'eth',\r\n                destAddress,\r\n                amount: amount.div(10 ** 8).toNumber(),\r\n                startTime: s.startTime,\r\n                duration: s.duration,\r\n                error: false,\r\n                txHash: '',\r\n                schedule: s\r\n            }\r\n\r\n            addTx(store, tx)\r\n        } else {\r\n            // show no results ui\r\n        }\r\n    })\r\n}\r\n\r\n// make this better\r\nexport const updateStreamInfo = async function(tx) {\r\n    const { store } =  this.props\r\n    const web3 = store.get('web3')\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const { startTime, destAddress } = tx\r\n\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n\r\n    const beneficiary = web3.utils.fromAscii(destAddress)\r\n    const schedules = await getStreams.bind(this)()\r\n\r\n    const schedule = schedules.filter(s => (\r\n        Number(s.startTime) === Number(startTime) &&\r\n        s.beneficiary === beneficiary\r\n    ))[0]\r\n\r\n    console.log('updateStreamInfo', schedules, schedule)\r\n\r\n    if (schedule) {\r\n        updateTx(store, Object.assign(tx, {\r\n            schedule\r\n        }))\r\n    }\r\n}\r\n\r\nexport const claim = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n\r\n    const adapterAddress = store.get('stream.adapterAddress')\r\n    const { destAddress, schedule } = tx\r\n\r\n    const adapterContract = new web3.eth.Contract(streamAdapterABI, adapterAddress)\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    console.log('claiming tx', tx, schedule, schedule.id)\r\n\r\n    try {\r\n        const result = await adapterContract.methods.claim(\r\n            schedule.id\r\n        ).send({\r\n            from: web3Context.accounts[0],\r\n            gasPrice: Math.round(gasPrice * 1.5),\r\n            gasLimit: 300000\r\n        })\r\n        console.log('result', result)\r\n        updateStreamInfo.bind(this)(tx)\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const completeDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n\r\n    // const adapterAddress = store.get('adapterAddress')\r\n    const { type, params, awaiting, renResponse, renSignature } = tx\r\n\r\n    let adapterContract\r\n    if (type === 'swap') {\r\n        adapterContract = new web3.eth.Contract(adapterABI, store.get('adapterAddress'))\r\n    } else if (type === 'stream') {\r\n        adapterContract = new web3.eth.Contract(streamAdapterABI, store.get('stream.adapterAddress'))\r\n    }\r\n\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    updateTx(store, Object.assign(tx, { awaiting: 'eth-settle' }))\r\n\r\n    console.log('completeDeposit', tx)\r\n\r\n    try {\r\n        let result\r\n        if (type === 'swap') {\r\n            result = await adapterContract.methods.shiftInWithSwap(\r\n                params.contractParams[0].value,\r\n                params.sendAmount,\r\n                renResponse.args.nhash,\r\n                renSignature\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 200000\r\n            })\r\n        } else if (type === 'stream') {\r\n            result = await adapterContract.methods.addVestingSchedule(\r\n                params.contractParams[0].value,\r\n                params.contractParams[1].value,\r\n                Number(params.contractParams[2].value),\r\n                params.sendAmount,\r\n                renResponse.args.nhash,\r\n                renSignature\r\n            ).send({\r\n                from: web3Context.accounts[0],\r\n                gasPrice: Math.round(gasPrice * 1.5),\r\n                gasLimit: 350000\r\n            })\r\n            await updateStreamInfo.bind(this)(tx)\r\n        }\r\n        updateTx(store, Object.assign(tx, { awaiting: '', txHash: result.transactionHash }))\r\n    } catch(e) {\r\n        console.log(e)\r\n        updateTx(store, Object.assign(tx, { error: true }))\r\n    }\r\n}\r\n\r\nexport const initShiftIn = function(tx) {\r\n    const {\r\n      type,\r\n      amount,\r\n      renBtcAddress,\r\n      params,\r\n      ethSig,\r\n      destAddress,\r\n      // stream\r\n      startTime,\r\n      duration\r\n    } = tx\r\n    const {\r\n        sdk,\r\n        web3\r\n    } = this.props.store.getState()\r\n\r\n    let adapterAddress = ''\r\n    let contractFn = ''\r\n    let contractParams = []\r\n\r\n    if (type === 'swap') {\r\n        adapterAddress = this.props.store.get('adapterAddress')\r\n        contractFn = 'shiftInWithSwap'\r\n        contractParams = [\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n                value: destAddress\r\n            }\r\n        ]\r\n    } else if (type === 'stream') {\r\n        adapterAddress = this.props.store.get('stream.adapterAddress')\r\n        contractFn = 'addVestingSchedule'\r\n        contractParams = [\r\n            {\r\n                name: \"_beneficiary\",\r\n                type: \"bytes\",\r\n                value: web3.utils.fromAscii(destAddress),\r\n            },\r\n            {\r\n                name: \"_startTime\",\r\n                type: \"uint256\",\r\n                value: startTime,\r\n            },\r\n            {\r\n                name: \"_duration\",\r\n                type: \"uint16\",\r\n                value: duration,\r\n            }\r\n        ]\r\n    }\r\n\r\n    // recreate shift in and override with existing data\r\n    let shiftIn\r\n    if (ethSig) {\r\n        shiftIn = sdk.shiftIn({\r\n            messageID: ethSig.messageID,\r\n            sendTo: adapterAddress,\r\n            contractFn,\r\n            contractParams,\r\n        });\r\n    } else {\r\n        const amt = new BigNumber(amount)\r\n        let data = {\r\n            sendToken: RenJS.Tokens.BTC.Btc2Eth,\r\n            sendAmount: amt.times(10 ** 8).toNumber(), // Convert to Satoshis\r\n            sendTo: adapterAddress,\r\n            contractFn,\r\n            contractParams,\r\n        }\r\n\r\n        if (params && params.nonce) {\r\n            data.nonce = params.nonce\r\n        }\r\n\r\n        shiftIn = sdk.shiftIn(data)\r\n    }\r\n\r\n    if (renBtcAddress && params) {\r\n        shiftIn.params = params\r\n        shiftIn.gatewayAddress = renBtcAddress\r\n    }\r\n\r\n    return shiftIn\r\n}\r\n\r\nexport const initDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const {\r\n        params,\r\n        awaiting,\r\n        renResponse,\r\n        renSignature,\r\n        error,\r\n        btcConfirmations\r\n    } = tx\r\n\r\n    console.log('initDeposit', tx)\r\n\r\n    // completed\r\n    if (!awaiting) return\r\n\r\n    // clear error when re-attempting\r\n    if (error) {\r\n        updateTx(store, Object.assign(tx, { error: false }))\r\n    }\r\n\r\n    // ren already exposed a signature\r\n    if (renResponse && renSignature) {\r\n        completeDeposit.bind(this)(tx)\r\n    } else {\r\n        // create or re-create shift in\r\n        const shiftIn = await initShiftIn.bind(this)(tx)\r\n\r\n        console.log('initDeposit shiftin', shiftIn)\r\n\r\n        if (!params) {\r\n            addTx(store, Object.assign(tx, {\r\n                params: shiftIn.params,\r\n                renBtcAddress: shiftIn.addr()\r\n            }))\r\n        }\r\n\r\n        // wait for btc\r\n        const deposit = await shiftIn\r\n            .waitForDeposit(2)\r\n            .on(\"deposit\", dep => {\r\n                console.log('on deposit', dep)\r\n                if (dep.utxo) {\r\n                    if (awaiting === 'btc-init') {\r\n                        updateTx(store, Object.assign(tx, {\r\n                            awaiting: 'btc-settle',\r\n                            btcConfirmations: dep.utxo.confirmations\r\n                        }))\r\n                    } else {\r\n                        updateTx(store, Object.assign(tx, {\r\n                            btcConfirmations: dep.utxo.confirmations\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n\r\n        updateTx(store, Object.assign(tx, { awaiting: 'ren-settle' }))\r\n\r\n        try {\r\n            const signature = await deposit.submitToRenVM();\r\n            updateTx(store, Object.assign(tx, {\r\n                renResponse: signature.response,\r\n                renSignature: signature.signature\r\n            }))\r\n\r\n            completeDeposit.bind(this)(tx)\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const initInstantSwap = async function(tx) {\r\n    const { store }  = this.props\r\n    const { params, awaiting, renResponse, renSignature, error } = tx\r\n\r\n    // async getGateway() {\r\n        const {\r\n            amount,\r\n            address\r\n        } = this.props.store.getState()\r\n\r\n\r\n        const request = await fetch(`${API_URL}/swap-gateway/create`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                sourceAmount: amount,\r\n                sourceAsset: 'BTC',\r\n                destinationAsset: 'ETH',\r\n                destinationAddress: address\r\n            })\r\n        })\r\n        const data = await request.json()\r\n        addTx(store, Object.assign(tx, {\r\n            renBtcAddress: data.gatewayAddress\r\n        }))\r\n}\r\n\r\nexport const initInstantMonitoring = function() {\r\n    swapMonitor = setInterval(async () => {\r\n        const transactions = this.props.store.get('swap.transactions')\r\n        transactions.filter((t) => (t.instant && t.awaiting === 'btc-init')).map(async tx => {\r\n            const req = await fetch(`${API_URL}/swap-gateway/status?gateway=${tx.renBtcAddress}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const data = await req.json()\r\n            if (data.status === 'complete') {\r\n                updateTx(this.props.store, Object.assign(tx, {\r\n                    awaiting: '',\r\n                    txHash: data.txHash\r\n                }))\r\n            }\r\n        })\r\n    }, 1000)\r\n}\r\n\r\nexport const initMonitoring = function() {\r\n    const store = this.props.store\r\n\r\n    const txs = store.get('swap.transactions').concat(store.get('stream.transactions'))\r\n    console.log('initMonitoring', txs)\r\n    txs.map(tx => {\r\n        if (tx.awaiting) {\r\n            initDeposit.bind(this)(tx)\r\n        } else if (tx.type === 'stream') {\r\n            updateStreamInfo.bind(this)(tx)\r\n        }\r\n    })\r\n}\r\n\r\nexport default {\r\n    addTx,\r\n    updateTx,\r\n    removeTx,\r\n    txExists,\r\n    completeDeposit,\r\n    initShiftIn,\r\n    initDeposit,\r\n    initMonitoring\r\n}\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    updateTx,\r\n    initInstantSwap\r\n} from '../utils/txUtils'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  // force_gasLimit: 200000, //override requested gas limit.\r\n  // gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      // borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #333',\r\n      padding: theme.spacing(3),\r\n\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      backgroundColor: '#999999'\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(4),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass DepositContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { store } = this.props\r\n\r\n        const web3Context = await fromConnection(\r\n            \"https://kovan.infura.io/v3/7be66f167c2e4a05981e2ffc4653dec2\",\r\n            {\r\n                gsn: { signKey, ...relay_client_config }\r\n            }\r\n        )\r\n\r\n        store.set('web3Context', web3Context)\r\n        store.set('web3', web3Context.lib)\r\n\r\n        const sdk = new RenJS('testnet')\r\n        store.set('sdk', sdk)\r\n\r\n        const swaps = localStorage.getItem('swap.transactions')\r\n        const streams = localStorage.getItem('stream.transactions')\r\n\r\n        if (swaps) {\r\n            store.set('swap.transactions', JSON.parse(swaps))\r\n        }\r\n\r\n        if (streams) {\r\n            store.set('stream.transactions', JSON.parse(streams))\r\n        }\r\n\r\n        // monitor normal swaps\r\n        initMonitoring.bind(this)()\r\n\r\n        // monitor instant swaps\r\n        initInstantMonitoring.bind(this)()\r\n\r\n        window.store = store\r\n\r\n        window.updateTx = updateTx.bind(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('amount')\r\n        const address = store.get('address')\r\n        const transactions = store.get('transactions')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.floor(Math.random() * (10 ** 16)),\r\n            type: 'deposit',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            source: 'btc',\r\n            dest: 'eth',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    async startInstant() {\r\n        const { store } = this.props\r\n        const amount = store.get('amount')\r\n        const address = store.get('address')\r\n        const transactions = store.get('transactions')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.floor(Math.random() * (10 ** 16)),\r\n            type: 'deposit',\r\n            instant: true,\r\n            awaiting: 'btc-init',\r\n            source: 'btc',\r\n            dest: 'eth',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initInstantSwap.bind(this)(tx)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const {\r\n            transactions,\r\n            adapterAddress,\r\n            selectedTab,\r\n            instantSwapSelected,\r\n            amount,\r\n            address\r\n        } = store.getState()\r\n\r\n        console.log(store.getState())\r\n\r\n        const disabled = amount < 0.0001 || (amount > 0.0005 && instantSwapSelected) || !address\r\n\r\n        return <Grid container>\r\n            {/*<Typography variant={'h1'} className={classes.title}>Kovan ETH – Testnet BTC Exchange</Typography>*/}\r\n\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='column'>\r\n                    <Grid className={classes.desc} item xs={12}>\r\n                        <span >Swap Testnet BTC for Kovan ETH</span>\r\n                        <span className={classes.btcLink}>Send testnet BTC from <a target='_blank' href={'https://tbtc.bitaps.com/'}>here</a></span>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={4} className={classes.amountContainer}>\r\n                                <TextField className={classNames(classes.input, classes.amount)}\r\n                                    variant='outlined'\r\n                                    size='small'\r\n                                    placeholder='0.000000'\r\n                                    onChange={e => {\r\n                                        store.set('amount', e.target.value)\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                    }}/>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Send to ETH Address' onChange={e => {\r\n                                    store.set('address', e.target.value)\r\n                                }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.switchContainer}>\r\n                        <FormControlLabel control={<Switch checked={instantSwapSelected}\r\n                            color='primary'\r\n                            onChange={() => store.set('instantSwapSelected', !instantSwapSelected)}\r\n                            value={\"instant\"} />} label=\"Faster swap (0 confirmations, 0.0005 BTC max)\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                        <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={instantSwapSelected ? this.startInstant.bind(this) : this.start.bind(this)}>Start Swap</Button>\r\n                    </Grid>\r\n                    {transactions && transactions.length ? <Divider className={classes.divider} /> : null}\r\n                    <Grid item xs={12} className={classes.unfinished}>\r\n                        {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                            return <Grid key={index} container direction='row' className={classes.depositItem}>\r\n                                <Grid item xs={3}>\r\n                                    {tx.amount} BTC\r\n                                </Grid>\r\n                                <Grid className={classes.depositStatus} item xs={9}>\r\n                                    {tx.awaiting === 'btc-init' ? <span>\r\n                                        {`Waiting for ${tx.instant ? '0' : '2'} confirmations to`}<Ellipsis/>{` ${tx.renBtcAddress}`}\r\n                                    </span> : null}\r\n                                    {tx.awaiting === 'ren-settle' ? <span>\r\n                                        {`Submitting to RenVM`}<Ellipsis/>\r\n                                    </span> : null}\r\n                                    {tx.awaiting === 'eth-settle' ? <span>\r\n                                        {`Submitting to Ethereum`}<Ellipsis/>\r\n                                    </span> : null}\r\n                                    {!tx.awaiting ? `Deposit complete` : null}\r\n                                    {tx.awaiting === 'btc-init' || tx.error || !tx.awaiting ? <div>\r\n                                        {tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}>View transaction</a> : null}\r\n                                        <a href='javascript:;' onClick={() => {\r\n                                            removeTx(store, tx)\r\n                                        }}>{!tx.awaiting ? 'Clear' : 'Cancel'}</a></div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                        }) : null}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    This exchange uses <a target='_blank' href='https://renproject.io/'>RenVM</a>, <a target='_blank' href='https://uniswap.io/'>Uniswap</a>, and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. All swaps abstract ETH away from the user with the <b>GaaS pattern</b>, and faster swaps are faciliated using the <b>CaaS pattern</b>. To learn more, check out our interoperability tutorials below:\r\n                </p>\r\n                <p>\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>GaaS Tutorial</a> | Gas-less transactions</li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>CaaS tutorial</a> | Faster swaps via expedited confirmations</li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n                    Swaps are submitted to the following adapter address: <a target='_blank' href={'https://kovan.etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                        <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n\r\n                </p>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(DepositContainer))\r\n","import React from 'react';\r\nimport theme from '../../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { withStore } from '@spyna/react-store'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CountUp from 'react-countup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { claim, updateStreamInfo } from '../../utils/txUtils'\r\n\r\nconst styles = () => ({\r\n    progress: {\r\n        position: 'relative',\r\n        margin: '0px auto',\r\n        width: 250,\r\n        // marginBottom: theme.spacing(2)\r\n    },\r\n    progressTop: {\r\n        color: '#eee',\r\n    },\r\n    progressMiddle: {\r\n        color: '#63ccff78',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressBottom: {\r\n        color: '#039BE5',\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    progressContainer: {\r\n        position: 'relative',\r\n        // paddingTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progressText: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        '& p': {\r\n            margin: '0px'\r\n        }\r\n        // paddingTop: theme.spacing(5)\r\n    },\r\n    totalStreamed: {\r\n        fontSize: 24,\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    spinner: {\r\n        position: 'relative',\r\n        margin: '0px auto',\r\n        width: 24,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    spinnerTop: {\r\n        color: '#eee',\r\n    },\r\n    spinnerBottom: {\r\n        color: theme.palette.primary.main,\r\n        animationDuration: '550ms',\r\n        position: 'absolute',\r\n        left: 0,\r\n    },\r\n    awaitingStatus: {\r\n        textAlign: 'center',\r\n        paddingBottom: theme.spacing(4),\r\n        fontSize: 12\r\n    },\r\n    claimButton: {\r\n        // margin: '0px auto'\r\n        textAlign: 'center',\r\n        paddingBottom: theme.spacing(3)\r\n    },\r\n    input: {\r\n        marginBottom: theme.spacing(2),\r\n        width: '100%',\r\n        '& input': {\r\n            fontSize: 12\r\n        },\r\n        '& p': {\r\n            fontSize: 12\r\n        },\r\n        '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n        }\r\n    },\r\n    hidden: {\r\n        display: 'none'\r\n    },\r\n    initContainer: {\r\n        // paddingTop: theme.spacing(3),\r\n        '& a': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    backLink: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    loadingContianer: {\r\n        // paddingTop: theme.spacing(3)\r\n    }\r\n})\r\n\r\nclass ViewStreamContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n            totalClaimable: '',\r\n            amountClaimed: '',\r\n            amountClaimedPercentage: '',\r\n            availableAmount: '',\r\n            availablePercentage: '',\r\n            remaingDuration: ''\r\n        }\r\n        this.initAddressRef = React.createRef()\r\n        this.interval = null\r\n        this.mounted = false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { selectedTx } = this.props\r\n        await updateStreamInfo.bind(this)(selectedTx)\r\n        this.setState({\r\n            loaded: true\r\n        })\r\n\r\n        const schedule = selectedTx.schedule\r\n\r\n        if (this.initAddressRef.current) {\r\n            this.initAddressRef.current.value = selectedTx.renBtcAddress\r\n        }\r\n\r\n        if (schedule) {\r\n            const start = Number(schedule.startTime)\r\n            const end = Number(schedule.startTime) + (Number(schedule.duration * 60))\r\n            const totalClaimable = (schedule.amount / (10 ** 8)).toFixed(6)\r\n            const amountClaimed = (schedule.amountClaimed / (10 ** 8)).toFixed(6)\r\n            const amountClaimedPercentage = (amountClaimed / totalClaimable).toFixed(1) * 100\r\n\r\n            this.interval = setInterval(() => {\r\n                const now = Math.floor(Date.now() / 1000)\r\n                const period = end - start\r\n                let availablePercentage = 0\r\n                if (now > end) {\r\n                    availablePercentage = 100\r\n                    clearInterval(this.interval)\r\n                } else if (start > 0){\r\n                    availablePercentage = Number((((now - start) / period) * 100).toFixed(1))\r\n                }\r\n                const availableAmount = ((availablePercentage / 100) * totalClaimable).toFixed(6)\r\n                const remaingDuration = end - now\r\n\r\n\r\n                // console.log('mounted', this.mounted)\r\n\r\n                if (!this.mounted) {\r\n                    this.setState({\r\n                        totalClaimable,\r\n                        amountClaimed,\r\n                        amountClaimedPercentage,\r\n                        availableAmount,\r\n                        availablePercentage,\r\n                        remaingDuration\r\n                    })\r\n                    this.mounted = true\r\n                } else {\r\n                    this.setState({\r\n                        availablePercentage\r\n                    })\r\n                }\r\n            }, 10);\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { selectedTx } = this.props\r\n    }\r\n\r\n    monitorStream() {\r\n    }\r\n\r\n    back() {\r\n        const { store } = this.props\r\n        store.set('stream.activeView', 'start')\r\n        store.set('stream.selectedTx', null)\r\n        console.log('back')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            selectedTx,\r\n            store\r\n        } = this.props\r\n\r\n        const {\r\n            loaded,\r\n            totalClaimable,\r\n            amountClaimed,\r\n            amountClaimedPercentage,\r\n            availableAmount,\r\n            availablePercentage,\r\n            remaingDuration\r\n        } = this.state\r\n\r\n        // console.log(this.state, this.props)\r\n\r\n        return <React.Fragment>\r\n            <div className={classes.backLink}>\r\n                <a href='javascript:;' onClick={this.back.bind(this)}>{'Back'}</a>\r\n            </div>\r\n            {!loaded ? <Grid item xs={12} className={classes.loadingContianer}>\r\n                <div className={classes.spinner}>\r\n                      <CircularProgress\r\n                        variant=\"determinate\"\r\n                        value={100}\r\n                        className={classes.spinnerTop}\r\n                        size={24}\r\n                        thickness={4}\r\n                      />\r\n                      <CircularProgress\r\n                        variant=\"indeterminate\"\r\n                        disableShrink\r\n                        className={classes.spinnerBottom}\r\n                        size={24}\r\n                        thickness={4}\r\n                      />\r\n                </div>\r\n            </Grid> :\r\n            <React.Fragment>\r\n                <Grid item xs={12} className={selectedTx.schedule ? classes.hidden : classes.initContainer}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.spinner}>\r\n                                  <CircularProgress\r\n                                    variant=\"determinate\"\r\n                                    value={100}\r\n                                    className={classes.spinnerTop}\r\n                                    size={24}\r\n                                    thickness={4}\r\n                                  />\r\n                                  <CircularProgress\r\n                                    variant=\"indeterminate\"\r\n                                    disableShrink\r\n                                    className={classes.spinnerBottom}\r\n                                    size={24}\r\n                                    thickness={4}\r\n                                  />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.awaitingStatus}>\r\n                            <span></span>\r\n                            {selectedTx.awaiting === 'btc-init' ? <span>\r\n                                {`Waiting for ${selectedTx.amount} BTC transaction to be initiated to the address below`}\r\n                            </span> : null}\r\n                            {selectedTx.awaiting === 'ren-settle' ? <span>\r\n                                {`Submitting to RenVM`}\r\n                            </span> : null}\r\n                            {selectedTx.awaiting === 'eth-settle' ? <span>\r\n                                {`Submitting to Ethereum`}\r\n                            </span> : null}\r\n                            {!selectedTx.awaiting ? `Deposit complete` : null}\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} onClick={() => {}}>\r\n                            <TextField className={classNames(classes.input, classes.address)}\r\n                                variant='outlined'\r\n                                size='small'\r\n                                placeholder='Deposit Address'\r\n                                inputRef={this.initAddressRef}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">COPY</InputAdornment>\r\n                                }}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container justify='center'>\r\n                                {selectedTx.awaiting === 'btc-init' || selectedTx.error || !selectedTx.awaiting ? <div className={classes.cancelLink}>\r\n                                    {selectedTx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+selectedTx.txHash}>View transaction</a> : null}\r\n                                </div> : null}\r\n                                {/*<span  onClick={() => store.set('activeStreamView', 'start')}>Cancel</span>*/}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={selectedTx.schedule && loaded ? classes.progressContainer : classes.hidden}>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.progress}>\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                value={100}\r\n                                className={classes.progressTop}\r\n                                size={250}\r\n                                thickness={2}\r\n                              />\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                className={classes.progressMiddle}\r\n                                size={250}\r\n                                value={Number(availablePercentage)}\r\n                                thickness={2}\r\n                              />\r\n                              <CircularProgress\r\n                                variant=\"static\"\r\n                                className={classes.progressBottom}\r\n                                size={250}\r\n                                value={Number(amountClaimedPercentage)}\r\n                                thickness={2}\r\n                              />\r\n                        </div>\r\n                        <div className={classes.progressText}>\r\n                            <div>\r\n                                <p className={classes.totalStreamed}>\r\n                                    <b>{totalClaimable} BTC</b>\r\n                                </p>\r\n                            </div>\r\n                            <p>\r\n                                <b>{amountClaimed} / <CountUp start={availableAmount} end={selectedTx.amount} duration={remaingDuration} decimals={6}>{availableAmount}</CountUp> BTC</b>\r\n                            </p>\r\n                            <p>\r\n                                <span>claimed</span>\r\n                            </p>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n                <Grid item xs={12} className={classes.claimButton}>\r\n                    <Button disabled={false}\r\n                        className={''}\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        onClick={() => {\r\n                            claim.bind(this)(selectedTx)\r\n                        }}>\r\n                        Claim BTC\r\n                    </Button>\r\n                </Grid>\r\n            </React.Fragment>}\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default withStore(withStyles(styles)(ViewStreamContainer))\r\n","import React from 'react';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = () => ({\r\n    depositItem: {\r\n        fontSize: 12,\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    depositStatus: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n})\r\n\r\nconst StreamTransaction = function(props) {\r\n    // render() {\r\n        const {\r\n            tx,\r\n            index,\r\n            classes,\r\n            onView,\r\n            onCancel\r\n        } = props\r\n        return <Grid key={index}\r\n                  container\r\n                  direction='row'\r\n                  className={classes.depositItem}>\r\n            <Grid item xs={3}>\r\n                {tx.amount} BTC\r\n            </Grid>\r\n            <Grid className={classes.depositStatus} item xs={9}>\r\n                {tx.awaiting === 'btc-init' ? <span>\r\n                    {`Waiting for ${tx.instant ? '0' : '2'} confirmations to`}{` ${tx.renBtcAddress}`}\r\n                </span> : null}\r\n                {tx.awaiting === 'btc-settle' ? <span>\r\n                    {`${tx.btcConfirmations}/${'2'} confirmations complete to`}<br />{` ${tx.renBtcAddress}`}\r\n                </span> : null}\r\n                {tx.awaiting === 'ren-settle' ? <span>\r\n                    {`Submitting to RenVM`}\r\n                </span> : null}\r\n                {tx.awaiting === 'eth-settle' ? <span>\r\n                    {`Submitting to Ethereum`}\r\n                </span> : null}\r\n                {!tx.awaiting ? <span>{`Streaming in progress`}</span> : null}\r\n                {tx.awaiting === 'btc-init' || tx.error || !tx.awaiting ? <div>\r\n                    <a href='javascript:;' className={classes.viewLink} onClick={() => (onView(tx))}>\r\n                        View\r\n                    </a>\r\n\r\n                    {tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}>View transaction</a> : null}\r\n\r\n                    {tx.awaiting ? <a href='javascript:;' onClick={() => {\r\n                        onCancel(tx)\r\n                    }}>Cancel</a> : null}\r\n                </div> : null}\r\n            </Grid>\r\n        </Grid>\r\n    // }\r\n}\r\n\r\nexport default withStyles(styles)(StreamTransaction);\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    initInstantSwap,\r\n    recoverStreams\r\n} from '../../utils/txUtils'\r\n\r\nimport ViewStream from './ViewStreamContainer'\r\nimport StreamTransaction from '../../components/StreamTransaction'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  force_gasLimit: 200000, //override requested gas limit.\r\n  gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      // borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #333',\r\n      padding: theme.spacing(3),\r\n\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    // paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      backgroundColor: '#999999'\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(4),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  },\r\n  radio: {\r\n      marginBottom: theme.spacing(2),\r\n      flexDirection: 'row',\r\n      '& span': {\r\n        fontSize: 12\r\n      }\r\n  },\r\n  searchLink: {\r\n      fontSize: 12,\r\n      minWidth: 80\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass StreamContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { store } = this.props\r\n\r\n        const txs = localStorage.getItem('stream.transactions')\r\n\r\n        if (txs) {\r\n            store.set('stream.transactions', JSON.parse(txs))\r\n        }\r\n\r\n        // // monitor normal swaps\r\n        // initMonitoring.bind(this)()\r\n        //\r\n        // // monitor instant swaps\r\n        // initInstantMonitoring.bind(this)()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('stream.amount')\r\n        const address = store.get('stream.address')\r\n        const startTime = Math.round(Date.now() / 1000)\r\n        const duration = store.get('stream.duration')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.random().toFixed(6),\r\n            type: 'stream',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            btcConfirmations: 0,\r\n            destAddress: address,\r\n            amount: amount,\r\n            startTime,\r\n            duration,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        store.set('stream.selectedTx', tx)\r\n        store.set('stream.activeView', 'view-stream')\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    viewTx(tx) {\r\n        const { store } =  this.props\r\n\r\n        store.set('stream.selectedTx', tx)\r\n        store.set('stream.activeView', 'view-stream')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const {\r\n            adapterAddress,\r\n        } = store.getState()\r\n\r\n        console.log(store.getState())\r\n\r\n        const amount = store.get('stream.amount')\r\n        const address = store.get('stream.address')\r\n        const duration = store.get('stream.duration')\r\n        const transactions = store.get('stream.transactions')\r\n        const activeView = store.get('stream.activeView')\r\n        const selectedTx = store.get('stream.selectedTx')\r\n        const searchAddress = store.get('stream.searchAddress')\r\n\r\n        const disabled = amount < 0.00011 || !address || !duration\r\n        // const disabled = false\r\n\r\n        return <Grid container>\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='row'>\r\n                    {activeView === 'start' && <React.Fragment>\r\n                        <Grid className={classes.desc} item xs={12}>\r\n                            <span >Continously Stream Testnet BTC</span>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} className={classes.amountContainer}>\r\n                                    <TextField className={classNames(classes.input, classes.amount)}\r\n                                        variant='outlined'\r\n                                        size='small'\r\n                                        placeholder='0.000000'\r\n                                        onChange={e => {\r\n                                            store.set('stream.amount', e.target.value)\r\n                                        }}\r\n                                        InputProps={{\r\n                                            endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                        }}/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Stream to BTC Address' onChange={e => {\r\n                                        store.set('stream.address', e.target.value)\r\n                                    }}/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Duration in Minutes' onChange={e => {\r\n                                        store.set('stream.duration', e.target.value)\r\n                                    }}/>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                            <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={this.start.bind(this)}>Start Stream</Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Divider className={classes.divider} />\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                            <TextField\r\n                                className={classNames(classes.input, classes.address)}\r\n                                variant='outlined'\r\n                                size='small'\r\n                                placeholder='Search by Destination Address'\r\n                                onChange={e => {\r\n                                    store.set('stream.searchAddress', e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment\r\n                                        className={classes.searchLink}\r\n                                        position=\"end\">\r\n                                            <a href='javascript:;' onClick={() => {\r\n                                                recoverStreams.bind(this)(searchAddress)\r\n                                            }}>Get Streams</a>\r\n                                        </InputAdornment>\r\n                                }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.unfinished}>\r\n                            {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                                return <StreamTransaction\r\n                                    tx={tx}\r\n                                    index={index}\r\n                                    onView={t => {\r\n                                        this.viewTx.bind(this)(t)\r\n                                    }}\r\n                                    onCancel={t => {\r\n                                        removeTx(store, t)\r\n                                    }}/>\r\n                            }) : null}\r\n                        </Grid>\r\n                    </React.Fragment>}\r\n                    {activeView === 'view-stream' && <Grid container direction='column'>\r\n                        <Grid item xs={12}>\r\n                            <ViewStream selectedTx={selectedTx} />\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    This exchange uses <a target='_blank' href='https://renproject.io/'>RenVM</a>, <a target='_blank' href='https://uniswap.io/'>Uniswap</a>, and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. All swaps abstract ETH away from the user with the <b>GaaS pattern</b>, and faster swaps are faciliated using the <b>CaaS pattern</b>. To learn more, check out our interoperability tutorials below:\r\n                </p>\r\n                <ul>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>GaaS Tutorial</a> | Gas-less transactions</li>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>CaaS tutorial</a> | Faster swaps via expedited confirmations</li>\r\n                </ul>\r\n                <p>\r\n                    Swaps are submitted to the following adapter address: <a target='_blank' href={'https://kovan.etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                </p>\r\n                <ul>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                    <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                    <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                </ul>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(StreamContainer))\r\n","import React from 'react';\r\nimport { createStore, withStore } from '@spyna/react-store'\r\n\r\n\r\nimport NavContainer from './containers/NavContainer'\r\nimport ActionTabsContainer from './containers/ActionTabsContainer'\r\nimport DepositContainer from './containers/DepositContainer'\r\nimport StreamContainer from './containers/Stream/StreamContainer'\r\n\r\n\r\nimport theme from './theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport { withStyles, ThemeProvider } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\n// import TabPanel from '@material-ui/core/TabPanel'\r\n\r\nconst styles = () => ({\r\n})\r\n\r\nconst initialState = {\r\n    'selectedActionTab': 'exchange',\r\n    // exchange\r\n    'swap.transactions': [],\r\n    'adapterAddress': '0xade8792c3ee90320cabde200ccab34b27cc88651',\r\n    'instantSwapSelected': false,\r\n    'amount': '',\r\n    'address': '',\r\n    // streaming\r\n    'stream.adapterAddress': '0x49ADDF7Cae3552C3f6991b6931DbcfAc28E11846',\r\n    'stream.transactions': [],\r\n    'stream.amount': '',\r\n    'stream.destination': '',\r\n    'stream.duration': '',\r\n    'stream.activeView': 'start',\r\n    'stream.selectedTx': null,\r\n    'stream.searchAddress': ''\r\n}\r\n\r\nconst AppWrapper = withStore(function(props) {\r\n    const { store } = props\r\n    const {\r\n        selectedActionTab\r\n    } = store.getState()\r\n\r\n    return <Container maxWidth=\"lg\">\r\n        <Grid container>\r\n            {/*<Grid item xs={12}>\r\n                <NavContainer />\r\n            </Grid>*/}\r\n            <Grid item sm={3}>\r\n                <ActionTabsContainer />\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                {selectedActionTab === 'exchange' && <DepositContainer />}\r\n                {selectedActionTab === 'stream' && <StreamContainer />}\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n})\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <AppWrapper />\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createStore(withStyles(styles)(App), initialState)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}