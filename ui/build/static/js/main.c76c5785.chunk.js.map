{"version":3,"sources":["theme/theme.js","utils/txUtils.js","containers/DepositContainer.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","grey","overrides","PrivateNotchedOutline","root","MuiOutlinedInput","notchedOutline","borderColor","borderWidth","MuiTextField","MuiToggleButtonGroup","grouped","borderLeft","MuiToggleButton","border","backgroundColor","color","fontWeight","addTx","store","tx","txs","get","push","set","localStorage","setItem","JSON","stringify","window","updateTx","newTx","map","t","id","removeTx","filter","completeDeposit","a","this","props","web3","web3Context","adapterAddress","params","awaiting","renResponse","renSignature","adapterContract","eth","Contract","adapterABI","lib","getGasPrice","gasPrice","Object","assign","methods","shiftInWithSwap","contractParams","value","sendAmount","args","nhash","send","from","accounts","Math","round","result","console","log","txHash","transactionHash","error","initShiftIn","shiftIn","amount","renBtcAddress","ethSig","destAddress","getState","sdk","messageID","sendTo","contractFn","name","type","data","sendToken","RenJS","Tokens","BTC","Btc2Eth","floor","nonce","gatewayAddress","initDeposit","bind","addr","waitForDeposit","deposit","submitToRenVM","signature","response","initInstantSwap","address","fetch","method","headers","body","sourceAmount","sourceAsset","destinationAsset","destinationAddress","request","json","initInstantMonitoring","setInterval","instant","req","status","initMonitoring","p","signKey","ephemeral","relay_client_config","txfee","force_gasLimit","gasLimit","verbose","Ellipsis","state","string","interval","length","setState","clearInterval","React","Component","DepositContainer","fromConnection","gsn","getItem","parse","swapMonitor","random","toFixed","source","dest","classes","transactions","instantSwapSelected","selectedTab","disabled","Grid","container","Typography","variant","className","title","item","xs","contentContainer","direction","desc","btcLink","target","href","amountContainer","TextField","classNames","input","size","placeholder","onChange","e","InputProps","endAdornment","InputAdornment","position","switchContainer","FormControlLabel","control","Switch","checked","label","swapButtonContainer","Button","swapButton","onClick","startInstant","start","Divider","divider","unfinished","index","key","depositItem","depositStatus","viewLink","info","caption","withStyles","flexGrow","paper","navContainer","paddingTop","theme","spacing","paddingBottom","minHeight","padding","marginTop","marginBottom","width","fontSize","paddingRight","display","justifyContent","alignItems","marginRight","actionTabs","textAlign","withStore","App","ThemeProvider","Container","maxWidth","createStore","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c76c5785.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#000',\r\n            main: '#000',\r\n            dark: '#000',\r\n            contrastText: '#fff',\r\n        },\r\n        // primary: blueGrey,\r\n        secondary: grey,\r\n    },\r\n    overrides: {\r\n        // Style sheet name ⚛️\r\n        // MuiButton: {\r\n        //   // Name of the rule\r\n        //   text: {\r\n        //     // Some CSS\r\n        //     color: 'white',\r\n        //   },\r\n        // }\r\n        PrivateNotchedOutline: {\r\n            root: {\r\n            }\r\n        },\r\n        // '.MuiOutlinedInput-root:hover':{\r\n        //     borderColor: '#EBEBEB !important'\r\n        // },\r\n        MuiOutlinedInput: {\r\n            // root:{\r\n            //     '&:hover': {\r\n            //         // notchedOutline: {\r\n            //             borderColor: '#EBEBEB'\r\n            //         // }\r\n            //     }\r\n            // },\r\n            notchedOutline: {\r\n                borderColor: '#EBEBEB !important',\r\n                borderWidth: '1px !important'\r\n            }\r\n        },\r\n        MuiTextField: {\r\n\r\n        },\r\n        MuiToggleButtonGroup: {\r\n          grouped: {\r\n            '&:not(:first-child)': {\r\n              borderLeft: '1px solid #EBEBEB'\r\n            }\r\n          }\r\n        },\r\n        // .MuiToggleButtonGroup-grouped:not(:first-child)\r\n        MuiToggleButton: {\r\n            root: {\r\n                border: '1px solid #EBEBEB',\r\n                backgroundColor: '#fff',\r\n                '&.Mui-selected': {\r\n                    // back\r\n                    backgroundColor: '#fff !important',\r\n                    color: '#000',\r\n                    fontWeight: '500',\r\n                    '&:hover': {\r\n                        backgroundColor: '#fff !important',\r\n                    }\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: '#fff !important',\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","import RenJS from \"@renproject/ren\";\r\nimport adapterABI from './exchangeAdapterSimpleABI.json'\r\n\r\nconst API_URL = ''\r\n// const API_URL = 'http://localhost:3000'\r\nlet swapMonitor = null\r\n\r\nexport const addTx = (store, tx) => {\r\n    let txs = store.get('transactions')\r\n    txs.push(tx)\r\n    store.set('transactions', txs)\r\n    localStorage.setItem('transactions', JSON.stringify(txs))\r\n    // for debugging\r\n    window.txs = txs\r\n}\r\n\r\nexport const updateTx = (store, newTx) => {\r\n    // console.log('updateTx', newTx)\r\n    const txs = store.get('transactions').map(t => {\r\n        if (t.id === newTx.id) {\r\n            // const newTx = Object.assign(t, props)\r\n            return newTx\r\n        }\r\n        return t\r\n    })\r\n    store.set('transactions', txs)\r\n    localStorage.setItem('transactions', JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window.txs = txs\r\n}\r\n\r\nexport const removeTx = (store, id) => {\r\n    let txs = store.get('transactions').filter(t => (t.id !== id))\r\n    // console.log(txs)\r\n    store.set('transactions', txs)\r\n    localStorage.setItem('transactions', JSON.stringify(txs))\r\n\r\n    // for debugging\r\n    window.txs = txs\r\n}\r\n\r\nexport const txExists = function(tx) {\r\n    return this.props.store.get('transactions').filter(t => t.id === tx.id).length > 0\r\n}\r\n\r\nexport const completeDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const web3 = store.get('web3')\r\n    const web3Context = store.get('web3Context')\r\n\r\n    const adapterAddress = store.get('adapterAddress')\r\n    const { params, awaiting, renResponse, renSignature } = tx\r\n\r\n    const adapterContract = new web3.eth.Contract(adapterABI, adapterAddress)\r\n    const gasPrice = await web3Context.lib.eth.getGasPrice()\r\n\r\n    updateTx(store, Object.assign(tx, { awaiting: 'eth-settle' }))\r\n\r\n    try {\r\n        const result = await adapterContract.methods.shiftInWithSwap(\r\n            params.contractParams[0].value,\r\n            params.sendAmount,\r\n            renResponse.args.nhash,\r\n            renSignature\r\n        ).send({\r\n            from: web3Context.accounts[0],\r\n            gasPrice: Math.round(gasPrice * 1.5)\r\n        })\r\n        console.log('result', result)\r\n        updateTx(store, Object.assign(tx, { awaiting: '', txHash: result.transactionHash }))\r\n    } catch(e) {\r\n        console.log(e)\r\n        updateTx(store, Object.assign(tx, { error: true }))\r\n    }\r\n}\r\n\r\nexport const initShiftIn = function(tx) {\r\n    const { amount, renBtcAddress, params, ethSig, destAddress } = tx\r\n    const {\r\n        sdk,\r\n        adapterAddress\r\n    } = this.props.store.getState()\r\n\r\n    // recreate shift in and override with existing data\r\n    let shiftIn\r\n    if (ethSig) {\r\n        shiftIn = sdk.shiftIn({\r\n            messageID: ethSig.messageID,\r\n            sendTo: adapterAddress,\r\n            contractFn: \"shiftInWithSwap\",\r\n            contractParams: [\r\n                {\r\n                    name: \"_to\",\r\n                    type: \"address\",\r\n                    value: destAddress,\r\n                }\r\n            ],\r\n        });\r\n    } else {\r\n        let data = {\r\n            sendToken: RenJS.Tokens.BTC.Btc2Eth,\r\n            sendAmount: Math.floor(amount * (10 ** 8)), // Convert to Satoshis\r\n            sendTo: adapterAddress,\r\n            contractFn: \"shiftInWithSwap\",\r\n            contractParams: [\r\n                {\r\n                    name: \"_to\",\r\n                    type: \"address\",\r\n                    value: destAddress,\r\n                }\r\n            ],\r\n        }\r\n\r\n        if (params && params.nonce) {\r\n            data.nonce = params.nonce\r\n        }\r\n\r\n        shiftIn = sdk.shiftIn(data)\r\n    }\r\n\r\n    if (renBtcAddress && params) {\r\n        shiftIn.params = params\r\n        shiftIn.gatewayAddress = renBtcAddress\r\n    }\r\n\r\n    return shiftIn\r\n}\r\n\r\nexport const initDeposit = async function(tx) {\r\n    const { store }  = this.props\r\n    const { params, awaiting, renResponse, renSignature, error } = tx\r\n\r\n    // completed\r\n    if (!awaiting) return\r\n\r\n    // clear error when re-attempting\r\n    if (error) {\r\n        updateTx(store, Object.assign(tx, { error: false }))\r\n    }\r\n\r\n    // ren already exposed a signature\r\n    if (renResponse && renSignature) {\r\n        completeDeposit.bind(this)(tx)\r\n    } else {\r\n        // create or re-create shift in\r\n        const shiftIn = await initShiftIn.bind(this)(tx)\r\n\r\n        if (!params) {\r\n            addTx(store, Object.assign(tx, {\r\n                params: shiftIn.params,\r\n                renBtcAddress: shiftIn.addr()\r\n            }))\r\n        }\r\n\r\n        // wait for btc\r\n        const deposit = await shiftIn.waitForDeposit(2);\r\n\r\n        updateTx(store, Object.assign(tx, { awaiting: 'ren-settle' }))\r\n\r\n        try {\r\n            const signature = await deposit.submitToRenVM();\r\n            updateTx(store, Object.assign(tx, {\r\n                renResponse: signature.response,\r\n                renSignature: signature.signature\r\n            }))\r\n\r\n            completeDeposit.bind(this)(tx)\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const initInstantSwap = async function(tx) {\r\n    const { store }  = this.props\r\n    const { params, awaiting, renResponse, renSignature, error } = tx\r\n\r\n    // async getGateway() {\r\n        const {\r\n            amount,\r\n            address\r\n        } = this.props.store.getState()\r\n\r\n\r\n        const request = await fetch(`${API_URL}/swap-gateway/create`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                sourceAmount: amount,\r\n                sourceAsset: 'BTC',\r\n                destinationAsset: 'ETH',\r\n                destinationAddress: address\r\n            })\r\n        })\r\n        const data = await request.json()\r\n        addTx(store, Object.assign(tx, {\r\n            renBtcAddress: data.gatewayAddress\r\n        }))\r\n}\r\n\r\nexport const initInstantMonitoring = function() {\r\n    swapMonitor = setInterval(async () => {\r\n        const transactions = this.props.store.get('transactions')\r\n        transactions.filter((t) => (t.instant && t.awaiting === 'btc-init')).map(async tx => {\r\n            const req = await fetch(`${API_URL}/swap-gateway/status?gateway=${tx.renBtcAddress}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const data = await req.json()\r\n            if (data.status === 'complete') {\r\n                updateTx(this.props.store, Object.assign(tx, {\r\n                    awaiting: '',\r\n                    txHash: data.txHash\r\n                }))\r\n            }\r\n        })\r\n    }, 1000)\r\n}\r\n\r\nexport const initMonitoring = function() {\r\n    const transactions = this.props.store.get('transactions')\r\n    const pending = transactions.filter(t => (t.awaiting))\r\n    pending.map(p => {\r\n        initDeposit.bind(this)(p)\r\n    })\r\n}\r\n\r\nexport default {\r\n    addTx,\r\n    updateTx,\r\n    removeTx,\r\n    txExists,\r\n    completeDeposit,\r\n    initShiftIn,\r\n    initDeposit,\r\n    initMonitoring\r\n}\r\n","import React from 'react';\r\nimport { withStore } from '@spyna/react-store'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport theme from '../theme/theme'\r\nimport classNames from 'classnames'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import Tabs from '@material-ui/core/Tabs';\r\n// import Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport RenJS from \"@renproject/ren\";\r\n\r\nimport {\r\n    fromConnection,\r\n    ephemeral\r\n} from \"@openzeppelin/network/lib\";\r\n\r\nimport {\r\n    initDeposit,\r\n    initMonitoring,\r\n    initInstantMonitoring,\r\n    removeTx,\r\n    initInstantSwap\r\n} from '../utils/txUtils'\r\n\r\nconst REACT_APP_TX_FEE = 100;\r\nconst signKey = ephemeral();\r\n// const gasPrice = 10000000000;\r\nconst relay_client_config = {\r\n  txfee: REACT_APP_TX_FEE,\r\n  // force_gasPrice: gasPrice, //override requested gas price\r\n  // gasPrice: gasPrice, //override requested gas price\r\n  force_gasLimit: 200000, //override requested gas limit.\r\n  gasLimit: 200000, //override requested gas limit.\r\n  verbose: true\r\n};\r\n\r\n\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n  },\r\n  navContainer: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    minHeight: 52\r\n  },\r\n  contentContainer: {\r\n      // boxShadow: '0px 0px 30px 0px rgba(0, 0, 0, 0.05)',\r\n      // borderRadius: theme.shape.borderRadius,\r\n      border: '1px solid #333',\r\n      padding: theme.spacing(3),\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(3),\r\n      '& input': {\r\n      }\r\n  },\r\n  input: {\r\n      marginBottom: theme.spacing(2),\r\n      width: '100%',\r\n      '& input': {\r\n          fontSize: 12\r\n      },\r\n      '& p': {\r\n          fontSize: 12\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline': {\r\n          borderColor: 'rgba(0, 0, 0, 0.5) !important'\r\n      }\r\n  },\r\n  amountContainer: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  amount: {\r\n  },\r\n  title: {\r\n      fontSize: 16,\r\n      fontWeight: 500,\r\n      marginTop: theme.spacing(4)\r\n  },\r\n  unfinished: {\r\n      // marginTop: theme.spacing(3)\r\n  },\r\n  depositItem: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1)\r\n  },\r\n  depositStatus: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n  },\r\n  info: {\r\n      fontSize: 12,\r\n      marginBottom: theme.spacing(1),\r\n      '& p': {\r\n          marginBottom: 0\r\n      }\r\n  },\r\n  divider: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3)\r\n  },\r\n  desc: {\r\n      marginBottom: theme.spacing(3),\r\n      fontSize: 14,\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'space-between'\r\n  },\r\n  btcLink: {\r\n      fontSize: 12\r\n  },\r\n  viewLink: {\r\n      fontSize: 12,\r\n      marginRight: theme.spacing(1),\r\n  },\r\n  actionTabs: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n  },\r\n  swapButtonContainer: {\r\n      textAlign: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1)\r\n  },\r\n  switchContainer: {\r\n      textAlign: 'center',\r\n      paddingBottom: theme.spacing(1),\r\n      '& .MuiFormControlLabel-label': {\r\n          fontSize: 12\r\n      }\r\n  },\r\n  swapButton: {\r\n  }\r\n})\r\n\r\nclass Ellipsis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            string: ''\r\n        }\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const string = this.state.string\r\n            if (string.length < 3) {\r\n                this.setState({ string: (string + '.') })\r\n            } else {\r\n                this.setState({ string: '' })\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <span>{this.state.string}</span>\r\n    }\r\n}\r\n\r\nclass DepositContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { store } = this.props\r\n\r\n        const web3Context = await fromConnection(\r\n            \"https://kovan.infura.io/v3/7be66f167c2e4a05981e2ffc4653dec2\",\r\n            {\r\n                gsn: { signKey, ...relay_client_config }\r\n            }\r\n        )\r\n\r\n        store.set('web3Context', web3Context)\r\n        store.set('web3', web3Context.lib)\r\n\r\n        const sdk = new RenJS('testnet')\r\n        store.set('sdk', sdk)\r\n\r\n        const txs = localStorage.getItem('transactions')\r\n\r\n        if (txs) {\r\n            store.set('transactions', JSON.parse(txs))\r\n        }\r\n\r\n        // monitor normal swaps\r\n        initMonitoring.bind(this)()\r\n\r\n        // monitor instant swaps\r\n        initInstantMonitoring.bind(this)()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.swapMonitor)\r\n    }\r\n\r\n    async start() {\r\n        const { store } = this.props\r\n        const amount = store.get('amount')\r\n        const address = store.get('address')\r\n        const transactions = store.get('transactions')\r\n\r\n        const tx = {\r\n            id: 'tx-' + Math.random().toFixed(6),\r\n            type: 'deposit',\r\n            instant: false,\r\n            awaiting: 'btc-init',\r\n            source: 'btc',\r\n            dest: 'eth',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initDeposit.bind(this)(tx)\r\n    }\r\n\r\n    async startInstant() {\r\n        const { store } = this.props\r\n        const amount = store.get('amount')\r\n        const address = store.get('address')\r\n        const transactions = store.get('transactions')\r\n\r\n        const tx = {\r\n            id: Math.random(),\r\n            type: 'deposit',\r\n            instant: true,\r\n            awaiting: 'btc-init',\r\n            source: 'btc',\r\n            dest: 'eth',\r\n            destAddress: address,\r\n            amount: amount,\r\n            error: false,\r\n            txHash: ''\r\n        }\r\n\r\n        initInstantSwap.bind(this)(tx)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            store\r\n        } = this.props\r\n\r\n        const {\r\n            transactions,\r\n            adapterAddress,\r\n            selectedTab,\r\n            instantSwapSelected,\r\n            amount,\r\n            address\r\n        } = store.getState()\r\n\r\n        console.log(store.getState())\r\n\r\n        const disabled = amount < 0.0001 || (amount > 0.0005 && instantSwapSelected) || !address\r\n\r\n        return <Grid container>\r\n            <Typography variant={'h1'} className={classes.title}>Kovan ETH – Testnet BTC Exchange</Typography>\r\n\r\n            <Grid item xs={12} className={classes.contentContainer}>\r\n                <Grid container direction='column'>\r\n                    <Grid className={classes.desc} item xs={12}>\r\n                        <span >Swap Testnet BTC for Kovan ETH</span>\r\n                        <span className={classes.btcLink}>Send testnet BTC from <a target='_blank' href={'https://tbtc.bitaps.com/'}>here</a></span>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={4} className={classes.amountContainer}>\r\n                                <TextField className={classNames(classes.input, classes.amount)}\r\n                                    variant='outlined'\r\n                                    size='small'\r\n                                    placeholder='0.000000'\r\n                                    onChange={e => {\r\n                                        store.set('amount', e.target.value)\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment className={classes.endAdornment} position=\"end\">BTC</InputAdornment>\r\n                                    }}/>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <TextField className={classNames(classes.input, classes.address)} variant='outlined' size='small' placeholder='Send to ETH Address' onChange={e => {\r\n                                    store.set('address', e.target.value)\r\n                                }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.switchContainer}>\r\n                        <FormControlLabel control={<Switch checked={instantSwapSelected}\r\n                            color='primary'\r\n                            onChange={() => store.set('instantSwapSelected', !instantSwapSelected)}\r\n                            value={\"instant\"} />} label=\"Faster swap (0 confirmations, 0.0005 BTC max)\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.swapButtonContainer}>\r\n                        <Button disabled={disabled} className={classes.swapButton} variant='outlined' color='primary' onClick={instantSwapSelected ? this.startInstant.bind(this) : this.start.bind(this)}>Start Swap</Button>\r\n                    </Grid>\r\n                    {transactions && transactions.length ? <Divider className={classes.divider} /> : null}\r\n                    <Grid item xs={12} className={classes.unfinished}>\r\n                        {transactions && transactions.length ? transactions.map((tx, index) => {\r\n                            return <Grid key={index} container direction='row' className={classes.depositItem}>\r\n                                <Grid item xs={3}>\r\n                                    {tx.amount} BTC\r\n                                </Grid>\r\n                                <Grid className={classes.depositStatus} item xs={9}>\r\n                                    {tx.awaiting === 'btc-init' ? <span>\r\n                                        {`Waiting for ${tx.instant ? '0' : '2'} confirmations to`}<Ellipsis/>{` ${tx.renBtcAddress}`}\r\n                                    </span> : null}\r\n                                    {tx.awaiting === 'ren-settle' ? <span>\r\n                                        {`Submitting to RenVM`}<Ellipsis/>\r\n                                    </span> : null}\r\n                                    {tx.awaiting === 'eth-settle' ? <span>\r\n                                        {`Submitting to Ethereum`}<Ellipsis/>\r\n                                    </span> : null}\r\n                                    {!tx.awaiting ? `Deposit complete` : null}\r\n                                    {tx.awaiting === 'btc-init' || tx.error || !tx.awaiting ? <div>\r\n                                        {tx.txHash ? <a className={classes.viewLink} target='_blank' href={'https://kovan.etherscan.io/tx/'+tx.txHash}>View transaction</a> : null}\r\n                                        <a href='javascript:;' onClick={() => {\r\n                                            removeTx(store, tx.id)\r\n                                        }}>{!tx.awaiting ? 'Clear' : 'Cancel'}</a></div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                        }) : null}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {<Grid item xs={12} className={classes.info}>\r\n                <p>\r\n                    <b className={classes.caption}>How it Works</b>\r\n                    <br/>\r\n                    <br/>\r\n                    This exchange uses <a target='_blank' href='https://renproject.io/'>RenVM</a>, <a target='_blank' href='https://uniswap.io/'>Uniswap</a>, and Open Zeppelin's <a target='_blank' href='https://gsn.openzeppelin.com/'>GSN</a> to facilitate trustless interoperabilty between Bitcoin and Ethereum. All swaps abstract ETH away from the user with the <b>GaaS pattern</b>, and faster swaps are faciliated using the <b>CaaS pattern</b>. To learn more, check out our interoperability tutorials below:\r\n                </p>\r\n                <p>\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>GaaS tutorial</a> (Gas-less tranasactions)</li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/tutorials'}>CaaS tutorial</a> (Faster swaps via expedited confirmations)</li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n                    Swaps are submitted to the following adapter address: <a target='_blank' href={'https://kovan.etherscan.io/address/'+adapterAddress}>{adapterAddress}</a>\r\n                </p>\r\n                <p>\r\n                    To learn more about building interoperable applications like this with RenVM, check out our <a target='_blank' href='https://renproject.io/developers'>developer center</a> or the following links:\r\n                    <ul>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/ren-sdk'}>Getting started with RenJS</a></li>\r\n                        <li><a target='_blank' href={'https://docs.renproject.io/developers/gateway-js'}>Getting started with GatewayJS</a></li>\r\n                        <li><a target='_blank' href={'https://github.com/renproject/ren/wiki'}>Github Spec</a></li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n\r\n                </p>\r\n            </Grid>}\r\n\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withStore(DepositContainer))\r\n","import React from 'react';\r\nimport { createStore, withStore } from '@spyna/react-store'\r\n\r\nimport DepositContainer from './containers/DepositContainer'\r\n\r\nimport theme from './theme/theme'\r\nimport classNames from 'classnames'\r\n\r\nimport { withStyles, ThemeProvider } from '@material-ui/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\n\r\nconst styles = () => ({})\r\n\r\nconst initialState = {\r\n    transactions: [],\r\n    adapterAddress: '0xade8792c3ee90320cabde200ccab34b27cc88651',\r\n    selectedTab: 0,\r\n    instantSwapSelected: false,\r\n    amount: '',\r\n    address: ''\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const { classes, store } = this.props\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <Container maxWidth=\"sm\">\r\n                    <DepositContainer />\r\n                </Container>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createStore(withStyles(styles)(App), initialState)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}